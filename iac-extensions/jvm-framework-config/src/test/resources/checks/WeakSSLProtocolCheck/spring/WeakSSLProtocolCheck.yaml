## Checking message and location
server:
  port: 8080
  ssl:
    enabled: true
    enabled-protocols: [TLSv1.1] # Noncompliant
#                       ^^^^^^^
    key-store: "classpath:keystore.p12"
    key-store-password: "password"

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols: [TLSv1.1] # Noncompliant
#                               ^^^^^^^
          key:
            alias: "secure-service"
          keystore:
            location: "classpath:keystore.p12"
            password: "password"
            type: "PKCS12"

---
## Checking all sensitive values and secondary locations
server:
  ssl:
    enabled-protocols: [TLSv1.1, foo, TLSv1.0] # Noncompliant
#                       ^^^^^^^       ^^^^^^^< 1{{Other weak protocol.}}

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols: [TLSv1.1, foo, TLSv1.0] # Noncompliant
#                               ^^^^^^^       ^^^^^^^< 1{{Other weak protocol.}}

---
## Checking all sensitive keys single value
server:
  ssl:
    enabled-protocols:
      - TLSv1.1 # Noncompliant{{Change this code to use a stronger protocol.}}
#       ^^^^^^^
      - foo
      - TLSv1.0f # compliant because it is not a valid protocol
      - TLSv1.2 # compliant
      - TLSv1.0
#       ^^^^^^^< 1{{Other weak protocol.}}
      - TLSv1.0
#       ^^^^^^^< 2{{Other weak protocol.}}

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols:
              - TLSv1.1 # Noncompliant{{Change this code to use a stronger protocol.}}
#               ^^^^^^^
              - foo
              - TLSv1.0
#               ^^^^^^^< 1{{Other weak protocol.}}

---
## Checking all array properties but single value
server:
  ssl:
    enabled-protocols: TLSv1.1 # Noncompliant{{Change this code to use a stronger protocol.}}
#                      ^^^^^^^

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols: "TLSv1.0" # Noncompliant{{Change this code to use a stronger protocol.}}
#                              ^^^^^^^^^
---
## Checking all array properties but coma-separated values
server:
  ssl:
    enabled-protocols: TLSv1.1,foo,TLSv1.0 # Noncompliant{{Change this code to use a stronger protocol.}}
#                      ^^^^^^^^^^^^^^^^^^^

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols: "TLSv1.1,foo,TLSv1.0" # Noncompliant{{Change this code to use a stronger protocol.}}
#                              ^^^^^^^^^^^^^^^^^^^^^
---
## Checking all array properties but coma-separated values with space
server:
  ssl:
    enabled-protocols: TLSv1.2, TLSv1.0 # Noncompliant{{Change this code to use a stronger protocol.}}
#                      ^^^^^^^^^^^^^^^^

spring:
  ssl:
    bundle:
      jks:
        server:
          options:
            enabled-protocols: "TLSv1.2, foo, TLSv1.0" # Noncompliant{{Change this code to use a stronger protocol.}}
#                              ^^^^^^^^^^^^^^^^^^^^^^^

---
server:
  ssl:
    enabledProtocols: [TLSv1.1, foo, TLSv1.0] # compliant as name of key doesn't match
---
server:
  ssl:
    enabled-protocols:
      suffix: [TLSv1.1, foo, TLSv1.0] # compliant as name of key doesn't match

---
server:
  ssl:
    enabled-protocols[0]: [TLSv1.1, foo, TLSv1.0] # compliant as name of key doesn't match
---
server:
  ssl:
    enabled-protocols[0]:
