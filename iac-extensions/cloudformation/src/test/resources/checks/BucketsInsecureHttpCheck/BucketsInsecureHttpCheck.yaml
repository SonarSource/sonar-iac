AWSTemplateFormatVersion: 2010-09-09
Resources:
  S3BucketWithoutPolicy:
    Type: 'AWS::S3::Bucket' # Noncompliant {{Make sure authorizing HTTP requests is safe here.}}
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"

  S3BucketWrongCondition:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyWrongCondition:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongCondition
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: arn:aws:s3:::mynoncompliantbuckets6249/*
            Condition:
              Bool:
                "aws:SecureTransport": true
#                                      ^^^^< {{HTTPS requests are denied.}}
  S3BucketWrongPrincipal:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyWrongPrincipal:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongPrincipal
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny # ok requests are denied
            Principal:
              AWS:
            # ^[el=+3;ec=12]< {{All principals should be restricted.}}
                - 'arn:aws:iam::127311923021:root'
            Action: "*" # ok for any actions
            Resource: arn:aws:s3:::mynoncompliantbuckets6249/* # ok for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false # ok http requests are denied

  S3BucketWrongEffect:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyWrongEffect:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongEffect
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            #       ^^^^^< {{Non-conforming requests should be denied.}}
            Principal:
              AWS: "*"
            Action: "*"
            Resource: arn:aws:s3:::mynoncompliantbuckets6249/*
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketWrongAction:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyWrongAction:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongAction
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "notAll"
            #       ^^^^^^^^< {{All S3 actions should be restricted.}}
            Resource: arn:aws:s3:::mynoncompliantbuckets6249/*
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketWrongResource:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyWrongResource:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongResource
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: arn:aws:s3:::mynoncompliantbuckets6249/foo
                 #    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^< {{All resources should be restricted.}}
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketCompliant:
    Type: 'AWS::S3::Bucket' # Compliant
    Properties:
      BucketName: "mycompliantbuckets6249"
  S3BucketPolicyCompliant:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: "mycompliantbuckets6249"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketCompliantStringPrincipal:
    Type: 'AWS::S3::Bucket' # Compliant
    Properties:
      BucketName: "S3BucketCompliantStringPrincipal"
  S3BucketPolicyCompliantStringPrincipal:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketCompliantStringPrincipal
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal: "*"
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketWithBrokenBucketLink:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: []
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false
  SomeRandomResource:
    Type: 'NoBucketAndNoPolicy'

  S3BucketCompliantResourcesList:
    Type: 'AWS::S3::Bucket' # Compliant
    Properties:
      BucketName: "mycompliantbuckets6249"
  S3BucketPolicyCompliantResourcesList:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketCompliantResourcesList
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource:
              - arn:aws:s3:::mycompliantbuckets6249
              - arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketCompliantResourcesListWithJoin:
    Type: 'AWS::S3::Bucket' # Compliant
    Properties:
      BucketName: "mycompliantbuckets6249"
  S3BucketPolicyCompliantResourcesListWithJoin:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketCompliantResourcesList
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource:
              - !GetAtt 'S3BucketCompliantResourcesListWithJoin.Arn'
              - !Join
                - ''
                - - !GetAtt 'S3BucketCompliantResourcesListWithJoin.Arn'
                  - /*
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketNonCompliantResourcesList:
    Type: 'AWS::S3::Bucket' # Noncompliant
    #     ^^^^^^^^^^^^^^^^^
    Properties:
      BucketName: "mynoncompliantbuckets6249"
  S3BucketPolicyNonCompliantResourcesList:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketNonCompliantResourcesList
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource:
              - arn:aws:s3:::mycompliantbuckets6249
            # ^[el=+3;ec=12]< {{All resources should be restricted.}}
              - arn:aws:s3:::mycompliantbuckets6249
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketCompliantJoinedResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "S3BucketCompliantJoinedResource"
  S3BucketCompliantJoinedResourcePolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketCompliantJoinedResource
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: !Join [ '', [ !GetAtt S3BucketCompliantJoinedResource.Arn, '/*' ] ]
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketWrongJoinedResource:
    Type: AWS::S3::Bucket # Noncompliant
    #     ^^^^^^^^^^^^^^^
    Properties:
      BucketName: "S3BucketWrongJoinedResource"
  S3BucketWrongJoinedResourcePolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongJoinedResource
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: !Join [ '', [ !GetAtt S3BucketWrongJoinedResource.Arn, 'foo' ] ]
                 #    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^< {{All resources should be restricted.}}
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketWrongEmptyJoinedResource:
    Type: AWS::S3::Bucket # Noncompliant
    #     ^^^^^^^^^^^^^^^
    Properties:
      BucketName: "S3BucketWrongEmptyJoinedResource"
  S3BucketWrongEmptyJoinedResourcePolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3BucketWrongEmptyJoinedResource
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: !Join [ ]
                 #    ^^^^^^^^^< {{All resources should be restricted.}}
            Condition:
              Bool:
                "aws:SecureTransport": false

  # SONARIAC-323 Unsimulated intrinsic functions lead to false positives and negatives
  CompliantBucketDueToResolvedRelation:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: "mycompliantbucket6249"
  CompliantPolicyDueToResolvedRelation:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      # Bucket relation is not resolved. However, a function call, which is not ref or sub, would not make sense here.
      Bucket: !Join [ '', [ 'mycompliantbucket6249' ] ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false
  AnotherCompliantPolicyDueToResolvedRelation:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket:
        Fn::Join: [ '', [ 'mycompliantbucket6249' ] ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": false
  # Coverage purpose
  PolicyWithNonExistentFunctionCall:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !NonExistentFunctionCall [ '', [ 'mycompliantbucket6249' ] ]
  # Coverage purpose
  PolicyWithUnexpectedJoinResources:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
        Bucket: !Join [ '', [ a: b ] ]

  NonCompliantBucketDueToResolvedRelation:
    Type: 'AWS::S3::Bucket' # Noncompliant
    Properties:
      BucketName: "mynoncompliantbucket6249"
  NonompliantPolicyDueToResolvedRelation:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Join [ '', [ 'mynoncompliantbucket6249' ] ]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*" # all principals should use https
            Action: "*" # for any actions
            Resource: arn:aws:s3:::mycompliantbuckets6249/* # for any resources
            Condition:
              Bool:
                "aws:SecureTransport": true

  # SONARIAC-324 S6249 raises false positives on policies on unknown statement
  CompliantBucketDueToInsecureResourcePolicy:
    Type: AWS::S3::Bucket # Noncompliant
    Properties:
      BucketName: "S3BucketWrongEmptyJoinedResource"
  CompliantPolicyDueToInsecureResourcePolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CompliantBucketDueToInsecureResourcePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: !GetAtt secure.resouce.policy
            Condition:
              Bool:
                "aws:SecureTransport": false

  NonCompliantBucketDueToInvalidFunctionCall:
    Type: AWS::S3::Bucket # Noncompliant
    Properties:
      BucketName: "S3BucketWrongEmptyJoinedResource"
  NonCompliantPolicyDueToInvalidFunctionCall:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref NonCompliantBucketDueToInvalidFunctionCall
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: !Join ['foo', 'bar']
            Condition:
              Bool:
                "aws:SecureTransport": false

  NonCompliantBucketDueToMissingJoinStatements:
    Type: AWS::S3::Bucket # Noncompliant
    Properties:
      BucketName: "S3BucketWrongEmptyJoinedResource"
  NonCompliantPolicyDueToMissingJoinStatements:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref NonCompliantBucketDueToMissingJoinStatements
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: !Join [ 'foo', []]
            Condition:
              Bool:
                "aws:SecureTransport": false
