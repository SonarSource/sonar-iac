gcp_credentials: ENCRYPTED[!17c59813193e86cc337bce848b358412b90f50bc5fe1b8b39d363cdf14a41ebe76cfba0482e7f81d076994b9f6dbfb4c!]

env:
  ARTIFACTORY_URL: ENCRYPTED[!2f8fa307d3289faa0aa6791f18b961627ae44f1ef46b136e1a1e63b0b4c86454dbb25520d49b339e2d50a1e1e5f95c88!]
  ARTIFACTORY_PRIVATE_USERNAME: repox-private-reader-e2882e
  ARTIFACTORY_PRIVATE_PASSWORD: ENCRYPTED[!815fc7526a6579b7d974d1c41b5c247cfed8c88fb2c7b41ec5d3d54244701186da777c4003476b5b9fa208c8b8f208dc!]
  ARTIFACTORY_DEPLOY_USERNAME: repox-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: ENCRYPTED[!d484e19f33c9ce63b165f70e414a33b1ac6c215a126791aacbf8059626caf0fd8a78e999a20af5c1a4ba01c0b0247921!]
  #Possible values for ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa, sonarsource-public-qa
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
  ARTIFACTORY_API_KEY: ENCRYPTED[!815fc7526a6579b7d974d1c41b5c247cfed8c88fb2c7b41ec5d3d54244701186da777c4003476b5b9fa208c8b8f208dc!]
  # burgr notification
  BURGR_URL: ENCRYPTED[!c7e294da94762d7bac144abef6310c5db300c95979daed4454ca977776bfd5edeb557e1237e3aa8ed722336243af2d78!]
  BURGR_USERNAME: ENCRYPTED[!b29ddc7610116de511e74bec9a93ad9b8a20ac217a0852e94a96d0066e6e822b95e7bc1fe152afb707f16b70605fddd3!]
  BURGR_PASSWORD: ENCRYPTED[!83e130718e92b8c9de7c5226355f730e55fb46e45869149a9223e724bb99656878ef9684c5f8cfef434aa716e87f4cf2!]
  GITHUB_TOKEN: ENCRYPTED[!f458126aa9ed2ac526f220c5acb51dd9cc255726b34761a56fc78d4294c11089502a882888cef0ca7dd4085e72e611a5!]
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash
  # Allows to run builds for the 50 last commits in a branch:
  CIRRUS_CLONE_DEPTH: 1

linux_image_template: &LINUX_IMAGE
  image: gcr.io/language-team/base:latest
  cluster_name: cirrus-ci-lt-cluster
  zone: us-central1-a
  namespace: default
  use_in_memory_disk: true

linux_1_cpu_1G_template: &LINUX_1_CPU_1G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 1
    memory: 1G

linux_3_5_cpu_7G_template: &LINUX_3_5_CPU_7G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 3.5
    memory: 7G

linux_4_cpu_8G_template: &LINUX_4_CPU_8G
  gke_container:
    <<: *LINUX_IMAGE
    cpu: 4
    memory: 8G

only_sonarsource_qa: &ONLY_IF_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

qa_task_filter_template: &QA_TASK_FILTER
  depends_on:
    - build
  <<: *ONLY_IF_SONARSOURCE_QA

build_task:
  <<: *LINUX_3_5_CPU_7G
  env:
    SIGN_KEY: ENCRYPTED[!cc216dfe592f79db8006f2a591f8f98b40aa2b078e92025623594976fd32f6864c1e6b6ba74b50647f608e2418e6c336!]
    PGP_PASSPHRASE: ENCRYPTED[!314a8fc344f45e462dd5e8dccd741d7562283a825e78ebca27d4ae9db8e65ce618e7f6aece386b2782a5abe5171467bd!]
    # analysis on next
    SONAR_TOKEN: ENCRYPTED[!b6fd814826c51e64ee61b0b6f3ae621551f6413383f7170f73580e2e141ac78c4b134b506f6288c74faa0dd564c05a29!]
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    #allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: true
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  build_script:
    - source cirrus-env BUILD-PRIVATE
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script: cleanup_maven_repository

ws_scan_task:
  depends_on:
    - build
  <<: *LINUX_1_CPU_1G
  # run only on master and long-term branches
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*")
  env:
    WS_APIKEY: ENCRYPTED[!3929c6148b9dfc751a2d17c590b15d755f82cd9c108f2de5f24a5b32f2a0c26144e921fab7e2c959fc2824d6d6d1550d!]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  whitesource_script:
    - source cirrus-env QA
    - source set_maven_build_version $BUILD_NUMBER
    - mvn clean install -DskipTests
    - source ws_scan.sh
  allow_failures: "true"
  always:
    ws_artifacts:
      path: "whitesource/**/*"

qa_plugin_task:
  <<: *QA_TASK_FILTER
  <<: *LINUX_4_CPU_8G
  env:
    matrix:
      - SQ_VERSION: LATEST_RELEASE[8.9]
      - SQ_VERSION: DEV
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  submodules_script:
    - git submodule update --init
  plugin_script:
    - source cirrus-env QA
    - source set_maven_build_version $BUILD_NUMBER
    - cd its/plugin
    - mvn verify -Drevision=${PROJECT_VERSION} -Dsonar.runtimeVersion=${SQ_VERSION} -B -e -V
  cleanup_before_cache_script: cleanup_maven_repository

qa_ruling_task:
  <<: *QA_TASK_FILTER
  <<: *LINUX_4_CPU_8G
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  submodules_script:
    - git submodule update --init
  ruling_script:
    - source cirrus-env QA
    - source set_maven_build_version $BUILD_NUMBER
    - cd its/ruling
    - mvn verify -Dsonar.runtimeVersion=LATEST_RELEASE[8.9] -B -e -V
  cleanup_before_cache_script: cleanup_maven_repository

promote_task:
  depends_on:
    - build
    - qa_plugin
    - qa_ruling
    - ws_scan
  <<: *ONLY_IF_SONARSOURCE_QA
  <<: *LINUX_1_CPU_1G
  env:
    #promotion cloud function
    GCF_ACCESS_TOKEN: ENCRYPTED[!1fb91961a5c01e06e38834e55755231d649dc62eca354593105af9f9d643d701ae4539ab6a8021278b8d9348ae2ce8be!]
    PROMOTE_URL: ENCRYPTED[!e22ed2e34a8f7a1aea5cff653585429bbd3d5151e7201022140218f9c5d620069ec2388f14f83971e3fd726215bc0f5e!]
    #artifacts that will have downloadable links in burgr
    ARTIFACTS: com.sonarsource.iac:sonar-iac-plugin:jar
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script: cirrus_promote_maven
  cleanup_before_cache_script: cleanup_maven_repository
