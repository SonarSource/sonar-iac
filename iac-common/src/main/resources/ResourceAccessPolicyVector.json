[
    "gamesparks:*",
    "gamesparks:GetStageDeployment",
    "gamesparks:CreateStage",
    "gamesparks:ListStageDeployments",
    "gamesparks:GetPlayerConnectionStatus",
    "gamesparks:TagResource",
    "gamesparks:ListSnapshots",
    "gamesparks:ImportGameConfiguration",
    "gamesparks:ExportSnapshot",
    "gamesparks:InvokeBackend",
    "gamesparks:GetGame",
    "gamesparks:UpdateGame",
    "gamesparks:UpdateGameConfiguration",
    "gamesparks:ListStages",
    "gamesparks:UpdateStage",
    "gamesparks:StartGeneratedCodeJob",
    "gamesparks:GetGeneratedCodeJob",
    "gamesparks:GetSnapshot",
    "gamesparks:DeleteGame",
    "gamesparks:ListGeneratedCodeJobs",
    "gamesparks:DeleteStage",
    "gamesparks:DisconnectPlayer",
    "gamesparks:CreateSnapshot",
    "gamesparks:ListTagsForResource",
    "gamesparks:UntagResource",
    "gamesparks:GetGameConfiguration",
    "gamesparks:UpdateSnapshot",
    "gamesparks:StartStageDeployment",
    "gamesparks:GetStage",
    "kinesis:*",
    "kinesis:DecreaseStreamRetentionPeriod",
    "kinesis:RegisterStreamConsumer",
    "kinesis:SplitShard",
    "kinesis:RemoveTagsFromStream",
    "kinesis:DeregisterStreamConsumer",
    "kinesis:IncreaseStreamRetentionPeriod",
    "kinesis:CreateStream",
    "kinesis:SubscribeToShard",
    "kinesis:DescribeStreamConsumer",
    "kinesis:PutRecords",
    "kinesis:StopStreamEncryption",
    "kinesis:PutRecord",
    "kinesis:GetRecords",
    "kinesis:MergeShards",
    "kinesis:AddTagsToStream",
    "kinesis:DescribeStreamSummary",
    "kinesis:DescribeStream",
    "kinesis:GetShardIterator",
    "kinesis:ListStreamConsumers",
    "kinesis:ListTagsForStream",
    "kinesis:DeleteStream",
    "kinesis:StartStreamEncryption",
    "fsx:*",
    "fsx:DeleteFileCache",
    "fsx:CancelDataRepositoryTask",
    "fsx:DisassociateFileGateway",
    "fsx:AssociateFileSystemAliases",
    "fsx:CreateFileCache",
    "fsx:UpdateSnapshot",
    "fsx:CreateDataRepositoryTask",
    "fsx:DeleteVolume",
    "fsx:CreateVolume",
    "fsx:UpdateStorageVirtualMachine",
    "fsx:CreateSnapshot",
    "fsx:ListTagsForResource",
    "fsx:CreateVolumeFromBackup",
    "fsx:UntagResource",
    "fsx:DescribeFileSystemAliases",
    "fsx:DisassociateFileSystemAliases",
    "fsx:DeleteFileSystem",
    "fsx:DeleteBackup",
    "fsx:ManageBackupPrincipalAssociations",
    "fsx:UpdateFileCache",
    "fsx:UpdateVolume",
    "fsx:TagResource",
    "fsx:DeleteSnapshot",
    "fsx:DeleteStorageVirtualMachine",
    "fsx:CreateBackup",
    "fsx:CopyBackup",
    "fsx:DeleteDataRepositoryAssociation",
    "fsx:DescribeAssociatedFileGateways",
    "fsx:RestoreVolumeFromSnapshot",
    "fsx:UpdateDataRepositoryAssociation",
    "fsx:CreateFileSystem",
    "fsx:UpdateFileSystem",
    "fsx:ReleaseFileSystemNfsV3Locks",
    "fsx:AssociateFileGateway",
    "fsx:CreateFileSystemFromBackup",
    "fsx:CreateStorageVirtualMachine",
    "fsx:CreateDataRepositoryAssociation",
    "cognito-sync:*",
    "cognito-sync:SetDatasetConfiguration",
    "cognito-sync:UnsubscribeFromDataset",
    "cognito-sync:SetIdentityPoolConfiguration",
    "cognito-sync:BulkPublish",
    "cognito-sync:DescribeIdentityPoolUsage",
    "cognito-sync:UpdateRecords",
    "cognito-sync:DescribeIdentityUsage",
    "cognito-sync:DeleteDataset",
    "cognito-sync:SetCognitoEvents",
    "cognito-sync:SubscribeToDataset",
    "cognito-sync:ListIdentityPoolUsage",
    "cognito-sync:GetCognitoEvents",
    "cognito-sync:DescribeDataset",
    "cognito-sync:ListRecords",
    "cognito-sync:RegisterDevice",
    "cognito-sync:ListDatasets",
    "cognito-sync:GetIdentityPoolConfiguration",
    "cognito-sync:GetBulkPublishDetails",
    "dataexchange:*",
    "dataexchange:CancelJob",
    "dataexchange:StartJob",
    "dataexchange:ListEventActions",
    "dataexchange:DeleteDataSet",
    "dataexchange:UntagResource",
    "dataexchange:ListTagsForResource",
    "dataexchange:RevokeRevision",
    "dataexchange:CreateEventAction",
    "dataexchange:DeleteAsset",
    "dataexchange:GetEventAction",
    "dataexchange:GetJob",
    "dataexchange:UpdateRevision",
    "dataexchange:ListRevisionAssets",
    "dataexchange:UpdateDataSet",
    "dataexchange:DeleteEventAction",
    "dataexchange:SendApiAsset",
    "dataexchange:GetAsset",
    "dataexchange:ListJobs",
    "dataexchange:PublishDataSet",
    "dataexchange:UpdateEventAction",
    "dataexchange:TagResource",
    "dataexchange:GetRevision",
    "dataexchange:DeleteRevision",
    "dataexchange:ListDataSetRevisions",
    "dataexchange:ListDataSets",
    "dataexchange:GetDataSet",
    "dataexchange:UpdateAsset",
    "dataexchange:CreateJob",
    "ses:*",
    "ses:UntagResource",
    "ses:GetEmailIdentity",
    "ses:PutEmailIdentityDkimAttributes",
    "ses:GetConfigurationSetEventDestinations",
    "ses:GetConfigurationSet",
    "ses:PutEmailIdentityMailFromAttributes",
    "ses:GetDeliverabilityTestReport",
    "ses:DeleteDedicatedIpPool",
    "ses:PutConfigurationSetDeliveryOptions",
    "ses:PutEmailIdentityFeedbackAttributes",
    "ses:PutConfigurationSetTrackingOptions",
    "ses:DeleteEmailIdentity",
    "ses:ListTagsForResource",
    "ses:PutConfigurationSetReputationOptions",
    "ses:TagResource",
    "ses:SendEmail",
    "ses:DeleteConfigurationSet",
    "ses:DeleteConfigurationSetEventDestination",
    "ses:PutConfigurationSetSendingOptions",
    "ses:GetDomainStatisticsReport",
    "ses:PutDedicatedIpInPool",
    "ses:CreateConfigurationSetEventDestination",
    "ses:CreateDeliverabilityTestReport",
    "ses:GetDedicatedIps",
    "ses:UpdateConfigurationSetEventDestination",
    "timestream:*",
    "timestream:UpdateScheduledQuery",
    "timestream:WriteRecords",
    "timestream:UntagResource",
    "timestream:UpdateDatabase",
    "timestream:ListMeasures",
    "timestream:DescribeScheduledQuery",
    "timestream:CreateTable",
    "timestream:DeleteTable",
    "timestream:DescribeDatabase",
    "timestream:PrepareQuery",
    "timestream:ListTagsForResource",
    "timestream:DescribeTable",
    "timestream:TagResource",
    "timestream:ExecuteScheduledQuery",
    "timestream:DeleteDatabase",
    "timestream:ListTables",
    "timestream:UpdateTable",
    "timestream:DeleteScheduledQuery",
    "timestream:Select",
    "timestream:CreateDatabase",
    "cases:*",
    "cases:GetCase",
    "cases:GetTemplate",
    "cases:UpdateLayout",
    "cases:SearchRelatedItems",
    "cases:UpdateCase",
    "cases:CreateLayout",
    "cases:CreateTemplate",
    "cases:ListFields",
    "cases:CreateField",
    "cases:UpdateTemplate",
    "cases:ListLayouts",
    "cases:CreateCase",
    "cases:GetCaseEventConfiguration",
    "cases:GetDomain",
    "cases:BatchPutFieldOptions",
    "cases:BatchGetField",
    "cases:ListTemplates",
    "cases:ListFieldOptions",
    "cases:SearchCases",
    "cases:ListCasesForContact",
    "cases:CreateRelatedItem",
    "cases:UntagResource",
    "cases:TagResource",
    "cases:UpdateField",
    "cases:PutCaseEventConfiguration",
    "cases:GetLayout",
    "apprunner:*",
    "apprunner:CreateConnection",
    "apprunner:CreateVpcConnector",
    "apprunner:CreateAutoScalingConfiguration",
    "apprunner:ListTagsForResource",
    "apprunner:AssociateCustomDomain",
    "apprunner:UpdateVpcIngressConnection",
    "apprunner:DeleteService",
    "apprunner:DeleteAutoScalingConfiguration",
    "apprunner:CreateVpcIngressConnection",
    "apprunner:DescribeOperation",
    "apprunner:DescribeAutoScalingConfiguration",
    "apprunner:TagResource",
    "apprunner:DescribeObservabilityConfiguration",
    "apprunner:DescribeService",
    "apprunner:StartDeployment",
    "apprunner:DescribeCustomDomains",
    "apprunner:DescribeVpcConnector",
    "apprunner:DeleteConnection",
    "apprunner:DisassociateCustomDomain",
    "apprunner:PauseService",
    "apprunner:DeleteVpcConnector",
    "apprunner:ResumeService",
    "apprunner:UntagResource",
    "apprunner:DeleteObservabilityConfiguration",
    "apprunner:DeleteVpcIngressConnection",
    "apprunner:CreateObservabilityConfiguration",
    "apprunner:UpdateService",
    "apprunner:CreateService",
    "apprunner:ListOperations",
    "apprunner:DescribeVpcIngressConnection",
    "codestar-notifications:*",
    "codestar-notifications:CreateNotificationRule",
    "codestar-notifications:UpdateNotificationRule",
    "codestar-notifications:DescribeNotificationRule",
    "codestar-notifications:Subscribe",
    "codestar-notifications:Unsubscribe",
    "codestar-notifications:ListTagsForResource",
    "codestar-notifications:TagResource",
    "codestar-notifications:DeleteNotificationRule",
    "codestar-notifications:UntagResource",
    "sns:*",
    "sns:PutDataProtectionPolicy",
    "sns:AddPermission",
    "sns:Subscribe",
    "sns:SetTopicAttributes",
    "sns:CreateTopic",
    "sns:ListSubscriptionsByTopic",
    "sns:ConfirmSubscription",
    "sns:RemovePermission",
    "sns:ListTagsForResource",
    "sns:DeleteTopic",
    "sns:GetTopicAttributes",
    "sns:GetDataProtectionPolicy",
    "sns:TagResource",
    "sns:UntagResource",
    "sns:Publish",
    "kendra:*",
    "kendra:DescribePrincipalMapping",
    "kendra:UpdateQuerySuggestionsBlockList",
    "kendra:DeleteIndex",
    "kendra:GetQuerySuggestions",
    "kendra:CreateExperience",
    "kendra:DeleteDataSource",
    "kendra:DescribeExperience",
    "kendra:CreateThesaurus",
    "kendra:DescribeQuerySuggestionsConfig",
    "kendra:DescribeDataSource",
    "kendra:UpdateIndex",
    "kendra:StartDataSourceSyncJob",
    "kendra:DisassociatePersonasFromEntities",
    "kendra:CreateFaq",
    "kendra:UpdateQuerySuggestionsConfig",
    "kendra:UpdateExperience",
    "kendra:ListEntityPersonas",
    "kendra:GetSnapshots",
    "kendra:DescribeThesaurus",
    "kendra:CreateQuerySuggestionsBlockList",
    "kendra:SubmitFeedback",
    "kendra:UpdateDataSource",
    "kendra:ClearQuerySuggestions",
    "kendra:ListExperiences",
    "kendra:ListDataSourceSyncJobs",
    "kendra:PutPrincipalMapping",
    "kendra:DeletePrincipalMapping",
    "kendra:BatchGetDocumentStatus",
    "kendra:ListThesauri",
    "kendra:ListQuerySuggestionsBlockLists",
    "kendra:DeleteThesaurus",
    "kendra:AssociatePersonasToEntities",
    "kendra:ListGroupsOlderThanOrderingId",
    "kendra:BatchDeleteDocument",
    "kendra:ListDataSources",
    "kendra:AssociateEntitiesToExperience",
    "kendra:ListFaqs",
    "kendra:DescribeFaq",
    "kendra:StopDataSourceSyncJob",
    "kendra:BatchPutDocument",
    "kendra:Query",
    "kendra:UpdateThesaurus",
    "kendra:DescribeIndex",
    "kendra:DisassociateEntitiesFromExperience",
    "kendra:CreateDataSource",
    "kendra:ListTagsForResource",
    "kendra:DeleteExperience",
    "kendra:DeleteQuerySuggestionsBlockList",
    "kendra:DeleteFaq",
    "kendra:TagResource",
    "kendra:DescribeQuerySuggestionsBlockList",
    "kendra:ListExperienceEntities",
    "kendra:UntagResource",
    "networkmanager:*",
    "networkmanager:AssociateCustomerGateway",
    "networkmanager:ListCoreNetworkPolicyVersions",
    "networkmanager:CreateSite",
    "networkmanager:UpdateDevice",
    "networkmanager:GetLinkAssociations",
    "networkmanager:CreateConnectAttachment",
    "networkmanager:DeleteCoreNetwork",
    "networkmanager:UpdateCoreNetwork",
    "networkmanager:ListTagsForResource",
    "networkmanager:GetNetworkTelemetry",
    "networkmanager:CreateConnection",
    "networkmanager:CreateSiteToSiteVpnAttachment",
    "networkmanager:GetCoreNetworkChangeEvents",
    "networkmanager:GetNetworkResourceCounts",
    "networkmanager:UntagResource",
    "networkmanager:GetCoreNetwork",
    "networkmanager:DeleteConnection",
    "networkmanager:UpdateConnection",
    "networkmanager:DeletePeering",
    "networkmanager:GetSites",
    "networkmanager:DisassociateCustomerGateway",
    "networkmanager:DeleteAttachment",
    "networkmanager:UpdateSite",
    "networkmanager:GetCoreNetworkChangeSet",
    "networkmanager:UpdateGlobalNetwork",
    "networkmanager:DeleteCoreNetworkPolicyVersion",
    "networkmanager:PutResourcePolicy",
    "networkmanager:RejectAttachment",
    "networkmanager:ListConnectPeers",
    "networkmanager:DeleteConnectPeer",
    "networkmanager:GetRouteAnalysis",
    "networkmanager:DeleteDevice",
    "networkmanager:ExecuteCoreNetworkChangeSet",
    "networkmanager:GetNetworkRoutes",
    "networkmanager:GetVpcAttachment",
    "networkmanager:CreateConnectPeer",
    "networkmanager:GetCustomerGatewayAssociations",
    "networkmanager:DeleteLink",
    "networkmanager:AssociateConnectPeer",
    "networkmanager:CreateCoreNetwork",
    "networkmanager:GetCoreNetworkPolicy",
    "networkmanager:DeleteResourcePolicy",
    "networkmanager:GetDevices",
    "networkmanager:CreateTransitGatewayRouteTableAttachment",
    "networkmanager:UpdateLink",
    "networkmanager:AcceptAttachment",
    "networkmanager:GetResourcePolicy",
    "networkmanager:DeleteGlobalNetwork",
    "networkmanager:DisassociateTransitGatewayConnectPeer",
    "networkmanager:GetConnections",
    "networkmanager:UpdateNetworkResourceMetadata",
    "networkmanager:GetTransitGatewayRegistrations",
    "networkmanager:PutCoreNetworkPolicy",
    "networkmanager:AssociateTransitGatewayConnectPeer",
    "networkmanager:GetConnectAttachment",
    "networkmanager:GetTransitGatewayRouteTableAttachment",
    "networkmanager:GetLinks",
    "networkmanager:TagResource",
    "networkmanager:GetTransitGatewayPeering",
    "networkmanager:CreateTransitGatewayPeering",
    "networkmanager:CreateVpcAttachment",
    "networkmanager:GetNetworkResources",
    "networkmanager:DisassociateLink",
    "networkmanager:CreateDevice",
    "networkmanager:UpdateVpcAttachment",
    "networkmanager:DescribeGlobalNetworks",
    "networkmanager:DisassociateConnectPeer",
    "networkmanager:RestoreCoreNetworkPolicyVersion",
    "networkmanager:DeleteSite",
    "networkmanager:GetConnectPeer",
    "networkmanager:AssociateLink",
    "networkmanager:RegisterTransitGateway",
    "networkmanager:GetTransitGatewayConnectPeerAssociations",
    "networkmanager:CreateLink",
    "networkmanager:ListAttachments",
    "networkmanager:StartRouteAnalysis",
    "networkmanager:DeregisterTransitGateway",
    "networkmanager:GetConnectPeerAssociations",
    "networkmanager:GetNetworkResourceRelationships",
    "networkmanager:GetSiteToSiteVpnAttachment",
    "greengrass:*",
    "greengrass:GetThingRuntimeConfiguration",
    "greengrass:CreateGroupCertificateAuthority",
    "greengrass:GetFunctionDefinitionVersion",
    "greengrass:ListGroupVersions",
    "greengrass:UpdateResourceDefinition",
    "greengrass:GetSubscriptionDefinition",
    "greengrass:ListLoggerDefinitionVersions",
    "greengrass:UpdateSubscriptionDefinition",
    "greengrass:CreateResourceDefinitionVersion",
    "greengrass:CreateGroupVersion",
    "greengrass:GetAssociatedRole",
    "greengrass:ListSubscriptionDefinitionVersions",
    "greengrass:GetConnectorDefinitionVersion",
    "greengrass:CreateFunctionDefinitionVersion",
    "greengrass:DisassociateRoleFromGroup",
    "greengrass:ListFunctionDefinitionVersions",
    "greengrass:Discover",
    "greengrass:ListBulkDeploymentDetailedReports",
    "greengrass:GetBulkDeploymentStatus",
    "greengrass:AssociateRoleToGroup",
    "greengrass:UpdateGroup",
    "greengrass:GetDeviceDefinitionVersion",
    "greengrass:GetCoreDefinition",
    "greengrass:CreateConnectorDefinitionVersion",
    "greengrass:DeleteResourceDefinition",
    "greengrass:StopBulkDeployment",
    "greengrass:GetDeviceDefinition",
    "greengrass:ListCoreDefinitionVersions",
    "greengrass:DeleteSubscriptionDefinition",
    "greengrass:GetCoreDefinitionVersion",
    "greengrass:GetDeploymentStatus",
    "greengrass:ResetDeployments",
    "greengrass:GetGroup",
    "greengrass:GetConnectorDefinition",
    "greengrass:UpdateGroupCertificateConfiguration",
    "greengrass:ListResourceDefinitionVersions",
    "greengrass:ListDeployments",
    "greengrass:UntagResource",
    "greengrass:GetGroupVersion",
    "greengrass:CreateDeviceDefinitionVersion",
    "greengrass:DeleteDeviceDefinition",
    "greengrass:DeleteFunctionDefinition",
    "greengrass:GetSubscriptionDefinitionVersion",
    "greengrass:CreateCoreDefinitionVersion",
    "greengrass:UpdateConnectorDefinition",
    "greengrass:TagResource",
    "greengrass:GetGroupCertificateConfiguration",
    "greengrass:UpdateThingRuntimeConfiguration",
    "greengrass:GetFunctionDefinition",
    "greengrass:GetLoggerDefinitionVersion",
    "greengrass:UpdateFunctionDefinition",
    "greengrass:DeleteConnectorDefinition",
    "greengrass:GetConnectivityInfo",
    "greengrass:UpdateLoggerDefinition",
    "greengrass:ListConnectorDefinitionVersions",
    "greengrass:ListDeviceDefinitionVersions",
    "greengrass:UpdateConnectivityInfo",
    "greengrass:ListGroupCertificateAuthorities",
    "greengrass:CreateDeployment",
    "greengrass:GetLoggerDefinition",
    "greengrass:UpdateCoreDefinition",
    "greengrass:DeleteLoggerDefinition",
    "greengrass:GetResourceDefinition",
    "greengrass:CreateSubscriptionDefinitionVersion",
    "greengrass:DeleteGroup",
    "greengrass:GetGroupCertificateAuthority",
    "greengrass:ListTagsForResource",
    "greengrass:UpdateDeviceDefinition",
    "greengrass:GetResourceDefinitionVersion",
    "greengrass:DeleteCoreDefinition",
    "greengrass:CreateLoggerDefinitionVersion",
    "route53resolver:*",
    "route53resolver:DeleteFirewallRuleGroup",
    "route53resolver:UpdateResolverRule",
    "route53resolver:AssociateResolverRule",
    "route53resolver:GetResolverEndpoint",
    "route53resolver:DeleteFirewallDomainList",
    "route53resolver:ListFirewallConfigs",
    "route53resolver:DisassociateResolverQueryLogConfig",
    "route53resolver:AssociateResolverEndpointIpAddress",
    "route53resolver:PutFirewallRuleGroupPolicy",
    "route53resolver:ListResolverQueryLogConfigAssociations",
    "route53resolver:GetResolverQueryLogConfigPolicy",
    "route53resolver:GetResolverDnssecConfig",
    "route53resolver:UntagResource",
    "route53resolver:ListResolverEndpointIpAddresses",
    "route53resolver:GetFirewallRuleGroupAssociation",
    "route53resolver:CreateResolverQueryLogConfig",
    "route53resolver:DeleteResolverEndpoint",
    "route53resolver:ListResolverDnssecConfigs",
    "route53resolver:ListResolverQueryLogConfigs",
    "route53resolver:AssociateFirewallRuleGroup",
    "route53resolver:GetFirewallRuleGroupPolicy",
    "route53resolver:GetResolverRulePolicy",
    "route53resolver:UpdateFirewallConfig",
    "route53resolver:CreateFirewallRule",
    "route53resolver:UpdateFirewallRuleGroupAssociation",
    "route53resolver:PutResolverRulePolicy",
    "route53resolver:DeleteFirewallRule",
    "route53resolver:CreateResolverEndpoint",
    "route53resolver:UpdateFirewallDomains",
    "route53resolver:ListTagsForResource",
    "route53resolver:GetFirewallRuleGroup",
    "route53resolver:UpdateResolverEndpoint",
    "route53resolver:GetResolverRuleAssociation",
    "route53resolver:DisassociateResolverEndpointIpAddress",
    "route53resolver:GetFirewallDomainList",
    "route53resolver:ListResolverConfigs",
    "route53resolver:AssociateResolverQueryLogConfig",
    "route53resolver:UpdateResolverDnssecConfig",
    "route53resolver:GetResolverConfig",
    "route53resolver:UpdateFirewallRule",
    "route53resolver:PutResolverQueryLogConfigPolicy",
    "route53resolver:DeleteResolverRule",
    "route53resolver:GetResolverQueryLogConfig",
    "route53resolver:ListFirewallDomains",
    "route53resolver:GetFirewallConfig",
    "route53resolver:DeleteResolverQueryLogConfig",
    "route53resolver:ListFirewallRules",
    "route53resolver:TagResource",
    "route53resolver:ImportFirewallDomains",
    "route53resolver:CreateResolverRule",
    "route53resolver:GetResolverRule",
    "route53resolver:CreateFirewallRuleGroup",
    "route53resolver:DisassociateResolverRule",
    "route53resolver:UpdateResolverConfig",
    "route53resolver:DisassociateFirewallRuleGroup",
    "route53resolver:GetResolverQueryLogConfigAssociation",
    "route53resolver:CreateFirewallDomainList",
    "ec2:*",
    "ec2:DeleteTransitGatewayConnect",
    "ec2:ModifyManagedPrefixList",
    "ec2:AssociateSubnetCidrBlock",
    "ec2:ModifyVpcTenancy",
    "ec2:DisableImageDeprecation",
    "ec2:DisassociateEnclaveCertificateIamRole",
    "ec2:AssociateTransitGatewayPolicyTable",
    "ec2:ReplaceNetworkAclAssociation",
    "ec2:DeleteCarrierGateway",
    "ec2:ModifyVpcEndpointServiceConfiguration",
    "ec2:ModifySnapshotAttribute",
    "ec2:DeleteVpcEndpointConnectionNotifications",
    "ec2:DisassociateTransitGatewayMulticastDomain",
    "ec2:GetManagedPrefixListAssociations",
    "ec2:EnableVpcClassicLinkDnsSupport",
    "ec2:ModifyVpnConnectionOptions",
    "ec2:CreateTransitGatewayMulticastDomain",
    "ec2:GetResourcePolicy",
    "ec2:CreateTransitGatewayConnect",
    "ec2:DescribeVolumeAttribute",
    "ec2:DescribeFleetInstances",
    "ec2:DeleteTransitGatewayVpcAttachment",
    "ec2:DescribeFpgaImageAttribute",
    "ec2:UnassignPrivateIpAddresses",
    "ec2:CreateNetworkInsightsPath",
    "ec2:ModifyTransitGatewayPrefixListReference",
    "ec2:CreateCapacityReservationFleet",
    "ec2:ReplaceIamInstanceProfileAssociation",
    "ec2:DeleteIpamPool",
    "ec2:ModifySubnetAttribute",
    "ec2:GetIpamAddressHistory",
    "ec2:CreateClientVpnRoute",
    "ec2:RunScheduledInstances",
    "ec2:DeregisterImage",
    "ec2:ImportKeyPair",
    "ec2:ModifyReservedInstances",
    "ec2:CreateRestoreImageTask",
    "ec2:EnableVolumeIO",
    "ec2:CreateLocalGatewayRoute",
    "ec2:ModifyVpcEndpointServicePayerResponsibility",
    "ec2:EnableVgwRoutePropagation",
    "ec2:DeleteInstanceEventWindow",
    "ec2:DisableVgwRoutePropagation",
    "ec2:DescribeVpcAttribute",
    "ec2:CreateTrafficMirrorSession",
    "ec2:DeleteTransitGatewayPeeringAttachment",
    "ec2:CreateDhcpOptions",
    "ec2:DeprovisionIpamPoolCidr",
    "ec2:DeregisterTransitGatewayMulticastGroupMembers",
    "ec2:RegisterTransitGatewayMulticastGroupSources",
    "ec2:PurchaseHostReservation",
    "ec2:GetManagedPrefixListEntries",
    "ec2:CreateVpcEndpointServiceConfiguration",
    "ec2:AssociateInstanceEventWindow",
    "ec2:ModifyInstanceMetadataOptions",
    "ec2:ModifyVpnTunnelCertificate",
    "ec2:RejectTransitGatewayVpcAttachment",
    "ec2:DeleteRoute",
    "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
    "ec2:CreateTransitGatewayRouteTableAnnouncement",
    "ec2:AuthorizeClientVpnIngress",
    "ec2:ModifyTransitGatewayVpcAttachment",
    "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "ec2:DeleteTransitGatewayConnectPeer",
    "ec2:StartNetworkInsightsAnalysis",
    "ec2:DeleteTransitGatewayRouteTableAnnouncement",
    "ec2:CreatePublicIpv4Pool",
    "ec2:UnassignIpv6Addresses",
    "ec2:SendDiagnosticInterrupt",
    "ec2:DeleteTransitGatewayMulticastDomain",
    "ec2:GetLaunchTemplateData",
    "ec2:DeleteVpnConnection",
    "ec2:ExportImage",
    "ec2:CreateSubnet",
    "ec2:CreateIpamScope",
    "ec2:ModifyFleet",
    "ec2:DeleteEgressOnlyInternetGateway",
    "ec2:CreateStoreImageTask",
    "ec2:CreateTags",
    "ec2:DescribeImageAttribute",
    "ec2:SearchTransitGatewayRoutes",
    "ec2:ModifyAddressAttribute",
    "ec2:ListImagesInRecycleBin",
    "ec2:ModifyVolume",
    "ec2:RejectTransitGatewayMulticastDomainAssociations",
    "ec2:CreateLocalGatewayRouteTablePermission",
    "ec2:ReplaceRouteTableAssociation",
    "ec2:GetConsoleScreenshot",
    "ec2:ResetAddressAttribute",
    "ec2:ModifyVpcEndpointConnectionNotification",
    "ec2:StartVpcEndpointServicePrivateDnsVerification",
    "ec2:DeleteNatGateway",
    "ec2:ModifyInstanceAttribute",
    "ec2:RestoreSnapshotTier",
    "ec2:CreateInternetGateway",
    "ec2:CancelSpotFleetRequests",
    "ec2:ReplaceRoute",
    "ec2:ResetImageAttribute",
    "ec2:ImportClientVpnClientCertificateRevocationList",
    "ec2:RequestSpotFleet",
    "ec2:ModifyTransitGateway",
    "ec2:DeleteIpam",
    "ec2:AcceptVpcPeeringConnection",
    "ec2:EnableFastSnapshotRestores",
    "ec2:DeleteTrafficMirrorTarget",
    "ec2:GetIpamResourceCidrs",
    "ec2:AttachInternetGateway",
    "ec2:DeleteLocalGatewayRouteTable",
    "ec2:RebootInstances",
    "ec2:CreateTrafficMirrorFilter",
    "ec2:DescribeClientVpnEndpoints",
    "ec2:DeleteNetworkInterfacePermission",
    "ec2:DisassociateAddress",
    "ec2:CreateVpcEndpoint",
    "ec2:CreateFleet",
    "ec2:ModifyLaunchTemplate",
    "ec2:GetAssociatedEnclaveCertificateIamRoles",
    "ec2:CopyImage",
    "ec2:DeleteClientVpnEndpoint",
    "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
    "ec2:GetTransitGatewayPolicyTableAssociations",
    "ec2:ModifyTrafficMirrorFilterRule",
    "ec2:DeleteTrafficMirrorSession",
    "ec2:RevokeSecurityGroupIngress",
    "ec2:CreateTransitGatewayRoute",
    "ec2:CreateVpnConnectionRoute",
    "ec2:DeleteInternetGateway",
    "ec2:ModifyIpamPool",
    "ec2:DescribeClientVpnTargetNetworks",
    "ec2:AssignIpv6Addresses",
    "ec2:DisableVpcClassicLinkDnsSupport",
    "ec2:RestoreManagedPrefixListVersion",
    "ec2:DisassociateTransitGatewayPolicyTable",
    "ec2:ReplaceNetworkAclEntry",
    "ec2:CreateNatGateway",
    "ec2:DescribeFleetHistory",
    "ec2:CreateLocalGatewayRouteTableVpcAssociation",
    "ec2:CreateTransitGatewayPrefixListReference",
    "ec2:DeleteNetworkAclEntry",
    "ec2:CreateIpamPool",
    "ec2:EnableVpcClassicLink",
    "ec2:AcceptVpcEndpointConnections",
    "ec2:AssociateTransitGatewayMulticastDomain",
    "ec2:ModifyInstanceMaintenanceOptions",
    "ec2:CancelCapacityReservation",
    "ec2:CreateTrafficMirrorTarget",
    "ec2:GetIpamPoolAllocations",
    "ec2:ModifyVpcEndpoint",
    "ec2:DetachVpnGateway",
    "ec2:EnableFastLaunch",
    "ec2:AuthorizeSecurityGroupEgress",
    "ec2:ModifyLocalGatewayRoute",
    "ec2:ExportClientVpnClientConfiguration",
    "ec2:ModifyNetworkInterfaceAttribute",
    "ec2:DescribeClientVpnRoutes",
    "ec2:CreateFpgaImage",
    "ec2:DisassociateIamInstanceProfile",
    "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
    "ec2:ModifyCapacityReservationFleet",
    "ec2:DisassociateTransitGatewayRouteTable",
    "ec2:ModifyVolumeAttribute",
    "ec2:ModifyIpam",
    "ec2:DetachClassicLinkVpc",
    "ec2:DeleteLaunchTemplate",
    "ec2:CreateVpnGateway",
    "ec2:TerminateClientVpnConnections",
    "ec2:DeleteCoipCidr",
    "ec2:DeleteSnapshot",
    "ec2:DeleteVolume",
    "ec2:CreateCoipPool",
    "ec2:ModifySpotFleetRequest",
    "ec2:CreateSnapshot",
    "ec2:DeleteClientVpnRoute",
    "ec2:ModifySecurityGroupRules",
    "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "ec2:AssociateClientVpnTargetNetwork",
    "ec2:DeleteSubnet",
    "ec2:ReleaseAddress",
    "ec2:CancelSpotInstanceRequests",
    "ec2:RequestSpotInstances",
    "ec2:ImportInstance",
    "ec2:DeleteCoipPool",
    "ec2:ReplaceTransitGatewayRoute",
    "ec2:ModifyTrafficMirrorFilterNetworkServices",
    "ec2:DisableTransitGatewayRouteTablePropagation",
    "ec2:ProvisionIpamPoolCidr",
    "ec2:CreateVolume",
    "ec2:CreateVpcEndpointConnectionNotification",
    "ec2:CreatePlacementGroup",
    "ec2:CreateRouteTable",
    "ec2:RevokeSecurityGroupEgress",
    "ec2:CancelExportTask",
    "ec2:DeleteTransitGatewayRouteTable",
    "ec2:CreateIpam",
    "ec2:AcceptTransitGatewayPeeringAttachment",
    "ec2:CreateNetworkInterface",
    "ec2:CreateTransitGatewayConnectPeer",
    "ec2:ModifyPrivateDnsNameOptions",
    "ec2:ImportImage",
    "ec2:GetIpamPoolCidrs",
    "ec2:ModifyInstanceEventStartTime",
    "ec2:ModifySnapshotTier",
    "ec2:DescribeFastLaunchImages",
    "ec2:RegisterTransitGatewayMulticastGroupMembers",
    "ec2:TerminateInstances",
    "ec2:RestoreSnapshotFromRecycleBin",
    "ec2:CreateClientVpnEndpoint",
    "ec2:CreateImage",
    "ec2:ModifyHosts",
    "ec2:DeleteManagedPrefixList",
    "ec2:AssociateDhcpOptions",
    "ec2:GetCoipPoolUsage",
    "ec2:DeleteLaunchTemplateVersions",
    "ec2:CreateCoipCidr",
    "ec2:DisassociateVpcCidrBlock",
    "ec2:DeleteTransitGatewayPolicyTable",
    "ec2:ReleaseHosts",
    "ec2:DisableFastLaunch",
    "ec2:AssociateAddress",
    "ec2:ModifyInstanceEventWindow",
    "ec2:AssociateTransitGatewayRouteTable",
    "ec2:ImportSnapshot",
    "ec2:DeleteNetworkAcl",
    "ec2:AcceptTransitGatewayMulticastDomainAssociations",
    "ec2:GetTransitGatewayPolicyTableEntries",
    "ec2:DisableFastSnapshotRestores",
    "ec2:DeleteNetworkInsightsAccessScope",
    "ec2:CreateTrafficMirrorFilterRule",
    "ec2:AllocateAddress",
    "ec2:DescribeClientVpnAuthorizationRules",
    "ec2:DeleteFleets",
    "ec2:DescribeStoreImageTasks",
    "ec2:ModifyInstanceCapacityReservationAttributes",
    "ec2:DeleteCustomerGateway",
    "ec2:MonitorInstances",
    "ec2:DisassociateInstanceEventWindow",
    "ec2:CreateCapacityReservation",
    "ec2:ModifyVpnTunnelOptions",
    "ec2:DeleteLocalGatewayRouteTablePermission",
    "ec2:ModifyInstancePlacement",
    "ec2:DisassociateSubnetCidrBlock",
    "ec2:ModifyInstanceCreditSpecification",
    "ec2:ModifyFpgaImageAttribute",
    "ec2:CopyFpgaImage",
    "ec2:DeleteTrafficMirrorFilter",
    "ec2:ModifyCapacityReservation",
    "ec2:GetVpnConnectionDeviceSampleConfiguration",
    "ec2:RestoreImageFromRecycleBin",
    "ec2:DescribeSpotFleetInstances",
    "ec2:CreateKeyPair",
    "ec2:DeleteTransitGatewayRoute",
    "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
    "ec2:AcceptTransitGatewayVpcAttachment",
    "ec2:GetFlowLogsIntegrationTemplate",
    "ec2:CopySnapshot",
    "ec2:GetPasswordData",
    "ec2:AssignPrivateIpAddresses",
    "ec2:DeleteTransitGatewayPrefixListReference",
    "ec2:CreateTransitGatewayVpcAttachment",
    "ec2:DescribeAddressesAttribute",
    "ec2:DetachInternetGateway",
    "ec2:ModifyVpcEndpointServicePermissions",
    "ec2:CreateVpc",
    "ec2:GetInstanceUefiData",
    "ec2:DeleteNetworkInsightsAnalysis",
    "ec2:CreateReplaceRootVolumeTask",
    "ec2:StopInstances",
    "ec2:DeleteLocalGatewayRoute",
    "ec2:DisassociateClientVpnTargetNetwork",
    "ec2:DeprovisionPublicIpv4PoolCidr",
    "ec2:ResetNetworkInterfaceAttribute",
    "ec2:DeleteVpcPeeringConnection",
    "ec2:RejectVpcPeeringConnection",
    "ec2:RejectTransitGatewayPeeringAttachment",
    "ec2:ExportClientVpnClientCertificateRevocationList",
    "ec2:AuthorizeSecurityGroupIngress",
    "ec2:DeleteIpamScope",
    "ec2:DeleteVpnGateway",
    "ec2:CancelCapacityReservationFleets",
    "ec2:AttachVpnGateway",
    "ec2:DescribeSnapshotAttribute",
    "ec2:CreateLaunchTemplate",
    "ec2:MoveByoipCidrToIpam",
    "ec2:ModifyClientVpnEndpoint",
    "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
    "ec2:SendSpotInstanceInterruptions",
    "ec2:DeletePlacementGroup",
    "ec2:UnmonitorInstances",
    "ec2:ListSnapshotsInRecycleBin",
    "ec2:ModifyVpnConnection",
    "ec2:DeleteTransitGateway",
    "ec2:DescribeInstanceAttribute",
    "ec2:DeleteResourcePolicy",
    "ec2:RegisterImage",
    "ec2:DeleteKeyPair",
    "ec2:DescribeSpotFleetRequestHistory",
    "ec2:GetCapacityReservationUsage",
    "ec2:CreateNetworkInterfacePermission",
    "ec2:DeleteNetworkInsightsPath",
    "ec2:CreateTransitGatewayPeeringAttachment",
    "ec2:DeleteSecurityGroup",
    "ec2:DescribeClientVpnConnections",
    "ec2:DeleteFlowLogs",
    "ec2:RunInstances",
    "ec2:CreateSnapshots",
    "ec2:ModifyTrafficMirrorSession",
    "ec2:PutResourcePolicy",
    "ec2:CreateInstanceExportTask",
    "ec2:DeleteFpgaImage",
    "ec2:DeleteNetworkInterface",
    "ec2:DeleteVpc",
    "ec2:RevokeClientVpnIngress",
    "ec2:CreateTransitGateway",
    "ec2:AllocateIpamPoolCidr",
    "ec2:ModifyImageAttribute",
    "ec2:DeleteRouteTable",
    "ec2:ModifyVpcPeeringConnectionOptions",
    "ec2:ResetSnapshotAttribute",
    "ec2:ReleaseIpamPoolAllocation",
    "ec2:CreateRoute",
    "ec2:RejectVpcEndpointConnections",
    "ec2:DisableVpcClassicLink",
    "ec2:EnableTransitGatewayRouteTablePropagation",
    "ec2:DeleteTags",
    "ec2:ProvisionPublicIpv4PoolCidr",
    "ec2:DeleteTrafficMirrorFilterRule",
    "ec2:DeleteVpnConnectionRoute",
    "ec2:CancelImportTask",
    "ec2:CreateCustomerGateway",
    "ec2:DetachVolume",
    "ec2:ResetInstanceAttribute",
    "ec2:CreateNetworkAcl",
    "ec2:CreateSecurityGroup",
    "ec2:CreateTransitGatewayPolicyTable",
    "ec2:DeleteVpcEndpoints",
    "ec2:AssociateVpcCidrBlock",
    "ec2:StartNetworkInsightsAccessScopeAnalysis",
    "ec2:DeleteVpcEndpointServiceConfigurations",
    "ec2:AttachVolume",
    "ec2:GetConsoleOutput",
    "ec2:SearchLocalGatewayRoutes",
    "ec2:DeletePublicIpv4Pool",
    "ec2:CreateTransitGatewayRouteTable",
    "ec2:EnableImageDeprecation",
    "ec2:CreateVpcPeeringConnection",
    "ec2:CreateInstanceEventWindow",
    "ec2:AssociateEnclaveCertificateIamRole",
    "ec2:AttachClassicLinkVpc",
    "ec2:StartInstances",
    "ec2:CreateFlowLogs",
    "ec2:CreateEgressOnlyInternetGateway",
    "ec2:DeleteDhcpOptions",
    "ec2:AssociateRouteTable",
    "ec2:CreateLocalGatewayRouteTable",
    "ec2:GetGroupsForCapacityReservation",
    "ec2:DisassociateRouteTable",
    "ec2:CreateVpnConnection",
    "ec2:CreateCarrierGateway",
    "ec2:ImportVolume",
    "ec2:CreateManagedPrefixList",
    "ec2:AllocateHosts",
    "ec2:AttachNetworkInterface",
    "ec2:DeregisterTransitGatewayMulticastGroupSources",
    "ec2:AssociateIamInstanceProfile",
    "ec2:ModifyIpamScope",
    "ec2:ModifyIpamResourceCidr",
    "ec2:CreateNetworkAclEntry",
    "ec2:ResetFpgaImageAttribute",
    "ec2:CreateLaunchTemplateVersion",
    "ec2:DetachNetworkInterface",
    "ec2:ModifyVpcAttribute",
    "ec2:CreateNetworkInsightsAccessScope",
    "securityhub:*",
    "securityhub:DisassociateMembers",
    "securityhub:DeclineInvitations",
    "securityhub:GetMembers",
    "securityhub:DeleteMembers",
    "securityhub:CreateActionTarget",
    "securityhub:DeleteInvitations",
    "securityhub:DisableImportFindingsForProduct",
    "securityhub:GetFreeTrialEndDate",
    "securityhub:InviteMembers",
    "securityhub:AcceptAdministratorInvitation",
    "securityhub:UpdateInsight",
    "securityhub:DisassociateFromMasterAccount",
    "securityhub:ListEnabledProductsForImport",
    "securityhub:GetAdhocInsightResults",
    "securityhub:GetFreeTrialUsage",
    "securityhub:ListMembers",
    "securityhub:GetAdministratorAccount",
    "securityhub:DeleteInsight",
    "securityhub:UpdateStandardsControl",
    "securityhub:GetInsightResults",
    "securityhub:DescribeActionTargets",
    "securityhub:UpdateOrganizationConfiguration",
    "securityhub:DescribeOrganizationConfiguration",
    "securityhub:UpdateFindings",
    "securityhub:BatchEnableStandards",
    "securityhub:ListControlEvaluationSummaries",
    "securityhub:CreateInsight",
    "securityhub:GetInvitationsCount",
    "securityhub:CreateMembers",
    "securityhub:DeleteFindingAggregator",
    "securityhub:UpdateActionTarget",
    "securityhub:GetMasterAccount",
    "securityhub:GetInsights",
    "securityhub:DisableSecurityHub",
    "securityhub:DescribeStandardsControls",
    "securityhub:ListOrganizationAdminAccounts",
    "securityhub:BatchDisableStandards",
    "securityhub:UntagResource",
    "securityhub:GetEnabledStandards",
    "securityhub:SendInsightEvents",
    "securityhub:GetControlFindingSummary",
    "securityhub:EnableOrganizationAdminAccount",
    "securityhub:DescribeHub",
    "securityhub:DisableOrganizationAdminAccount",
    "securityhub:UpdateFindingAggregator",
    "securityhub:DescribeProducts",
    "securityhub:DescribeStandards",
    "securityhub:TagResource",
    "securityhub:DisassociateFromAdministratorAccount",
    "securityhub:SendFindingEvents",
    "securityhub:DeleteActionTarget",
    "securityhub:UpdateSecurityHubConfiguration",
    "securityhub:BatchImportFindings",
    "securityhub:BatchUpdateFindings",
    "securityhub:AcceptInvitation",
    "securityhub:GetUsage",
    "securityhub:ListInvitations",
    "securityhub:ListTagsForResource",
    "securityhub:EnableSecurityHub",
    "securityhub:EnableImportFindingsForProduct",
    "securityhub:GetFindingAggregator",
    "securityhub:GetFindings",
    "securityhub:GetInsightFindingTrend",
    "ssm-incidents:*",
    "ssm-incidents:DeleteResourcePolicy",
    "ssm-incidents:ListTagsForResource",
    "ssm-incidents:ListTimelineEvents",
    "ssm-incidents:StartIncident",
    "ssm-incidents:UpdateTimelineEvent",
    "ssm-incidents:UpdateResponsePlan",
    "ssm-incidents:GetResourcePolicies",
    "ssm-incidents:UpdateReplicationSet",
    "ssm-incidents:UpdateDeletionProtection",
    "ssm-incidents:GetTimelineEvent",
    "ssm-incidents:ListRelatedItems",
    "ssm-incidents:DeleteReplicationSet",
    "ssm-incidents:UntagResource",
    "ssm-incidents:GetIncidentRecord",
    "ssm-incidents:GetResponsePlan",
    "ssm-incidents:DeleteResponsePlan",
    "ssm-incidents:TagResource",
    "ssm-incidents:UpdateIncidentRecord",
    "ssm-incidents:CreateTimelineEvent",
    "ssm-incidents:DeleteTimelineEvent",
    "ssm-incidents:PutResourcePolicy",
    "ssm-incidents:UpdateRelatedItems",
    "ssm-incidents:GetReplicationSet",
    "ssm-incidents:DeleteIncidentRecord",
    "lex:*",
    "lex:CreateIntent",
    "lex:DeleteBotVersion",
    "lex:ListRecommendedIntents",
    "lex:ListBotAliases",
    "lex:UpdateBotLocale",
    "lex:ListSlotTypes",
    "lex:DescribeSlotType",
    "lex:UpdateResourcePolicy",
    "lex:UpdateBot",
    "lex:CreateResourcePolicy",
    "lex:ListBotVersions",
    "lex:StartConversation",
    "lex:ListSlots",
    "lex:DeleteSlot",
    "lex:DescribeBotChannel",
    "lex:ListIntents",
    "lex:DeleteUtterances",
    "lex:ListBotChannels",
    "lex:DescribeBot",
    "lex:CreateExport",
    "lex:PutSession",
    "lex:DescribeBotVersion",
    "lex:DescribeBotRecommendation",
    "lex:CreateBotLocale",
    "lex:DeleteBotLocale",
    "lex:DeleteBot",
    "lex:CreateBotVersion",
    "lex:UntagResource",
    "lex:UpdateCustomVocabulary",
    "lex:CreateCustomVocabulary",
    "lex:DescribeExport",
    "lex:DescribeBotLocale",
    "lex:StartImport",
    "lex:UpdateBotAlias",
    "lex:StopBotRecommendation",
    "lex:GetSession",
    "lex:SearchAssociatedTranscripts",
    "lex:DescribeCustomVocabularyMetadata",
    "lex:UpdateExport",
    "lex:DescribeSlot",
    "lex:RecognizeUtterance",
    "lex:TagResource",
    "lex:ListAggregatedUtterances",
    "lex:UpdateSlotType",
    "lex:CreateBotAlias",
    "lex:DeleteCustomVocabulary",
    "lex:DeleteIntent",
    "lex:DescribeIntent",
    "lex:CreateSlot",
    "lex:ListTagsForResource",
    "lex:RecognizeText",
    "lex:DescribeImport",
    "lex:DeleteExport",
    "lex:DeleteResourcePolicy",
    "lex:ListBotRecommendations",
    "lex:DeleteBotAlias",
    "lex:DeleteImport",
    "lex:DeleteSession",
    "lex:UpdateSlot",
    "lex:CreateSlotType",
    "lex:DeleteSlotType",
    "lex:UpdateIntent",
    "lex:CreateBotChannel",
    "lex:DescribeCustomVocabulary",
    "lex:CreateBot",
    "lex:UpdateBotRecommendation",
    "lex:BuildBotLocale",
    "lex:DeleteBotChannel",
    "lex:StartBotRecommendation",
    "lex:DescribeResourcePolicy",
    "lex:DescribeBotAlias",
    "lex:ListBotLocales",
    "datasync:*",
    "datasync:DeleteAgent",
    "datasync:DescribeLocationHdfs",
    "datasync:DescribeLocationFsxWindows",
    "datasync:DescribeTask",
    "datasync:UntagResource",
    "datasync:UpdateLocationObjectStorage",
    "datasync:DeleteTask",
    "datasync:DescribeLocationFsxLustre",
    "datasync:UpdateTask",
    "datasync:DescribeLocationSmb",
    "datasync:DescribeLocationObjectStorage",
    "datasync:TagResource",
    "datasync:DescribeAgent",
    "datasync:DescribeLocationEfs",
    "datasync:CancelTaskExecution",
    "datasync:UpdateLocationHdfs",
    "datasync:DescribeLocationNfs",
    "datasync:UpdateTaskExecution",
    "datasync:ListTagsForResource",
    "datasync:DescribeLocationFsxOntap",
    "datasync:DescribeLocationS3",
    "datasync:UpdateAgent",
    "datasync:DescribeTaskExecution",
    "datasync:StartTaskExecution",
    "datasync:UpdateLocationNfs",
    "datasync:DescribeLocationFsxOpenZfs",
    "datasync:DeleteLocation",
    "datasync:UpdateLocationSmb",
    "ses:*",
    "ses:GetDeliverabilityTestReport",
    "ses:PutDedicatedIpInPool",
    "ses:CreateEmailIdentityPolicy",
    "ses:UpdateCustomVerificationEmailTemplate",
    "ses:GetContactList",
    "ses:GetCustomVerificationEmailTemplate",
    "ses:SendEmail",
    "ses:PutEmailIdentityDkimSigningAttributes",
    "ses:DeleteEmailTemplate",
    "ses:DeleteContactList",
    "ses:TestRenderEmailTemplate",
    "ses:GetConfigurationSetEventDestinations",
    "ses:CreateEmailIdentity",
    "ses:GetContact",
    "ses:CreateDedicatedIpPool",
    "ses:CreateDeliverabilityTestReport",
    "ses:CreateCustomVerificationEmailTemplate",
    "ses:DeleteConfigurationSet",
    "ses:PutConfigurationSetTrackingOptions",
    "ses:UpdateContact",
    "ses:DeleteEmailIdentityPolicy",
    "ses:GetConfigurationSet",
    "ses:PutConfigurationSetDeliveryOptions",
    "ses:UpdateEmailTemplate",
    "ses:SendBulkEmail",
    "ses:CreateEmailTemplate",
    "ses:GetEmailIdentityPolicies",
    "ses:GetDomainStatisticsReport",
    "ses:UpdateContactList",
    "ses:PutConfigurationSetVdmOptions",
    "ses:CreateContact",
    "ses:ListRecommendations",
    "ses:CreateContactList",
    "ses:DeleteContact",
    "ses:TagResource",
    "ses:CreateConfigurationSet",
    "ses:PutConfigurationSetReputationOptions",
    "ses:GetImportJob",
    "ses:PutConfigurationSetSuppressionOptions",
    "ses:PutEmailIdentityDkimAttributes",
    "ses:GetDedicatedIpPool",
    "ses:ListContacts",
    "ses:UpdateEmailIdentityPolicy",
    "ses:SendCustomVerificationEmail",
    "ses:BatchGetMetricData",
    "ses:DeleteDedicatedIpPool",
    "ses:PutEmailIdentityFeedbackAttributes",
    "ses:DeleteConfigurationSetEventDestination",
    "ses:UntagResource",
    "ses:GetEmailIdentity",
    "ses:CreateConfigurationSetEventDestination",
    "ses:PutConfigurationSetSendingOptions",
    "ses:DeleteEmailIdentity",
    "ses:ListTagsForResource",
    "ses:GetDedicatedIps",
    "ses:PutEmailIdentityMailFromAttributes",
    "ses:DeleteCustomVerificationEmailTemplate",
    "ses:PutEmailIdentityConfigurationSetAttributes",
    "ses:GetEmailTemplate",
    "ses:UpdateConfigurationSetEventDestination",
    "iotfleetwise:*",
    "iotfleetwise:UpdateModelManifest",
    "iotfleetwise:DeleteCampaign",
    "iotfleetwise:UntagResource",
    "iotfleetwise:ImportDecoderManifest",
    "iotfleetwise:DeleteVehicle",
    "iotfleetwise:GetFleet",
    "iotfleetwise:UpdateDecoderManifest",
    "iotfleetwise:DisassociateVehicleFleet",
    "iotfleetwise:CreateDecoderManifest",
    "iotfleetwise:CreateVehicle",
    "iotfleetwise:AssociateVehicleFleet",
    "iotfleetwise:ListDecoderManifestNetworkInterfaces",
    "iotfleetwise:GetDecoderManifest",
    "iotfleetwise:UpdateSignalCatalog",
    "iotfleetwise:GetModelManifest",
    "iotfleetwise:GetVehicle",
    "iotfleetwise:GetSignalCatalog",
    "iotfleetwise:DeleteFleet",
    "iotfleetwise:CreateCampaign",
    "iotfleetwise:ListModelManifestNodes",
    "iotfleetwise:ListTagsForResource",
    "iotfleetwise:ListFleetsForVehicle",
    "iotfleetwise:ListSignalCatalogNodes",
    "iotfleetwise:CreateFleet",
    "iotfleetwise:CreateModelManifest",
    "iotfleetwise:DeleteDecoderManifest",
    "iotfleetwise:ListDecoderManifestSignals",
    "iotfleetwise:UpdateCampaign",
    "iotfleetwise:UpdateVehicle",
    "iotfleetwise:UpdateFleet",
    "iotfleetwise:TagResource",
    "iotfleetwise:DeleteSignalCatalog",
    "iotfleetwise:GetCampaign",
    "iotfleetwise:GetVehicleStatus",
    "iotfleetwise:ListVehiclesInFleet",
    "iotfleetwise:DeleteModelManifest",
    "resiliencehub:*",
    "resiliencehub:PutDraftAppVersionTemplate",
    "resiliencehub:DescribeApp",
    "resiliencehub:PublishAppVersion",
    "resiliencehub:ListAppVersionResources",
    "resiliencehub:ResolveAppVersionResources",
    "resiliencehub:ListAppComponentCompliances",
    "resiliencehub:RemoveDraftAppVersionResourceMappings",
    "resiliencehub:ListAlarmRecommendations",
    "resiliencehub:ListAppVersionResourceMappings",
    "resiliencehub:CreateRecommendationTemplate",
    "resiliencehub:ListAppComponentRecommendations",
    "resiliencehub:DeleteAppAssessment",
    "resiliencehub:AddDraftAppVersionResourceMappings",
    "resiliencehub:ListUnsupportedAppVersionResources",
    "resiliencehub:ListTestRecommendations",
    "resiliencehub:UpdateResiliencyPolicy",
    "resiliencehub:DescribeResiliencyPolicy",
    "resiliencehub:UntagResource",
    "resiliencehub:ListSopRecommendations",
    "resiliencehub:UpdateApp",
    "resiliencehub:ListAppVersions",
    "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
    "resiliencehub:ListRecommendationTemplates",
    "resiliencehub:DescribeAppVersionTemplate",
    "resiliencehub:ImportResourcesToDraftAppVersion",
    "resiliencehub:DeleteRecommendationTemplate",
    "resiliencehub:TagResource",
    "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
    "resiliencehub:DeleteResiliencyPolicy",
    "resiliencehub:StartAppAssessment",
    "resiliencehub:DeleteApp",
    "resiliencehub:DescribeAppAssessment",
    "elastic-inference:*",
    "elastic-inference:Connect",
    "wellarchitected:*",
    "wellarchitected:GetAnswer",
    "wellarchitected:UpdateWorkloadShare",
    "wellarchitected:DeleteLens",
    "wellarchitected:UpdateWorkload",
    "wellarchitected:ListAnswers",
    "wellarchitected:UpgradeLensReview",
    "wellarchitected:GetLens",
    "wellarchitected:DeleteLensShare",
    "wellarchitected:ListTagsForResource",
    "wellarchitected:ListLensReviewImprovements",
    "wellarchitected:ExportLens",
    "wellarchitected:UntagResource",
    "wellarchitected:ListLensShares",
    "wellarchitected:GetLensReview",
    "wellarchitected:TagResource",
    "wellarchitected:CreateLensVersion",
    "wellarchitected:ListMilestones",
    "wellarchitected:UpdateAnswer",
    "wellarchitected:GetLensReviewReport",
    "wellarchitected:ListLensReviews",
    "wellarchitected:DeleteWorkloadShare",
    "wellarchitected:CreateMilestone",
    "wellarchitected:AssociateLenses",
    "wellarchitected:UpdateLensReview",
    "wellarchitected:DeleteWorkload",
    "wellarchitected:GetMilestone",
    "wellarchitected:CreateLensShare",
    "wellarchitected:GetLensVersionDifference",
    "wellarchitected:CreateWorkloadShare",
    "wellarchitected:ListWorkloadShares",
    "wellarchitected:GetWorkload",
    "wellarchitected:DisassociateLenses",
    "cloudhsm:*",
    "cloudhsm:ModifyBackupAttributes",
    "cloudhsm:TagResource",
    "cloudhsm:CreateCluster",
    "cloudhsm:CreateHsm",
    "cloudhsm:DeleteCluster",
    "cloudhsm:InitializeCluster",
    "cloudhsm:ModifyCluster",
    "cloudhsm:UntagResource",
    "cloudhsm:CopyBackupToRegion",
    "cloudhsm:RestoreBackup",
    "cloudhsm:DeleteBackup",
    "cloudhsm:ListTags",
    "redshift-data:*",
    "redshift-data:ExecuteStatement",
    "redshift-data:ListSchemas",
    "redshift-data:ListDatabases",
    "redshift-data:ListTables",
    "redshift-data:BatchExecuteStatement",
    "redshift-data:DescribeTable",
    "ebs:*",
    "ebs:PutSnapshotBlock",
    "ebs:ListSnapshotBlocks",
    "ebs:StartSnapshot",
    "ebs:GetSnapshotBlock",
    "ebs:ListChangedBlocks",
    "ebs:CompleteSnapshot",
    "greengrass:*",
    "greengrass:GetComponentVersionArtifact",
    "greengrass:BatchDisassociateClientDeviceFromCoreDevice",
    "greengrass:DeleteComponent",
    "greengrass:ListInstalledComponents",
    "greengrass:DeleteCoreDevice",
    "greengrass:GetComponent",
    "greengrass:ResolveComponentCandidates",
    "greengrass:GetConnectivityInfo",
    "greengrass:DeleteDeployment",
    "greengrass:BatchAssociateClientDeviceWithCoreDevice",
    "greengrass:TagResource",
    "greengrass:CreateComponentVersion",
    "greengrass:ListComponentVersions",
    "greengrass:DescribeComponent",
    "greengrass:ListEffectiveDeployments",
    "greengrass:GetCoreDevice",
    "greengrass:UntagResource",
    "greengrass:UpdateConnectivityInfo",
    "greengrass:ListTagsForResource",
    "greengrass:GetDeployment",
    "greengrass:CancelDeployment",
    "greengrass:ListClientDevicesAssociatedWithCoreDevice",
    "monitron:*",
    "monitron:DeleteProject",
    "monitron:UntagResource",
    "monitron:UpdateProject",
    "monitron:ListProjectAdminUsers",
    "monitron:GetProject",
    "monitron:DisassociateProjectAdminUser",
    "monitron:GetProjectAdminUser",
    "monitron:TagResource",
    "monitron:ListTagsForResource",
    "monitron:AssociateProjectAdminUser",
    "glue:*",
    "glue:BatchGetWorkflows",
    "glue:DeleteTableVersion",
    "glue:BatchGetDevEndpoints",
    "glue:BatchGetPartition",
    "glue:ImportCatalogToGlue",
    "glue:ListStatements",
    "glue:GetCrawler",
    "glue:PutWorkflowRunProperties",
    "glue:GetColumnStatisticsForPartition",
    "glue:UpdateTable",
    "glue:GetMLTransforms",
    "glue:CreateTable",
    "glue:GetTrigger",
    "glue:GetWorkflow",
    "glue:GetTableVersion",
    "glue:StartImportLabelsTaskRun",
    "glue:DeleteTable",
    "glue:GetCatalogImportStatus",
    "glue:DeleteSession",
    "glue:UpdateRegistry",
    "glue:RegisterSchemaVersion",
    "glue:UpdateColumnStatisticsForPartition",
    "glue:GetDevEndpoint",
    "glue:CreateUserDefinedFunction",
    "glue:GetConnections",
    "glue:UpdateUserDefinedFunction",
    "glue:CreateRegistry",
    "glue:DeleteMLTransform",
    "glue:GetMLTransform",
    "glue:GetPartitions",
    "glue:UpdatePartition",
    "glue:GetResourcePolicy",
    "glue:GetSchemaVersionsDiff",
    "glue:GetTables",
    "glue:GetBlueprintRuns",
    "glue:TagResource",
    "glue:StopCrawler",
    "glue:UpdateSchema",
    "glue:GetSchemaVersion",
    "glue:UpdateTrigger",
    "glue:DeleteColumnStatisticsForPartition",
    "glue:RemoveSchemaVersionMetadata",
    "glue:PutResourcePolicy",
    "glue:GetTableVersions",
    "glue:BatchDeletePartition",
    "glue:BatchDeleteTableVersion",
    "glue:GetDataCatalogEncryptionSettings",
    "glue:DeleteCrawler",
    "glue:GetWorkflowRuns",
    "glue:StartWorkflowRun",
    "glue:DeletePartition",
    "glue:UpdateConnection",
    "glue:GetResourcePolicies",
    "glue:GetStatement",
    "glue:DeleteConnection",
    "glue:PutSchemaVersionMetadata",
    "glue:UpdateBlueprint",
    "glue:BatchStopJobRun",
    "glue:StopWorkflowRun",
    "glue:UpdateDevEndpoint",
    "glue:StartMLLabelingSetGenerationTaskRun",
    "glue:DeleteUserDefinedFunction",
    "glue:DeleteSchemaVersions",
    "glue:StopSession",
    "glue:UpdateJob",
    "glue:GetJobRuns",
    "glue:DeletePartitionIndex",
    "glue:ListMLTransforms",
    "glue:GetSession",
    "glue:DeleteBlueprint",
    "glue:BatchUpdatePartition",
    "glue:GetWorkflowRun",
    "glue:PutDataCatalogEncryptionSettings",
    "glue:BatchCreatePartition",
    "glue:GetBlueprintRun",
    "glue:SearchTables",
    "glue:UpdateDatabase",
    "glue:ListSchemaVersions",
    "glue:GetJobRun",
    "glue:GetTags",
    "glue:CreatePartition",
    "glue:BatchGetTriggers",
    "glue:BatchDeleteConnection",
    "glue:ResumeWorkflowRun",
    "glue:CreateConnection",
    "glue:GetPartitionIndexes",
    "glue:GetBlueprint",
    "glue:DeleteSchema",
    "glue:UpdateColumnStatisticsForTable",
    "glue:StartMLEvaluationTaskRun",
    "glue:GetUserDefinedFunctions",
    "glue:GetMLTaskRuns",
    "glue:DeleteColumnStatisticsForTable",
    "glue:BatchGetBlueprints",
    "glue:CreatePartitionIndex",
    "glue:DeleteResourcePolicy",
    "glue:GetColumnStatisticsForTable",
    "glue:CancelMLTaskRun",
    "glue:StartExportLabelsTaskRun",
    "glue:UntagResource",
    "glue:BatchGetCrawlers",
    "glue:GetConnection",
    "glue:GetJob",
    "glue:CreateDatabase",
    "glue:BatchGetJobs",
    "glue:StartTrigger",
    "glue:DeleteWorkflow",
    "glue:ListSchemas",
    "glue:StopTrigger",
    "glue:DeleteJob",
    "glue:DeleteTrigger",
    "glue:CreateSchema",
    "glue:UpdateWorkflow",
    "glue:StartCrawler",
    "glue:GetPartition",
    "glue:GetWorkflowRunProperties",
    "glue:UpdateCrawler",
    "glue:UpdateMLTransform",
    "glue:StartJobRun",
    "glue:GetRegistry",
    "glue:CancelStatement",
    "glue:GetSchema",
    "glue:GetDatabase",
    "glue:GetTable",
    "glue:DeleteDatabase",
    "glue:GetSchemaByDefinition",
    "glue:BatchDeleteTable",
    "glue:QuerySchemaVersionMetadata",
    "glue:GetMLTaskRun",
    "glue:StartBlueprintRun",
    "glue:UseMLTransforms",
    "glue:RunStatement",
    "glue:GetUserDefinedFunction",
    "glue:GetDatabases",
    "glue:NotifyEvent",
    "glue:DeleteRegistry",
    "glue:DeleteDevEndpoint",
    "artifact:*",
    "artifact:DownloadAgreement",
    "artifact:TerminateAgreement",
    "artifact:AcceptAgreement",
    "artifact:Get",
    "polly:*",
    "polly:PutLexicon",
    "polly:DeleteLexicon",
    "polly:SynthesizeSpeech",
    "polly:GetLexicon",
    "polly:StartSpeechSynthesisTask",
    "sdb:*",
    "sdb:DeleteAttributes",
    "sdb:BatchDeleteAttributes",
    "sdb:PutAttributes",
    "sdb:BatchPutAttributes",
    "sdb:CreateDomain",
    "sdb:Select",
    "sdb:GetAttributes",
    "sdb:DomainMetadata",
    "sdb:DeleteDomain",
    "codedeploy:*",
    "codedeploy:UpdateApplication",
    "codedeploy:BatchGetOnPremisesInstances",
    "codedeploy:CreateDeploymentConfig",
    "codedeploy:GetOnPremisesInstance",
    "codedeploy:ListApplicationRevisions",
    "codedeploy:CreateDeploymentGroup",
    "codedeploy:GetApplicationRevision",
    "codedeploy:DeleteApplication",
    "codedeploy:DeleteDeploymentGroup",
    "codedeploy:BatchGetDeploymentInstances",
    "codedeploy:TagResource",
    "codedeploy:BatchGetDeploymentGroups",
    "codedeploy:CreateDeployment",
    "codedeploy:RegisterOnPremisesInstance",
    "codedeploy:RegisterApplicationRevision",
    "codedeploy:ListTagsForResource",
    "codedeploy:ListDeploymentGroups",
    "codedeploy:BatchGetDeployments",
    "codedeploy:CreateApplication",
    "codedeploy:RemoveTagsFromOnPremisesInstances",
    "codedeploy:DeleteDeploymentConfig",
    "codedeploy:ListDeploymentInstances",
    "codedeploy:UpdateDeploymentGroup",
    "codedeploy:GetDeploymentConfig",
    "codedeploy:GetDeploymentGroup",
    "codedeploy:UntagResource",
    "codedeploy:DeregisterOnPremisesInstance",
    "codedeploy:GetDeploymentInstance",
    "codedeploy:BatchGetApplications",
    "codedeploy:GetApplication",
    "codedeploy:GetDeployment",
    "codedeploy:AddTagsToOnPremisesInstances",
    "codedeploy:ListDeployments",
    "codedeploy:BatchGetApplicationRevisions",
    "neptune-db:*",
    "neptune-db:ReadDataViaQuery",
    "neptune-db:GetLoaderJobStatus",
    "neptune-db:CancelMLDataProcessingJob",
    "neptune-db:GetStreamRecords",
    "neptune-db:ListMLDataProcessingJobs",
    "neptune-db:CancelQuery",
    "neptune-db:GetEngineStatus",
    "neptune-db:StartMLModelTransformJob",
    "neptune-db:GetStatisticsStatus",
    "neptune-db:ListLoaderJobs",
    "neptune-db:GetQueryStatus",
    "neptune-db:ManageStatistics",
    "neptune-db:connect",
    "neptune-db:ResetDatabase",
    "neptune-db:CancelMLModelTrainingJob",
    "neptune-db:DeleteDataViaQuery",
    "neptune-db:GetMLModelTrainingJobStatus",
    "neptune-db:DeleteMLEndpoint",
    "neptune-db:GetMLDataProcessingJobStatus",
    "neptune-db:CancelMLModelTransformJob",
    "neptune-db:GetMLEndpointStatus",
    "neptune-db:CancelLoaderJob",
    "neptune-db:DeleteStatistics",
    "neptune-db:ListMLModelTransformJobs",
    "neptune-db:WriteDataViaQuery",
    "neptune-db:StartMLModelTrainingJob",
    "neptune-db:StartLoaderJob",
    "neptune-db:ListMLModelTrainingJobs",
    "neptune-db:StartMLDataProcessingJob",
    "neptune-db:ListMLEndpoints",
    "neptune-db:GetMLModelTransformJobStatus",
    "neptune-db:CreateMLEndpoint",
    "xray:*",
    "xray:GetGroup",
    "xray:UpdateGroup",
    "xray:UntagResource",
    "xray:CreateSamplingRule",
    "xray:TagResource",
    "xray:ListTagsForResource",
    "xray:DeleteSamplingRule",
    "xray:DeleteGroup",
    "xray:CreateGroup",
    "xray:UpdateSamplingRule",
    "devicefarm:*",
    "devicefarm:DeleteInstanceProfile",
    "devicefarm:CreateUpload",
    "devicefarm:GetJob",
    "devicefarm:ListTestGridSessionArtifacts",
    "devicefarm:ListTests",
    "devicefarm:GetVPCEConfiguration",
    "devicefarm:ListUniqueProblems",
    "devicefarm:GetRemoteAccessSession",
    "devicefarm:UpdateTestGridProject",
    "devicefarm:GetDevice",
    "devicefarm:GetSuite",
    "devicefarm:UpdateNetworkProfile",
    "devicefarm:GetProject",
    "devicefarm:CreateDevicePool",
    "devicefarm:DeleteProject",
    "devicefarm:UpdateDeviceInstance",
    "devicefarm:UpdateInstanceProfile",
    "devicefarm:GetTestGridProject",
    "devicefarm:UpdateProject",
    "devicefarm:GetDevicePool",
    "devicefarm:CreateNetworkProfile",
    "devicefarm:UpdateVPCEConfiguration",
    "devicefarm:GetDevicePoolCompatibility",
    "devicefarm:ListSamples",
    "devicefarm:TagResource",
    "devicefarm:InstallToRemoteAccessSession",
    "devicefarm:UntagResource",
    "devicefarm:ListRemoteAccessSessions",
    "devicefarm:ListJobs",
    "devicefarm:GetInstanceProfile",
    "devicefarm:StopRun",
    "devicefarm:DeleteRemoteAccessSession",
    "devicefarm:DeleteVPCEConfiguration",
    "devicefarm:DeleteUpload",
    "devicefarm:ListDevicePools",
    "devicefarm:GetTest",
    "devicefarm:ListArtifacts",
    "devicefarm:GetRun",
    "devicefarm:ListSuites",
    "devicefarm:ListUploads",
    "devicefarm:ListNetworkProfiles",
    "devicefarm:ListTagsForResource",
    "devicefarm:UpdateDevicePool",
    "devicefarm:ScheduleRun",
    "devicefarm:ListRuns",
    "devicefarm:GetNetworkProfile",
    "devicefarm:ListTestGridSessions",
    "devicefarm:DeleteNetworkProfile",
    "devicefarm:DeleteDevicePool",
    "devicefarm:GetDeviceInstance",
    "devicefarm:DeleteTestGridProject",
    "devicefarm:CreateRemoteAccessSession",
    "devicefarm:GetTestGridSession",
    "devicefarm:UpdateUpload",
    "devicefarm:StopRemoteAccessSession",
    "devicefarm:GetUpload",
    "devicefarm:CreateTestGridUrl",
    "devicefarm:StopJob",
    "devicefarm:ListTestGridSessionActions",
    "devicefarm:DeleteRun",
    "workspaces-web:*",
    "workspaces-web:GetPortal",
    "workspaces-web:DisassociateBrowserSettings",
    "workspaces-web:AssociateUserSettings",
    "workspaces-web:DeleteBrowserSettings",
    "workspaces-web:GetNetworkSettings",
    "workspaces-web:AssociateTrustStore",
    "workspaces-web:TagResource",
    "workspaces-web:DeleteTrustStore",
    "workspaces-web:DisassociateUserSettings",
    "workspaces-web:UpdateBrowserSettings",
    "workspaces-web:GetPortalServiceProviderMetadata",
    "workspaces-web:UntagResource",
    "workspaces-web:DisassociateTrustStore",
    "workspaces-web:DisassociateUserAccessLoggingSettings",
    "workspaces-web:UpdateUserAccessLoggingSettings",
    "workspaces-web:UpdatePortal",
    "workspaces-web:UpdateNetworkSettings",
    "workspaces-web:DeleteUserSettings",
    "workspaces-web:GetUserSettings",
    "workspaces-web:GetTrustStoreCertificate",
    "workspaces-web:CreateIdentityProvider",
    "workspaces-web:DeletePortal",
    "workspaces-web:UpdateUserSettings",
    "workspaces-web:AssociateBrowserSettings",
    "workspaces-web:GetBrowserSettings",
    "workspaces-web:GetTrustStore",
    "workspaces-web:UpdateTrustStore",
    "workspaces-web:AssociateUserAccessLoggingSettings",
    "workspaces-web:DeleteNetworkSettings",
    "workspaces-web:DeleteUserAccessLoggingSettings",
    "workspaces-web:AssociateNetworkSettings",
    "workspaces-web:GetUserAccessLoggingSettings",
    "workspaces-web:DisassociateNetworkSettings",
    "iottwinmaker:*",
    "iottwinmaker:UpdateEntity",
    "iottwinmaker:BatchPutPropertyValues",
    "iottwinmaker:UpdateScene",
    "iottwinmaker:DeleteComponentType",
    "iottwinmaker:CreateComponentType",
    "iottwinmaker:UpdateWorkspace",
    "iottwinmaker:GetPropertyValueHistory",
    "iottwinmaker:GetScene",
    "iottwinmaker:ListComponentTypes",
    "iottwinmaker:GetPropertyValue",
    "iottwinmaker:ListScenes",
    "iottwinmaker:GetEntity",
    "iottwinmaker:GetComponentType",
    "iottwinmaker:GetWorkspace",
    "iottwinmaker:ListTagsForResource",
    "iottwinmaker:DeleteEntity",
    "iottwinmaker:UpdateComponentType",
    "iottwinmaker:ListEntities",
    "iottwinmaker:CreateEntity",
    "iottwinmaker:DeleteScene",
    "iottwinmaker:CreateScene",
    "iottwinmaker:UntagResource",
    "iottwinmaker:DeleteWorkspace",
    "iottwinmaker:TagResource",
    "cloudwatch:*",
    "cloudwatch:DeleteMetricStream",
    "cloudwatch:EnableInsightRules",
    "cloudwatch:PutInsightRule",
    "cloudwatch:EnableAlarmActions",
    "cloudwatch:GetMetricStream",
    "cloudwatch:PutDashboard",
    "cloudwatch:DescribeAlarms",
    "cloudwatch:DescribeAlarmHistory",
    "cloudwatch:UntagResource",
    "cloudwatch:GetDashboard",
    "cloudwatch:DeleteAlarms",
    "cloudwatch:PutCompositeAlarm",
    "cloudwatch:SetAlarmState",
    "cloudwatch:DisableAlarmActions",
    "cloudwatch:DisableInsightRules",
    "cloudwatch:PutMetricAlarm",
    "cloudwatch:StopMetricStreams",
    "cloudwatch:TagResource",
    "cloudwatch:DeleteDashboards",
    "cloudwatch:DeleteInsightRules",
    "cloudwatch:ListTagsForResource",
    "cloudwatch:GetInsightRuleReport",
    "cloudwatch:StartMetricStreams",
    "cloudwatch:PutMetricStream",
    "apigateway:*",
    "apigateway:SetWebACL",
    "apigateway:POST",
    "apigateway:AddCertificateToDomain",
    "apigateway:GET",
    "apigateway:PATCH",
    "apigateway:DELETE",
    "apigateway:UpdateRestApiPolicy",
    "apigateway:RemoveCertificateFromDomain",
    "apigateway:PUT",
    "iotroborunner:*",
    "iotroborunner:GetWorker",
    "iotroborunner:UpdateWorker",
    "iotroborunner:UpdateTask",
    "iotroborunner:CreateDestination",
    "iotroborunner:CreateWorkerFleet",
    "iotroborunner:UpdateActionState",
    "iotroborunner:DeleteAction",
    "iotroborunner:CreateWorker",
    "iotroborunner:DeleteWorker",
    "iotroborunner:DeleteActivity",
    "iotroborunner:GetTask",
    "iotroborunner:DeleteActionTemplate",
    "iotroborunner:DeleteSite",
    "iotroborunner:GetWorkerFleet",
    "iotroborunner:UpdateWorkerFleet",
    "iotroborunner:UpdateSite",
    "iotroborunner:GetActionTemplate",
    "iotroborunner:UpdateActivity",
    "iotroborunner:DeleteWorkerFleet",
    "iotroborunner:DeleteDestination",
    "iotroborunner:GetDestination",
    "iotroborunner:UpdateDestination",
    "iotroborunner:DeleteDestinationRelationship",
    "iotroborunner:GetActivity",
    "iotroborunner:ListWorkerFleets",
    "iotroborunner:GetSite",
    "iotroborunner:DeleteTask",
    "iotroborunner:GetDestinationRelationship",
    "iotroborunner:GetAction",
    "iotroborunner:ListWorkers",
    "athena:*",
    "athena:UpdateDataCatalog",
    "athena:GetNamedQuery",
    "athena:ListQueryExecutions",
    "athena:UpdatePreparedStatement",
    "athena:StopQueryExecution",
    "athena:ListDatabases",
    "athena:StartQueryExecution",
    "athena:BatchGetNamedQuery",
    "athena:TagResource",
    "athena:GetDataCatalog",
    "athena:GetQueryResults",
    "athena:BatchGetQueryExecution",
    "athena:UpdateWorkGroup",
    "athena:GetPreparedStatement",
    "athena:UpdateNamedQuery",
    "athena:CreateNamedQuery",
    "athena:GetTableMetadata",
    "athena:BatchGetPreparedStatement",
    "athena:ListNamedQueries",
    "athena:GetWorkGroup",
    "athena:CreatePreparedStatement",
    "athena:CreateDataCatalog",
    "athena:DeleteNamedQuery",
    "athena:ListTagsForResource",
    "athena:DeleteDataCatalog",
    "athena:GetQueryExecution",
    "athena:DeleteWorkGroup",
    "athena:CreateWorkGroup",
    "athena:ListTableMetadata",
    "athena:UntagResource",
    "athena:GetQueryRuntimeStatistics",
    "athena:ListPreparedStatements",
    "athena:GetQueryResultsStream",
    "athena:DeletePreparedStatement",
    "athena:GetDatabase",
    "rekognition:*",
    "rekognition:DeleteProjectPolicy",
    "rekognition:DeleteStreamProcessor",
    "rekognition:StartProjectVersion",
    "rekognition:DescribeCollection",
    "rekognition:DeleteFaces",
    "rekognition:ListProjectPolicies",
    "rekognition:SearchFacesByImage",
    "rekognition:DeleteProjectVersion",
    "rekognition:CreateProjectVersion",
    "rekognition:DescribeStreamProcessor",
    "rekognition:CreateStreamProcessor",
    "rekognition:ListDatasetEntries",
    "rekognition:ListStreamProcessors",
    "rekognition:CopyProjectVersion",
    "rekognition:ListTagsForResource",
    "rekognition:UpdateStreamProcessor",
    "rekognition:DescribeProjectVersions",
    "rekognition:StopProjectVersion",
    "rekognition:CreateProject",
    "rekognition:DescribeDataset",
    "rekognition:ListCollections",
    "rekognition:TagResource",
    "rekognition:IndexFaces",
    "rekognition:DetectCustomLabels",
    "rekognition:ListDatasetLabels",
    "rekognition:DeleteDataset",
    "rekognition:StartFaceSearch",
    "rekognition:StopStreamProcessor",
    "rekognition:DeleteCollection",
    "rekognition:UpdateDatasetEntries",
    "rekognition:SearchFaces",
    "rekognition:CreateDataset",
    "rekognition:DistributeDatasetEntries",
    "rekognition:ListFaces",
    "rekognition:DeleteProject",
    "rekognition:UntagResource",
    "rekognition:StartStreamProcessor",
    "rekognition:PutProjectPolicy",
    "glacier:*",
    "glacier:SetVaultNotifications",
    "glacier:DeleteVaultNotifications",
    "glacier:ListParts",
    "glacier:UploadArchive",
    "glacier:SetVaultAccessPolicy",
    "glacier:GetJobOutput",
    "glacier:CompleteVaultLock",
    "glacier:InitiateVaultLock",
    "glacier:CompleteMultipartUpload",
    "glacier:GetVaultLock",
    "glacier:GetVaultNotifications",
    "glacier:AbortVaultLock",
    "glacier:GetVaultAccessPolicy",
    "glacier:ListTagsForVault",
    "glacier:UploadMultipartPart",
    "glacier:AbortMultipartUpload",
    "glacier:RemoveTagsFromVault",
    "glacier:ListJobs",
    "glacier:InitiateMultipartUpload",
    "glacier:CreateVault",
    "glacier:InitiateJob",
    "glacier:DescribeJob",
    "glacier:AddTagsToVault",
    "glacier:DeleteVault",
    "glacier:DeleteArchive",
    "glacier:ListMultipartUploads",
    "glacier:DeleteVaultAccessPolicy",
    "glacier:DescribeVault",
    "deepcomposer:*",
    "deepcomposer:CreateModel",
    "deepcomposer:GetSampleModel",
    "deepcomposer:ListModels",
    "deepcomposer:ListSampleModels",
    "deepcomposer:UntagResource",
    "deepcomposer:ListCompositions",
    "deepcomposer:GetModel",
    "deepcomposer:DeleteModel",
    "deepcomposer:UpdateComposition",
    "deepcomposer:TagResource",
    "deepcomposer:CreateAudio",
    "deepcomposer:ListTagsForResource",
    "deepcomposer:DeleteComposition",
    "deepcomposer:GetComposition",
    "deepcomposer:ListTrainingTopics",
    "deepcomposer:CreateComposition",
    "deepcomposer:UpdateModel",
    "billingconductor:*",
    "billingconductor:BatchDisassociateResourcesFromCustomLineItem",
    "billingconductor:ListPricingPlansAssociatedWithPricingRule",
    "billingconductor:DeletePricingPlan",
    "billingconductor:DeleteBillingGroup",
    "billingconductor:BatchAssociateResourcesToCustomLineItem",
    "billingconductor:DeletePricingRule",
    "billingconductor:UpdateCustomLineItem",
    "billingconductor:CreateBillingGroup",
    "billingconductor:DisassociatePricingRules",
    "billingconductor:AssociateAccounts",
    "billingconductor:UpdatePricingPlan",
    "billingconductor:DeleteCustomLineItem",
    "billingconductor:ListResourcesAssociatedToCustomLineItem",
    "billingconductor:AssociatePricingRules",
    "billingconductor:UpdateBillingGroup",
    "billingconductor:DisassociateAccounts",
    "billingconductor:ListPricingRulesAssociatedToPricingPlan",
    "billingconductor:UpdatePricingRule",
    "groundstation:*",
    "groundstation:DeleteMissionProfile",
    "groundstation:UpdateMissionProfile",
    "groundstation:DeleteDataflowEndpointGroup",
    "groundstation:DescribeContact",
    "groundstation:GetMissionProfile",
    "groundstation:GetSatellite",
    "groundstation:ListTagsForResource",
    "groundstation:UntagResource",
    "groundstation:DeleteConfig",
    "groundstation:GetDataflowEndpointGroup",
    "groundstation:UpdateConfig",
    "groundstation:CancelContact",
    "groundstation:TagResource",
    "groundstation:GetConfig",
    "databrew:*",
    "databrew:ListRecipeVersions",
    "databrew:ListJobRuns",
    "databrew:UpdateSchedule",
    "databrew:DescribeJob",
    "databrew:TagResource",
    "databrew:DeleteRecipeVersion",
    "databrew:BatchDeleteRecipeVersion",
    "databrew:StartProjectSession",
    "databrew:UpdateProfileJob",
    "databrew:PublishRecipe",
    "databrew:DescribeJobRun",
    "databrew:DescribeRuleset",
    "databrew:UpdateRuleset",
    "databrew:DescribeRecipe",
    "databrew:UpdateDataset",
    "databrew:DeleteProject",
    "databrew:UntagResource",
    "databrew:DescribeDataset",
    "databrew:DescribeSchedule",
    "databrew:UpdateRecipe",
    "databrew:DeleteRuleset",
    "databrew:UpdateProject",
    "databrew:ListTagsForResource",
    "databrew:DeleteSchedule",
    "databrew:DescribeProject",
    "databrew:SendProjectSessionAction",
    "databrew:DeleteJob",
    "databrew:UpdateRecipeJob",
    "databrew:DeleteDataset",
    "databrew:StopJobRun",
    "databrew:StartJobRun",
    "config:*",
    "config:DeleteEvaluationResults",
    "config:GetAggregateConformancePackComplianceSummary",
    "config:PutConfigRule",
    "config:GetAggregateResourceConfig",
    "config:TagResource",
    "config:ListTagsForResource",
    "config:UntagResource",
    "config:DescribeComplianceByConfigRule",
    "config:ListStoredQueries",
    "config:PutConfigurationAggregator",
    "config:StartConfigRulesEvaluation",
    "config:GetAggregateConfigRuleComplianceSummary",
    "config:GetComplianceDetailsByConfigRule",
    "config:DescribeRemediationExecutionStatus",
    "config:PutRemediationConfigurations",
    "config:DescribeConfigurationAggregatorSourcesStatus",
    "config:DeleteConfigRule",
    "config:DeleteConfigurationAggregator",
    "config:GetAggregateComplianceDetailsByConfigRule",
    "config:DeleteStoredQuery",
    "config:DeleteRemediationConfiguration",
    "config:GetStoredQuery",
    "config:DescribeConfigRuleEvaluationStatus",
    "config:StartRemediationExecution",
    "config:ListAggregateDiscoveredResources",
    "config:DescribeAggregateComplianceByConfigRules",
    "config:PutAggregationAuthorization",
    "config:DescribeConfigRules",
    "config:BatchGetAggregateResourceConfig",
    "config:PutStoredQuery",
    "config:GetAggregateDiscoveredResourceCounts",
    "config:DescribeRemediationConfigurations",
    "config:DescribeAggregateComplianceByConformancePacks",
    "config:DeleteAggregationAuthorization",
    "ecr:*",
    "ecr:BatchCheckLayerAvailability",
    "ecr:ListImages",
    "ecr:InitiateLayerUpload",
    "ecr:StartLifecyclePolicyPreview",
    "ecr:TagResource",
    "ecr:PutImageTagMutability",
    "ecr:GetLifecyclePolicy",
    "ecr:ReplicateImage",
    "ecr:PutImage",
    "ecr:GetLifecyclePolicyPreview",
    "ecr:StartImageScan",
    "ecr:PutImageScanningConfiguration",
    "ecr:DescribeImages",
    "ecr:UploadLayerPart",
    "ecr:DeleteLifecyclePolicy",
    "ecr:DescribeRepositories",
    "ecr:DeleteRepository",
    "ecr:DescribeImageReplicationStatus",
    "ecr:CompleteLayerUpload",
    "ecr:ListTagsForResource",
    "ecr:BatchDeleteImage",
    "ecr:BatchGetRepositoryScanningConfiguration",
    "ecr:PutLifecyclePolicy",
    "ecr:BatchGetImage",
    "ecr:UntagResource",
    "ecr:GetDownloadUrlForLayer",
    "ecr:GetRepositoryPolicy",
    "ecr:SetRepositoryPolicy",
    "ecr:DeleteRepositoryPolicy",
    "ecr:DescribeImageScanFindings",
    "mediastore:*",
    "mediastore:GetContainerPolicy",
    "mediastore:DeleteLifecyclePolicy",
    "mediastore:DeleteContainerPolicy",
    "mediastore:DeleteContainer",
    "mediastore:GetLifecyclePolicy",
    "mediastore:ListTagsForResource",
    "mediastore:GetMetricPolicy",
    "mediastore:TagResource",
    "mediastore:PutObject",
    "mediastore:GetCorsPolicy",
    "mediastore:PutContainerPolicy",
    "mediastore:DescribeObject",
    "mediastore:StartAccessLogging",
    "mediastore:DeleteMetricPolicy",
    "mediastore:PutCorsPolicy",
    "mediastore:StopAccessLogging",
    "mediastore:ListItems",
    "mediastore:PutLifecyclePolicy",
    "mediastore:UntagResource",
    "mediastore:DeleteCorsPolicy",
    "mediastore:DeleteObject",
    "mediastore:GetObject",
    "mediastore:PutMetricPolicy",
    "mediastore:DescribeContainer",
    "deeplens:*",
    "deeplens:RemoveProject",
    "deeplens:DeleteProject",
    "deeplens:BatchGetModel",
    "deeplens:GetDevice",
    "deeplens:DeleteModel",
    "deeplens:BatchGetDevice",
    "deeplens:DeployProject",
    "deeplens:GetProject",
    "deeplens:UpdateProject",
    "deeplens:DeregisterDevice",
    "deeplens:BatchGetProject",
    "deeplens:GetModel",
    "memorydb:*",
    "memorydb:DescribeClusters",
    "memorydb:DeleteAcl",
    "memorydb:CreateAcl",
    "memorydb:DeleteParameterGroup",
    "memorydb:UpdateParameterGroup",
    "memorydb:CreateCluster",
    "memorydb:FailoverShard",
    "memorydb:DeleteSubnetGroup",
    "memorydb:DescribeSnapshots",
    "memorydb:ListTags",
    "memorydb:UpdateUser",
    "memorydb:DescribeSubnetGroups",
    "memorydb:ResetParameterGroup",
    "memorydb:CreateSnapshot",
    "memorydb:DescribeAcls",
    "memorydb:UntagResource",
    "memorydb:DescribeParameters",
    "memorydb:TagResource",
    "memorydb:DeleteUser",
    "memorydb:DescribeUsers",
    "memorydb:UpdateCluster",
    "memorydb:UpdateAcl",
    "memorydb:DescribeParameterGroups",
    "memorydb:CopySnapshot",
    "memorydb:ListAllowedNodeTypeUpdates",
    "memorydb:DeleteSnapshot",
    "memorydb:UpdateSubnetGroup",
    "memorydb:DeleteCluster",
    "memorydb:BatchUpdateCluster",
    "pi:*",
    "pi:DescribeDimensionKeys",
    "pi:ListAvailableResourceDimensions",
    "pi:GetResourceMetadata",
    "pi:ListAvailableResourceMetrics",
    "pi:GetResourceMetrics",
    "pi:GetDimensionKeyDetails",
    "ivschat:*",
    "ivschat:GetRoom",
    "ivschat:UpdateRoom",
    "ivschat:CreateChatToken",
    "ivschat:TagResource",
    "ivschat:DeleteRoom",
    "ivschat:DeleteMessage",
    "ivschat:CreateRoom",
    "ivschat:UntagResource",
    "ivschat:ListTagsForResource",
    "ivschat:DisconnectUser",
    "ivschat:SendEvent",
    "ivschat:ListRooms",
    "outposts:*",
    "outposts:UpdateSiteRackPhysicalProperties",
    "outposts:DeleteOutpost",
    "outposts:GetOutpostInstanceTypes",
    "outposts:UpdateSiteAddress",
    "outposts:DeleteSite",
    "outposts:GetSite",
    "outposts:CreateOrder",
    "outposts:GetOutpost",
    "outposts:UpdateSite",
    "outposts:GetSiteAddress",
    "outposts:CreateOutpost",
    "outposts:UpdateOutpost",
    "codepipeline:*",
    "codepipeline:GetPipeline",
    "codepipeline:DeregisterWebhookWithThirdParty",
    "codepipeline:DeleteCustomActionType",
    "codepipeline:RegisterWebhookWithThirdParty",
    "codepipeline:PollForJobs",
    "codepipeline:PutActionRevision",
    "codepipeline:UpdatePipeline",
    "codepipeline:EnableStageTransition",
    "codepipeline:DeleteWebhook",
    "codepipeline:RetryStageExecution",
    "codepipeline:DeletePipeline",
    "codepipeline:StopPipelineExecution",
    "codepipeline:UntagResource",
    "codepipeline:ListActionExecutions",
    "codepipeline:GetPipelineExecution",
    "codepipeline:UpdateActionType",
    "codepipeline:CreatePipeline",
    "codepipeline:TagResource",
    "codepipeline:ListPipelineExecutions",
    "codepipeline:CreateCustomActionType",
    "codepipeline:PutApprovalResult",
    "codepipeline:ListWebhooks",
    "codepipeline:ListTagsForResource",
    "codepipeline:DisableStageTransition",
    "codepipeline:PutWebhook",
    "codepipeline:StartPipelineExecution",
    "codepipeline:GetPipelineState",
    "macie2:*",
    "macie2:BatchGetCustomDataIdentifiers",
    "macie2:TagResource",
    "macie2:UpdateFindingsFilter",
    "macie2:DeleteMember",
    "macie2:DescribeClassificationJob",
    "macie2:CreateClassificationJob",
    "macie2:UpdateAllowList",
    "macie2:DisassociateMember",
    "macie2:UpdateClassificationJob",
    "macie2:UntagResource",
    "macie2:CreateMember",
    "macie2:DeleteAllowList",
    "macie2:GetAllowList",
    "macie2:DeleteFindingsFilter",
    "macie2:CreateCustomDataIdentifier",
    "macie2:GetMember",
    "macie2:ListTagsForResource",
    "macie2:DeleteCustomDataIdentifier",
    "macie2:GetFindingsFilter",
    "macie2:CreateFindingsFilter",
    "macie2:GetCustomDataIdentifier",
    "panorama:*",
    "panorama:CreateStreams",
    "panorama:CreateAppVersion",
    "panorama:DescribeApp",
    "panorama:DescribeDevice",
    "panorama:UpdateApp",
    "panorama:GetInputs",
    "panorama:CreateDataSource",
    "panorama:UpdateDataSource",
    "panorama:DeleteDevice",
    "panorama:DescribeApplicationInstance",
    "panorama:CreateInputs",
    "panorama:DeleteAppVersion",
    "panorama:DescribeApplicationInstanceDetails",
    "panorama:UntagResource",
    "panorama:DescribeAppVersion",
    "panorama:TagResource",
    "panorama:UpdateAppConfiguration",
    "panorama:ListAppVersions",
    "panorama:ListDataSources",
    "panorama:DescribeDataSource",
    "panorama:DescribeModel",
    "panorama:DeleteModel",
    "panorama:DeleteDataSource",
    "panorama:DeleteApp",
    "panorama:GetStreams",
    "panorama:RemoveApplicationInstance",
    "panorama:DeletePackage",
    "panorama:DescribePackage",
    "panorama:ListTagsForResource",
    "migrationhub-orchestrator:*",
    "migrationhub-orchestrator:StartWorkflow",
    "migrationhub-orchestrator:UpdateWorkflow",
    "migrationhub-orchestrator:ListWorkflowSteps",
    "migrationhub-orchestrator:UntagResource",
    "migrationhub-orchestrator:RetryWorkflowStep",
    "migrationhub-orchestrator:GetWorkflowStep",
    "migrationhub-orchestrator:DeleteWorkflowStepGroup",
    "migrationhub-orchestrator:CreateWorkflowStepGroup",
    "migrationhub-orchestrator:DeleteWorkflowStep",
    "migrationhub-orchestrator:TagResource",
    "migrationhub-orchestrator:DeleteWorkflow",
    "migrationhub-orchestrator:CreateWorkflowStep",
    "migrationhub-orchestrator:GetWorkflowStepGroup",
    "migrationhub-orchestrator:ListWorkflowStepGroups",
    "migrationhub-orchestrator:GetWorkflow",
    "migrationhub-orchestrator:UpdateWorkflowStep",
    "migrationhub-orchestrator:StopWorkflow",
    "migrationhub-orchestrator:ListTagsForResource",
    "migrationhub-orchestrator:UpdateWorkflowStepGroup",
    "robomaker:*",
    "robomaker:CancelSimulationJob",
    "robomaker:DescribeFleet",
    "robomaker:DescribeWorldGenerationJob",
    "robomaker:DescribeSimulationApplication",
    "robomaker:UpdateWorldTemplate",
    "robomaker:DescribeWorldTemplate",
    "robomaker:UpdateSimulationApplication",
    "robomaker:DeleteRobot",
    "robomaker:CancelDeploymentJob",
    "robomaker:RegisterRobot",
    "robomaker:SyncDeploymentJob",
    "robomaker:DeleteSimulationApplication",
    "robomaker:DeleteWorldTemplate",
    "robomaker:TagResource",
    "robomaker:DescribeRobotApplication",
    "robomaker:DescribeSimulationJobBatch",
    "robomaker:CreateWorldGenerationJob",
    "robomaker:ListTagsForResource",
    "robomaker:CancelWorldExportJob",
    "robomaker:RestartSimulationJob",
    "robomaker:DeleteRobotApplication",
    "robomaker:CreateRobotApplicationVersion",
    "robomaker:DeregisterRobot",
    "robomaker:DescribeDeploymentJob",
    "robomaker:DescribeWorldExportJob",
    "robomaker:CancelWorldGenerationJob",
    "robomaker:CreateSimulationApplicationVersion",
    "robomaker:CreateWorldExportJob",
    "robomaker:GetWorldTemplateBody",
    "robomaker:DescribeWorld",
    "robomaker:DescribeRobot",
    "robomaker:DeleteFleet",
    "robomaker:UpdateRobotApplication",
    "robomaker:DescribeSimulationJob",
    "robomaker:UntagResource",
    "robomaker:CancelSimulationJobBatch",
    "quicksight:*",
    "quicksight:UpdateFolderPermissions",
    "quicksight:DescribeGroup",
    "quicksight:DescribeNamespace",
    "quicksight:ListThemeAliases",
    "quicksight:ListDashboardVersions",
    "quicksight:DescribeFolderPermissions",
    "quicksight:CreateIAMPolicyAssignment",
    "quicksight:DescribeDataSet",
    "quicksight:DeleteFolder",
    "quicksight:ListThemes",
    "quicksight:DeleteDashboard",
    "quicksight:SearchDashboards",
    "quicksight:GetDashboardEmbedUrl",
    "quicksight:ListThemeVersions",
    "quicksight:SearchAnalyses",
    "quicksight:DeleteDataSource",
    "quicksight:CreateGroup",
    "quicksight:DescribeAnalysisPermissions",
    "quicksight:ListFolders",
    "quicksight:PassDataSource",
    "quicksight:ListIAMPolicyAssignments",
    "quicksight:DescribeIngestion",
    "quicksight:UpdateDashboardPermissions",
    "quicksight:ListTemplates",
    "quicksight:CreateDashboard",
    "quicksight:UpdateDashboardPublishedVersion",
    "quicksight:DeleteUserByPrincipalId",
    "quicksight:DescribeFolderResolvedPermissions",
    "quicksight:DeleteEmailCustomizationTemplate",
    "quicksight:DescribeDashboardPermissions",
    "quicksight:CreateThemeAlias",
    "quicksight:CancelIngestion",
    "quicksight:TagResource",
    "quicksight:ListTemplateVersions",
    "quicksight:DeleteUser",
    "quicksight:DescribeAnalysis",
    "quicksight:UpdateTemplatePermissions",
    "quicksight:ListGroups",
    "quicksight:ListUsers",
    "quicksight:CreateTemplate",
    "quicksight:DescribeUser",
    "quicksight:DeleteTemplateAlias",
    "quicksight:UpdateDataSet",
    "quicksight:ListAnalyses",
    "quicksight:UpdateUser",
    "quicksight:DeleteAccountCustomization",
    "quicksight:DeleteTemplate",
    "quicksight:ListDashboards",
    "quicksight:UpdateEmailCustomizationTemplate",
    "quicksight:ListTemplateAliases",
    "quicksight:CreateUser",
    "quicksight:CreateReader",
    "quicksight:UpdateAccountCustomization",
    "quicksight:DescribeTemplate",
    "quicksight:ListTagsForResource",
    "quicksight:DescribeTheme",
    "quicksight:DescribeAccountCustomization",
    "quicksight:CreateTemplateAlias",
    "quicksight:UntagResource",
    "quicksight:GetAuthCode",
    "quicksight:UpdateThemeAlias",
    "quicksight:DeleteGroup",
    "quicksight:DeleteTheme",
    "quicksight:PassDataSet",
    "quicksight:CreateNamespace",
    "quicksight:DescribeThemePermissions",
    "quicksight:DeleteGroupMembership",
    "quicksight:DescribeThemeAlias",
    "quicksight:CreateAnalysis",
    "quicksight:CreateIngestion",
    "quicksight:CreateGroupMembership",
    "quicksight:GenerateEmbedUrlForAnonymousUser",
    "quicksight:UpdateDataSource",
    "quicksight:RestoreAnalysis",
    "quicksight:UpdateDataSourcePermissions",
    "quicksight:DescribeDashboard",
    "quicksight:UpdateThemePermissions",
    "quicksight:DeleteFolderMembership",
    "quicksight:ListFolderMembers",
    "quicksight:DeleteThemeAlias",
    "quicksight:CreateFolder",
    "quicksight:UpdateFolder",
    "quicksight:DescribeTemplatePermissions",
    "quicksight:CreateAdmin",
    "quicksight:DescribeDataSetPermissions",
    "quicksight:DeleteAnalysis",
    "quicksight:DescribeFolder",
    "quicksight:DeleteDataSet",
    "quicksight:UpdateDashboard",
    "quicksight:DeleteNamespace",
    "quicksight:CreateTheme",
    "quicksight:ListIAMPolicyAssignmentsForUser",
    "quicksight:CreateFolderMembership",
    "quicksight:ListUserGroups",
    "quicksight:UpdateDataSetPermissions",
    "quicksight:UpdateGroup",
    "quicksight:DescribeAccountSubscription",
    "quicksight:UpdateTheme",
    "quicksight:DeleteIAMPolicyAssignment",
    "quicksight:CreateDataSet",
    "quicksight:GenerateEmbedUrlForRegisteredUser",
    "quicksight:UpdateIAMPolicyAssignment",
    "quicksight:DescribeDataSourcePermissions",
    "quicksight:DescribeTemplateAlias",
    "quicksight:DescribeEmailCustomizationTemplate",
    "quicksight:SearchGroups",
    "quicksight:SearchFolders",
    "quicksight:DescribeGroupMembership",
    "quicksight:UpdateAnalysis",
    "quicksight:DescribeIAMPolicyAssignment",
    "quicksight:UpdateTemplateAlias",
    "quicksight:DescribeDataSource",
    "quicksight:UpdateTemplate",
    "quicksight:RegisterUser",
    "quicksight:ListGroupMemberships",
    "quicksight:UpdateAnalysisPermissions",
    "quicksight:CreateEmailCustomizationTemplate",
    "dms:*",
    "dms:DescribeTableStatistics",
    "dms:DescribeReplicationTaskIndividualAssessments",
    "dms:ListTagsForResource",
    "dms:CancelReplicationTaskAssessmentRun",
    "dms:RebootReplicationInstance",
    "dms:ModifyReplicationTask",
    "dms:DescribeReplicationTaskAssessmentResults",
    "dms:DescribeReplicationInstanceTaskLogs",
    "dms:StopReplicationTask",
    "dms:ModifyReplicationInstance",
    "dms:RemoveTagsFromResource",
    "dms:DeleteEndpoint",
    "dms:TestConnection",
    "dms:DescribeReplicationTaskAssessmentRuns",
    "dms:CreateReplicationTask",
    "dms:DeleteCertificate",
    "dms:DeleteConnection",
    "dms:ModifyEndpoint",
    "dms:RefreshSchemas",
    "dms:DeleteEventSubscription",
    "dms:AddTagsToResource",
    "dms:DeleteReplicationTaskAssessmentRun",
    "dms:DeleteReplicationInstance",
    "dms:DescribeRefreshSchemasStatus",
    "dms:StartReplicationTaskAssessmentRun",
    "dms:ApplyPendingMaintenanceAction",
    "dms:DeleteReplicationTask",
    "dms:MoveReplicationTask",
    "dms:DescribeSchemas",
    "dms:StartReplicationTask",
    "dms:ReloadTables",
    "dms:DescribeApplicableIndividualAssessments",
    "dms:DeleteReplicationSubnetGroup",
    "dms:StartReplicationTaskAssessment",
    "codestar-connections:*",
    "codestar-connections:UseConnection",
    "codestar-connections:PassConnection",
    "codestar-connections:DeleteHost",
    "codestar-connections:UpdateConnectionInstallation",
    "codestar-connections:UpdateHost",
    "codestar-connections:UntagResource",
    "codestar-connections:TagResource",
    "codestar-connections:GetHost",
    "codestar-connections:GetConnection",
    "codestar-connections:ListTagsForResource",
    "codestar-connections:DeleteConnection",
    "appsync:*",
    "appsync:DisassociateApi",
    "appsync:GetApiAssociation",
    "appsync:UntagResource",
    "appsync:GetDomainName",
    "appsync:TagResource",
    "appsync:UpdateGraphqlApi",
    "appsync:GraphQL",
    "appsync:AssociateApi",
    "appsync:GetGraphqlApi",
    "appsync:ListTagsForResource",
    "appsync:UpdateDomainName",
    "appsync:DeleteDomainName",
    "appsync:DeleteGraphqlApi",
    "sso:*",
    "sso:ListAccountAssignmentCreationStatus",
    "sso:DeleteInstanceAccessControlAttributeConfiguration",
    "sso:PutPermissionsBoundaryToPermissionSet",
    "sso:DeletePermissionSet",
    "sso:ListTagsForResource",
    "sso:CreatePermissionSet",
    "sso:ListAccountAssignmentDeletionStatus",
    "sso:UpdateInstanceAccessControlAttributeConfiguration",
    "sso:CreateInstanceAccessControlAttributeConfiguration",
    "sso:DeleteAccountAssignment",
    "sso:DescribeAccountAssignmentCreationStatus",
    "sso:AttachCustomerManagedPolicyReferenceToPermissionSet",
    "sso:ListPermissionSetsProvisionedToAccount",
    "sso:ListAccountAssignments",
    "sso:ListPermissionSetProvisioningStatus",
    "sso:UpdatePermissionSet",
    "sso:ProvisionPermissionSet",
    "sso:GetPermissionsBoundaryForPermissionSet",
    "sso:DescribePermissionSet",
    "sso:ListPermissionSets",
    "sso:TagResource",
    "sso:DetachCustomerManagedPolicyReferenceFromPermissionSet",
    "sso:UntagResource",
    "sso:ListAccountsForProvisionedPermissionSet",
    "sso:DeleteInlinePolicyFromPermissionSet",
    "sso:GetInlinePolicyForPermissionSet",
    "sso:ListManagedPoliciesInPermissionSet",
    "sso:DetachManagedPolicyFromPermissionSet",
    "sso:DescribeInstanceAccessControlAttributeConfiguration",
    "sso:DescribePermissionSetProvisioningStatus",
    "sso:CreateAccountAssignment",
    "sso:PutInlinePolicyToPermissionSet",
    "sso:DescribeAccountAssignmentDeletionStatus",
    "sso:ListCustomerManagedPolicyReferencesInPermissionSet",
    "sso:AttachManagedPolicyToPermissionSet",
    "sso:DeletePermissionsBoundaryFromPermissionSet",
    "s3-outposts:*",
    "s3-outposts:GetBucketPolicy",
    "s3-outposts:PutLifecycleConfiguration",
    "s3-outposts:DeleteBucket",
    "s3-outposts:CreateBucket",
    "s3-outposts:GetBucket",
    "s3-outposts:ListBucketMultipartUploads",
    "s3-outposts:DeleteAccessPoint",
    "s3-outposts:ListMultipartUploadParts",
    "s3-outposts:CreateAccessPoint",
    "s3-outposts:DeleteObject",
    "s3-outposts:PutObjectAcl",
    "s3-outposts:ListBucket",
    "s3-outposts:CreateEndpoint",
    "s3-outposts:PutAccessPointPolicy",
    "s3-outposts:DeleteEndpoint",
    "s3-outposts:AbortMultipartUpload",
    "s3-outposts:GetAccessPointPolicy",
    "s3-outposts:GetObject",
    "s3-outposts:PutBucketTagging",
    "s3-outposts:DeleteAccessPointPolicy",
    "s3-outposts:DeleteObjectTagging",
    "s3-outposts:PutBucketPolicy",
    "s3-outposts:GetBucketTagging",
    "s3-outposts:PutObject",
    "s3-outposts:PutObjectTagging",
    "s3-outposts:GetObjectTagging",
    "s3-outposts:DeleteBucketPolicy",
    "s3-outposts:GetLifecycleConfiguration",
    "cassandra:*",
    "cassandra:Select",
    "cassandra:Modify",
    "cassandra:Alter",
    "cassandra:Drop",
    "cassandra:UntagResource",
    "cassandra:Create",
    "cassandra:Restore",
    "cassandra:TagResource",
    "cassandra:UpdatePartitioner",
    "rds-data:*",
    "rds-data:CommitTransaction",
    "rds-data:BatchExecuteStatement",
    "rds-data:BeginTransaction",
    "rds-data:ExecuteSql",
    "rds-data:RollbackTransaction",
    "rds-data:ExecuteStatement",
    "mediaconvert:*",
    "mediaconvert:DeleteJobTemplate",
    "mediaconvert:UpdatePreset",
    "mediaconvert:GetQueue",
    "mediaconvert:CreateJobTemplate",
    "mediaconvert:GetJobTemplate",
    "mediaconvert:GetJob",
    "mediaconvert:UpdateQueue",
    "mediaconvert:DeleteQueue",
    "mediaconvert:TagResource",
    "mediaconvert:UntagResource",
    "mediaconvert:ListTagsForResource",
    "mediaconvert:CreateJob",
    "mediaconvert:DeletePreset",
    "mediaconvert:UpdateJobTemplate",
    "mediaconvert:ListJobs",
    "mediaconvert:GetPreset",
    "mediaconvert:CancelJob",
    "finspace:*",
    "finspace:UntagResource",
    "finspace:ListUsers",
    "finspace:CreateUser",
    "finspace:CreateEnvironment",
    "finspace:GetUser",
    "finspace:UpdateEnvironment",
    "finspace:ListTagsForResource",
    "finspace:ResetUserPassword",
    "finspace:ListEnvironments",
    "finspace:DeleteEnvironment",
    "finspace:GetLoadSampleDataSetGroupIntoEnvironmentStatus",
    "finspace:GetEnvironment",
    "finspace:TagResource",
    "finspace:UpdateUser",
    "finspace:LoadSampleDataSetGroupIntoEnvironment",
    "frauddetector:*",
    "frauddetector:PutEventType",
    "frauddetector:GetRules",
    "frauddetector:ListEventPredictions",
    "frauddetector:DeleteBatchPredictionJob",
    "frauddetector:BatchGetVariable",
    "frauddetector:GetExternalModels",
    "frauddetector:PutExternalModel",
    "frauddetector:GetLabels",
    "frauddetector:GetVariables",
    "frauddetector:GetBatchImportJobs",
    "frauddetector:UpdateModel",
    "frauddetector:DeleteEventType",
    "frauddetector:PutLabel",
    "frauddetector:GetDetectors",
    "frauddetector:GetModels",
    "frauddetector:CancelBatchImportJob",
    "frauddetector:DeleteDetector",
    "frauddetector:DeleteBatchImportJob",
    "frauddetector:CreateBatchPredictionJob",
    "frauddetector:DescribeModelVersions",
    "frauddetector:DeleteLabel",
    "frauddetector:PutEntityType",
    "frauddetector:DeleteModelVersion",
    "frauddetector:GetEntityTypes",
    "frauddetector:UpdateVariable",
    "frauddetector:CreateDetectorVersion",
    "frauddetector:GetOutcomes",
    "frauddetector:CreateModel",
    "frauddetector:UpdateRuleMetadata",
    "frauddetector:GetEventPrediction",
    "frauddetector:CreateModelVersion",
    "frauddetector:GetEventTypes",
    "frauddetector:UntagResource",
    "frauddetector:GetDetectorVersion",
    "frauddetector:UpdateModelVersion",
    "frauddetector:UpdateDetectorVersionStatus",
    "frauddetector:DeleteRule",
    "frauddetector:DescribeDetector",
    "frauddetector:SendEvent",
    "frauddetector:DeleteVariable",
    "frauddetector:GetModelVersion",
    "frauddetector:UpdateModelVersionStatus",
    "frauddetector:UpdateRuleVersion",
    "frauddetector:PutOutcome",
    "frauddetector:GetBatchPredictionJobs",
    "frauddetector:DeleteExternalModel",
    "frauddetector:UpdateDetectorVersion",
    "frauddetector:GetEventPredictionMetadata",
    "frauddetector:PutDetector",
    "frauddetector:CreateRule",
    "frauddetector:DeleteOutcome",
    "frauddetector:TagResource",
    "frauddetector:CreateBatchImportJob",
    "frauddetector:DeleteEventsByEventType",
    "frauddetector:GetEvent",
    "frauddetector:ListTagsForResource",
    "frauddetector:DeleteEntityType",
    "frauddetector:DeleteDetectorVersion",
    "frauddetector:UpdateEventLabel",
    "frauddetector:CancelBatchPredictionJob",
    "frauddetector:DeleteEvent",
    "frauddetector:UpdateDetectorVersionMetadata",
    "frauddetector:GetDeleteEventsByEventTypeStatus",
    "frauddetector:DeleteModel",
    "codeartifact:*",
    "codeartifact:UpdatePackageVersionsStatus",
    "codeartifact:ListPackages",
    "codeartifact:DisassociateExternalConnection",
    "codeartifact:ListRepositoriesInDomain",
    "codeartifact:DeleteDomainPermissionsPolicy",
    "codeartifact:PutDomainPermissionsPolicy",
    "codeartifact:DescribeDomain",
    "codeartifact:ListPackageVersions",
    "codeartifact:CopyPackageVersions",
    "codeartifact:ReadFromRepository",
    "codeartifact:DescribePackage",
    "codeartifact:ListPackageVersionDependencies",
    "codeartifact:AssociateWithDownstreamRepository",
    "codeartifact:GetRepositoryEndpoint",
    "codeartifact:TagResource",
    "codeartifact:PublishPackageVersion",
    "codeartifact:GetAuthorizationToken",
    "codeartifact:DeleteRepositoryPermissionsPolicy",
    "codeartifact:ListTagsForResource",
    "codeartifact:GetPackageVersionAsset",
    "codeartifact:DeletePackageVersions",
    "codeartifact:UpdateRepository",
    "codeartifact:DescribeRepository",
    "codeartifact:ListPackageVersionAssets",
    "codeartifact:PutPackageOriginConfiguration",
    "codeartifact:GetRepositoryPermissionsPolicy",
    "codeartifact:AssociateExternalConnection",
    "codeartifact:DeleteDomain",
    "codeartifact:DeleteRepository",
    "codeartifact:UntagResource",
    "codeartifact:DisposePackageVersions",
    "codeartifact:GetPackageVersionReadme",
    "codeartifact:PutPackageMetadata",
    "codeartifact:PutRepositoryPermissionsPolicy",
    "codeartifact:DescribePackageVersion",
    "codeartifact:GetDomainPermissionsPolicy",
    "appmesh-preview:*",
    "appmesh-preview:UpdateVirtualService",
    "appmesh-preview:ListVirtualRouters",
    "appmesh-preview:CreateVirtualNode",
    "appmesh-preview:DescribeVirtualGateway",
    "appmesh-preview:DeleteGatewayRoute",
    "appmesh-preview:DescribeRoute",
    "appmesh-preview:DeleteVirtualNode",
    "appmesh-preview:DeleteVirtualService",
    "appmesh-preview:DeleteRoute",
    "appmesh-preview:UpdateVirtualRouter",
    "appmesh-preview:ListVirtualGateways",
    "appmesh-preview:CreateRoute",
    "appmesh-preview:CreateGatewayRoute",
    "appmesh-preview:CreateMesh",
    "appmesh-preview:DeleteMesh",
    "appmesh-preview:StreamAggregatedResources",
    "appmesh-preview:UpdateVirtualNode",
    "appmesh-preview:ListGatewayRoutes",
    "appmesh-preview:DescribeVirtualService",
    "appmesh-preview:DeleteVirtualRouter",
    "appmesh-preview:UpdateGatewayRoute",
    "appmesh-preview:UpdateVirtualGateway",
    "appmesh-preview:DescribeMesh",
    "appmesh-preview:DeleteVirtualGateway",
    "appmesh-preview:UpdateMesh",
    "appmesh-preview:ListRoutes",
    "appmesh-preview:CreateVirtualRouter",
    "appmesh-preview:DescribeVirtualRouter",
    "appmesh-preview:DescribeVirtualNode",
    "appmesh-preview:DescribeGatewayRoute",
    "appmesh-preview:ListVirtualServices",
    "appmesh-preview:ListVirtualNodes",
    "appmesh-preview:CreateVirtualGateway",
    "appmesh-preview:CreateVirtualService",
    "appmesh-preview:UpdateRoute",
    "codeguru-profiler:*",
    "codeguru-profiler:GetProfile",
    "codeguru-profiler:PostAgentProfile",
    "codeguru-profiler:RemovePermission",
    "codeguru-profiler:UntagResource",
    "codeguru-profiler:AddNotificationChannels",
    "codeguru-profiler:UpdateProfilingGroup",
    "codeguru-profiler:GetNotificationConfiguration",
    "codeguru-profiler:ListProfileTimes",
    "codeguru-profiler:GetRecommendations",
    "codeguru-profiler:SubmitFeedback",
    "codeguru-profiler:ListFindingsReports",
    "codeguru-profiler:PutPermission",
    "codeguru-profiler:TagResource",
    "codeguru-profiler:BatchGetFrameMetricData",
    "codeguru-profiler:DeleteProfilingGroup",
    "codeguru-profiler:GetPolicy",
    "codeguru-profiler:DescribeProfilingGroup",
    "codeguru-profiler:RemoveNotificationChannel",
    "codeguru-profiler:ConfigureAgent",
    "codeguru-profiler:ListTagsForResource",
    "servicequotas:*",
    "servicequotas:RequestServiceQuotaIncrease",
    "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
    "mediapackage:*",
    "mediapackage:TagResource",
    "mediapackage:DescribeOriginEndpoint",
    "mediapackage:ListTagsForResource",
    "mediapackage:DescribeHarvestJob",
    "mediapackage:ConfigureLogs",
    "mediapackage:DeleteChannel",
    "mediapackage:DeleteOriginEndpoint",
    "mediapackage:UntagResource",
    "mediapackage:UpdateOriginEndpoint",
    "mediapackage:RotateIngestEndpointCredentials",
    "mediapackage:RotateChannelCredentials",
    "mediapackage:UpdateChannel",
    "mediapackage:DescribeChannel",
    "connect-campaigns:*",
    "connect-campaigns:GetCampaignState",
    "connect-campaigns:StopCampaign",
    "connect-campaigns:UpdateCampaignOutboundCallConfig",
    "connect-campaigns:UpdateCampaignName",
    "connect-campaigns:GetCampaignStateBatch",
    "connect-campaigns:ResumeCampaign",
    "connect-campaigns:PutDialRequestBatch",
    "connect-campaigns:TagResource",
    "connect-campaigns:DeleteCampaign",
    "connect-campaigns:PauseCampaign",
    "connect-campaigns:UpdateCampaignDialerConfig",
    "connect-campaigns:CreateCampaign",
    "connect-campaigns:StartCampaign",
    "connect-campaigns:ListTagsForResource",
    "connect-campaigns:UntagResource",
    "connect-campaigns:DescribeCampaign",
    "acm:*",
    "acm:ListTagsForCertificate",
    "acm:ImportCertificate",
    "acm:RemoveTagsFromCertificate",
    "acm:RenewCertificate",
    "acm:GetCertificate",
    "acm:UpdateCertificateOptions",
    "acm:DeleteCertificate",
    "acm:DescribeCertificate",
    "acm:ResendValidationEmail",
    "acm:AddTagsToCertificate",
    "acm:ExportCertificate",
    "evidently:*",
    "evidently:StartLaunch",
    "evidently:GetFeature",
    "evidently:DeleteSegment",
    "evidently:DeleteLaunch",
    "evidently:DeleteProject",
    "evidently:UntagResource",
    "evidently:DeleteFeature",
    "evidently:PutProjectEvents",
    "evidently:StartExperiment",
    "evidently:UpdateProjectDataDelivery",
    "evidently:BatchEvaluateFeature",
    "evidently:UpdateFeature",
    "evidently:UpdateLaunch",
    "evidently:DeleteExperiment",
    "evidently:StopExperiment",
    "evidently:UpdateProject",
    "evidently:EvaluateFeature",
    "evidently:GetExperimentResults",
    "evidently:GetLaunch",
    "evidently:UpdateExperiment",
    "evidently:GetProject",
    "evidently:GetExperiment",
    "evidently:GetSegment",
    "evidently:StopLaunch",
    "evidently:TagResource",
    "route53-recovery-readiness:*",
    "route53-recovery-readiness:GetRecoveryGroup",
    "route53-recovery-readiness:GetArchitectureRecommendations",
    "route53-recovery-readiness:GetCell",
    "route53-recovery-readiness:DeleteReadinessCheck",
    "route53-recovery-readiness:CreateReadinessCheck",
    "route53-recovery-readiness:UpdateReadinessCheck",
    "route53-recovery-readiness:DeleteRecoveryGroup",
    "route53-recovery-readiness:UntagResource",
    "route53-recovery-readiness:GetReadinessCheck",
    "route53-recovery-readiness:UpdateResourceSet",
    "route53-recovery-readiness:DeleteCell",
    "route53-recovery-readiness:CreateCell",
    "route53-recovery-readiness:CreateResourceSet",
    "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
    "route53-recovery-readiness:GetCellReadinessSummary",
    "route53-recovery-readiness:GetReadinessCheckResourceStatus",
    "route53-recovery-readiness:DeleteResourceSet",
    "route53-recovery-readiness:UpdateCell",
    "route53-recovery-readiness:GetReadinessCheckStatus",
    "route53-recovery-readiness:UpdateRecoveryGroup",
    "route53-recovery-readiness:CreateRecoveryGroup",
    "route53-recovery-readiness:TagResource",
    "route53-recovery-readiness:GetResourceSet",
    "fms:*",
    "fms:ListTagsForResource",
    "fms:UntagResource",
    "fms:GetPolicy",
    "fms:GetProtectionStatus",
    "fms:DeleteProtocolsList",
    "fms:GetProtocolsList",
    "fms:GetAppsList",
    "fms:DeleteAppsList",
    "fms:PutPolicy",
    "fms:PutProtocolsList",
    "fms:DeletePolicy",
    "fms:GetViolationDetails",
    "fms:ListComplianceStatus",
    "fms:PutAppsList",
    "fms:GetComplianceDetail",
    "fms:TagResource",
    "serverlessrepo:*",
    "serverlessrepo:GetCloudFormationTemplate",
    "serverlessrepo:UnshareApplication",
    "serverlessrepo:GetApplicationPolicy",
    "serverlessrepo:DeleteApplication",
    "serverlessrepo:CreateApplicationVersion",
    "serverlessrepo:ListApplicationVersions",
    "serverlessrepo:CreateCloudFormationTemplate",
    "serverlessrepo:GetApplication",
    "serverlessrepo:CreateCloudFormationChangeSet",
    "serverlessrepo:ListApplicationDependencies",
    "serverlessrepo:PutApplicationPolicy",
    "serverlessrepo:UpdateApplication",
    "wisdom:*",
    "wisdom:StartContentUpload",
    "wisdom:GetContentSummary",
    "wisdom:UpdateContent",
    "wisdom:DeleteAssistantAssociation",
    "wisdom:GetSession",
    "wisdom:DeleteContent",
    "wisdom:GetRecommendations",
    "wisdom:GetContent",
    "wisdom:QueryAssistant",
    "wisdom:ListAssistantAssociations",
    "wisdom:GetAssistantAssociation",
    "wisdom:CreateContent",
    "wisdom:GetAssistant",
    "wisdom:CreateAssistantAssociation",
    "wisdom:GetKnowledgeBase",
    "wisdom:UpdateKnowledgeBaseTemplateUri",
    "wisdom:RemoveKnowledgeBaseTemplateUri",
    "wisdom:CreateSession",
    "wisdom:SearchContent",
    "wisdom:ListContents",
    "wisdom:DeleteAssistant",
    "wisdom:DeleteKnowledgeBase",
    "wisdom:SearchSessions",
    "wisdom:NotifyRecommendationsReceived",
    "iotsitewise:*",
    "iotsitewise:UpdateAssetModel",
    "iotsitewise:ListProjects",
    "iotsitewise:CreateProject",
    "iotsitewise:ListTimeSeries",
    "iotsitewise:CreateAsset",
    "iotsitewise:DeletePortal",
    "iotsitewise:DeleteProject",
    "iotsitewise:DeleteAssetModel",
    "iotsitewise:ListAssetRelationships",
    "iotsitewise:DescribePortal",
    "iotsitewise:ListAccessPolicies",
    "iotsitewise:DeleteTimeSeries",
    "iotsitewise:DisassociateAssets",
    "iotsitewise:AssociateTimeSeriesToAssetProperty",
    "iotsitewise:ListTagsForResource",
    "iotsitewise:GetInterpolatedAssetPropertyValues",
    "iotsitewise:ListDashboards",
    "iotsitewise:TagResource",
    "iotsitewise:DeleteGateway",
    "iotsitewise:UpdateAssetModelPropertyRouting",
    "iotsitewise:DisassociateTimeSeriesFromAssetProperty",
    "iotsitewise:UpdateGateway",
    "iotsitewise:UpdateAssetProperty",
    "iotsitewise:UpdateAsset",
    "iotsitewise:AssociateAssets",
    "iotsitewise:CreateDashboard",
    "iotsitewise:DescribeAssetModel",
    "iotsitewise:DescribeGateway",
    "iotsitewise:DeleteAccessPolicy",
    "iotsitewise:BatchGetAssetPropertyAggregates",
    "iotsitewise:DescribeGatewayCapabilityConfiguration",
    "iotsitewise:BatchGetAssetPropertyValueHistory",
    "iotsitewise:GetAssetPropertyValue",
    "iotsitewise:DescribeAssetProperty",
    "iotsitewise:GetAssetPropertyAggregates",
    "iotsitewise:ListAssociatedAssets",
    "iotsitewise:DescribeTimeSeries",
    "iotsitewise:DescribeAccessPolicy",
    "iotsitewise:ListAssets",
    "iotsitewise:UntagResource",
    "iotsitewise:UpdateAccessPolicy",
    "iotsitewise:UpdateDashboard",
    "iotsitewise:BatchPutAssetPropertyValue",
    "iotsitewise:BatchGetAssetPropertyValue",
    "iotsitewise:DeleteAsset",
    "iotsitewise:GetAssetPropertyValueHistory",
    "iotsitewise:BatchAssociateProjectAssets",
    "iotsitewise:CreateAccessPolicy",
    "iotsitewise:UpdateProject",
    "iotsitewise:BatchDisassociateProjectAssets",
    "iotsitewise:DescribeAsset",
    "iotsitewise:DeleteDashboard",
    "iotsitewise:UpdatePortal",
    "iotsitewise:UpdateGatewayCapabilityConfiguration",
    "iotsitewise:ListProjectAssets",
    "iotsitewise:DescribeProject",
    "iotsitewise:DescribeDashboard",
    "codebuild:*",
    "codebuild:UpdateWebhook",
    "codebuild:DescribeTestCases",
    "codebuild:UpdateProjectVisibility",
    "codebuild:DeleteResourcePolicy",
    "codebuild:GetReportGroupTrend",
    "codebuild:DeleteWebhook",
    "codebuild:DeleteProject",
    "codebuild:UpdateProject",
    "codebuild:UpdateReport",
    "codebuild:ListReportsForReportGroup",
    "codebuild:StopBuild",
    "codebuild:ListBuildsForProject",
    "codebuild:CreateWebhook",
    "codebuild:BatchGetBuilds",
    "codebuild:ListBuildBatchesForProject",
    "codebuild:DeleteReportGroup",
    "codebuild:BatchGetReports",
    "codebuild:DescribeCodeCoverages",
    "codebuild:BatchGetProjects",
    "codebuild:BatchDeleteBuilds",
    "codebuild:RetryBuild",
    "codebuild:BatchPutTestCases",
    "codebuild:StartBuild",
    "codebuild:UpdateReportGroup",
    "codebuild:InvalidateProjectCache",
    "codebuild:StopBuildBatch",
    "codebuild:BatchGetReportGroups",
    "codebuild:BatchPutCodeCoverages",
    "codebuild:PutResourcePolicy",
    "codebuild:CreateProject",
    "codebuild:BatchGetBuildBatches",
    "codebuild:RetryBuildBatch",
    "codebuild:StartBuildBatch",
    "codebuild:CreateReport",
    "codebuild:DeleteReport",
    "codebuild:GetResourcePolicy",
    "codebuild:CreateReportGroup",
    "codebuild:DeleteBuildBatch",
    "dlm:*",
    "dlm:ListTagsForResource",
    "dlm:DeleteLifecyclePolicy",
    "dlm:UpdateLifecyclePolicy",
    "dlm:UntagResource",
    "dlm:TagResource",
    "dlm:GetLifecyclePolicy",
    "guardduty:*",
    "guardduty:UpdateIPSet",
    "guardduty:ListTagsForResource",
    "guardduty:DeleteFilter",
    "guardduty:GetDetector",
    "guardduty:UpdateDetector",
    "guardduty:DeletePublishingDestination",
    "guardduty:GetFilter",
    "guardduty:TagResource",
    "guardduty:UpdateThreatIntelSet",
    "guardduty:DeleteDetector",
    "guardduty:UpdatePublishingDestination",
    "guardduty:DescribePublishingDestination",
    "guardduty:UntagResource",
    "guardduty:GetThreatIntelSet",
    "guardduty:CreateFilter",
    "guardduty:DeleteIPSet",
    "guardduty:DeleteThreatIntelSet",
    "guardduty:GetIPSet",
    "guardduty:UpdateFilter",
    "proton:*",
    "proton:GetService",
    "proton:GetEnvironmentTemplateVersion",
    "proton:DeleteServiceTemplateMajorVersion",
    "proton:ListEnvironmentOutputs",
    "proton:GetServiceInstance",
    "proton:ListEnvironmentProvisionedResources",
    "proton:UpdateServiceTemplateVersion",
    "proton:UpdateService",
    "proton:UpdateServiceTemplateMinorVersion",
    "proton:GetServiceTemplateMajorVersion",
    "proton:DeleteService",
    "proton:CreateEnvironmentTemplateVersion",
    "proton:DeleteEnvironmentTemplate",
    "proton:CreateEnvironmentTemplateMajorVersion",
    "proton:NotifyResourceDeploymentStatusChange",
    "proton:GetServiceTemplateVersion",
    "proton:UpdateServicePipeline",
    "proton:ListEnvironmentAccountConnections",
    "proton:RejectEnvironmentAccountConnection",
    "proton:GetEnvironmentTemplate",
    "proton:TagResource",
    "proton:DeleteServiceTemplateVersion",
    "proton:DeleteServiceTemplateMinorVersion",
    "proton:CancelServicePipelineDeployment",
    "proton:GetComponent",
    "proton:DeleteRepository",
    "proton:ListEnvironmentTemplateMinorVersions",
    "proton:ListServiceInstanceProvisionedResources",
    "proton:UpdateServiceTemplate",
    "proton:DeleteEnvironmentAccountConnection",
    "proton:CancelComponentDeployment",
    "proton:UpdateEnvironmentTemplateMajorVersion",
    "proton:GetServiceTemplateMinorVersion",
    "proton:GetRepository",
    "proton:ListEnvironmentTemplateVersions",
    "proton:DeleteEnvironmentTemplateMajorVersion",
    "proton:DeleteEnvironmentTemplateMinorVersion",
    "proton:ListServicePipelineProvisionedResources",
    "proton:ListServicePipelineOutputs",
    "proton:GetEnvironment",
    "proton:DeleteEnvironment",
    "proton:ListComponentProvisionedResources",
    "proton:CreateServiceTemplate",
    "proton:UpdateEnvironment",
    "proton:UpdateServiceInstance",
    "proton:ListEnvironmentTemplateMajorVersions",
    "proton:ListServiceTemplateVersions",
    "proton:DeleteEnvironmentTemplateVersion",
    "proton:CreateServiceTemplateMajorVersion",
    "proton:GetEnvironmentTemplateMajorVersion",
    "proton:CreateEnvironment",
    "proton:ListTagsForResource",
    "proton:ListServiceTemplateMinorVersions",
    "proton:CreateRepository",
    "proton:UpdateEnvironmentTemplateMinorVersion",
    "proton:UpdateEnvironmentTemplateVersion",
    "proton:CreateEnvironmentTemplate",
    "proton:GetServiceTemplate",
    "proton:AcceptEnvironmentAccountConnection",
    "proton:ListComponents",
    "proton:ListServiceTemplateMajorVersions",
    "proton:UpdateServiceTemplateMajorVersion",
    "proton:GetEnvironmentAccountConnection",
    "proton:CreateServiceTemplateMinorVersion",
    "proton:CancelEnvironmentDeployment",
    "proton:CreateEnvironmentTemplateMinorVersion",
    "proton:UpdateComponent",
    "proton:UntagResource",
    "proton:ListComponentOutputs",
    "proton:CreateComponent",
    "proton:ListServiceInstanceOutputs",
    "proton:DeleteComponent",
    "proton:CancelServiceInstanceDeployment",
    "proton:CreateServiceTemplateVersion",
    "proton:CreateService",
    "proton:GetEnvironmentTemplateMinorVersion",
    "proton:DeleteServiceTemplate",
    "proton:UpdateEnvironmentAccountConnection",
    "proton:UpdateEnvironmentTemplate",
    "route53:*",
    "route53:GetHealthCheckStatus",
    "route53:ListResourceRecordSets",
    "route53:ChangeResourceRecordSets",
    "route53:ListVPCAssociationAuthorizations",
    "route53:AssociateVPCWithHostedZone",
    "route53:ListCidrLocations",
    "route53:DisableHostedZoneDNSSEC",
    "route53:GetDNSSEC",
    "route53:ListCidrBlocks",
    "route53:UpdateHealthCheck",
    "route53:DeactivateKeySigningKey",
    "route53:ListTagsForResource",
    "route53:GetChange",
    "route53:ChangeTagsForResource",
    "route53:DeleteHostedZone",
    "route53:DeleteTrafficPolicyInstance",
    "route53:GetHostedZone",
    "route53:GetHealthCheck",
    "route53:GetHealthCheckLastFailureReason",
    "route53:DeleteTrafficPolicy",
    "route53:ListTrafficPolicyInstancesByPolicy",
    "route53:ListQueryLoggingConfigs",
    "route53:CreateTrafficPolicyVersion",
    "route53:GetHostedZoneLimit",
    "route53:DeleteKeySigningKey",
    "route53:CreateKeySigningKey",
    "route53:CreateQueryLoggingConfig",
    "route53:GetTrafficPolicy",
    "route53:CreateVPCAssociationAuthorization",
    "route53:DeleteCidrCollection",
    "route53:DeleteVPCAssociationAuthorization",
    "route53:GetReusableDelegationSetLimit",
    "route53:DisassociateVPCFromHostedZone",
    "route53:CreateTrafficPolicyInstance",
    "route53:UpdateTrafficPolicyComment",
    "route53:ListTagsForResources",
    "route53:ListTrafficPolicyInstancesByHostedZone",
    "route53:GetTrafficPolicyInstance",
    "route53:ChangeCidrCollection",
    "route53:UpdateHostedZoneComment",
    "route53:DeleteReusableDelegationSet",
    "route53:GetReusableDelegationSet",
    "route53:EnableHostedZoneDNSSEC",
    "route53:UpdateTrafficPolicyInstance",
    "route53:ListTrafficPolicyVersions",
    "route53:GetQueryLoggingConfig",
    "route53:ActivateKeySigningKey",
    "route53:DeleteQueryLoggingConfig",
    "route53:DeleteHealthCheck",
    "elasticmapreduce:*",
    "elasticmapreduce:UpdateStudioSessionMapping",
    "elasticmapreduce:DeleteWorkspaceAccess",
    "elasticmapreduce:PutAutoTerminationPolicy",
    "elasticmapreduce:OpenEditorInConsole",
    "elasticmapreduce:CreateStudioPresignedUrl",
    "elasticmapreduce:ListInstanceFleets",
    "elasticmapreduce:StopNotebookExecution",
    "elasticmapreduce:RemoveAutoScalingPolicy",
    "elasticmapreduce:GetStudioSessionMapping",
    "elasticmapreduce:ListWorkspaceAccessIdentities",
    "elasticmapreduce:AddTags",
    "elasticmapreduce:PutWorkspaceAccess",
    "elasticmapreduce:DeleteStudio",
    "elasticmapreduce:ListSteps",
    "elasticmapreduce:ModifyInstanceFleet",
    "elasticmapreduce:CreateStudioSessionMapping",
    "elasticmapreduce:GetManagedScalingPolicy",
    "elasticmapreduce:AddInstanceFleet",
    "elasticmapreduce:ListInstances",
    "elasticmapreduce:RemoveTags",
    "elasticmapreduce:ListBootstrapActions",
    "elasticmapreduce:DeleteEditor",
    "elasticmapreduce:DescribeStudio",
    "elasticmapreduce:DescribeNotebookExecution",
    "elasticmapreduce:PutManagedScalingPolicy",
    "elasticmapreduce:TerminateJobFlows",
    "elasticmapreduce:UpdateStudio",
    "elasticmapreduce:DescribeCluster",
    "elasticmapreduce:PutAutoScalingPolicy",
    "elasticmapreduce:GetAutoTerminationPolicy",
    "elasticmapreduce:DescribePersistentAppUI",
    "elasticmapreduce:DescribeStep",
    "elasticmapreduce:AddJobFlowSteps",
    "elasticmapreduce:AddInstanceGroups",
    "elasticmapreduce:StopEditor",
    "elasticmapreduce:ListInstanceGroups",
    "elasticmapreduce:RemoveAutoTerminationPolicy",
    "elasticmapreduce:CreatePersistentAppUI",
    "elasticmapreduce:GetPersistentAppUIPresignedURL",
    "elasticmapreduce:StartNotebookExecution",
    "elasticmapreduce:CancelSteps",
    "elasticmapreduce:UpdateEditor",
    "elasticmapreduce:ModifyCluster",
    "elasticmapreduce:SetTerminationProtection",
    "elasticmapreduce:DescribeEditor",
    "elasticmapreduce:DescribeJobFlows",
    "elasticmapreduce:GetOnClusterAppUIPresignedURL",
    "elasticmapreduce:DetachEditor",
    "elasticmapreduce:DeleteStudioSessionMapping",
    "elasticmapreduce:RemoveManagedScalingPolicy",
    "elasticmapreduce:ModifyInstanceGroups",
    "elasticmapreduce:CreateEditor",
    "elasticmapreduce:StartEditor",
    "elasticmapreduce:AttachEditor",
    "comprehend:*",
    "comprehend:StartTargetedSentimentDetectionJob",
    "comprehend:StartEntitiesDetectionJob",
    "comprehend:DescribeResourcePolicy",
    "comprehend:StopSentimentDetectionJob",
    "comprehend:StopEventsDetectionJob",
    "comprehend:StopPiiEntitiesDetectionJob",
    "comprehend:StartPiiEntitiesDetectionJob",
    "comprehend:CreateEndpoint",
    "comprehend:UntagResource",
    "comprehend:StopEntitiesDetectionJob",
    "comprehend:DescribeTopicsDetectionJob",
    "comprehend:DescribeTargetedSentimentDetectionJob",
    "comprehend:StartTopicsDetectionJob",
    "comprehend:UpdateEndpoint",
    "comprehend:StopKeyPhrasesDetectionJob",
    "comprehend:DescribeEntityRecognizer",
    "comprehend:DeleteDocumentClassifier",
    "comprehend:DescribeEndpoint",
    "comprehend:PutResourcePolicy",
    "comprehend:StopTrainingEntityRecognizer",
    "comprehend:StopTargetedSentimentDetectionJob",
    "comprehend:TagResource",
    "comprehend:DeleteEndpoint",
    "comprehend:CreateEntityRecognizer",
    "comprehend:ClassifyDocument",
    "comprehend:StartSentimentDetectionJob",
    "comprehend:StartDominantLanguageDetectionJob",
    "comprehend:DeleteEntityRecognizer",
    "comprehend:DeleteResourcePolicy",
    "comprehend:DescribeEntitiesDetectionJob",
    "comprehend:DescribePiiEntitiesDetectionJob",
    "comprehend:DescribeKeyPhrasesDetectionJob",
    "comprehend:DescribeDominantLanguageDetectionJob",
    "comprehend:DescribeEventsDetectionJob",
    "comprehend:CreateDocumentClassifier",
    "comprehend:DescribeDocumentClassifier",
    "comprehend:StopDominantLanguageDetectionJob",
    "comprehend:ImportModel",
    "comprehend:StartEventsDetectionJob",
    "comprehend:DetectEntities",
    "comprehend:StartDocumentClassificationJob",
    "comprehend:StartKeyPhrasesDetectionJob",
    "comprehend:ListTagsForResource",
    "comprehend:DescribeDocumentClassificationJob",
    "comprehend:DescribeSentimentDetectionJob",
    "comprehend:StopTrainingDocumentClassifier",
    "cloudtrail:*",
    "cloudtrail:RemoveTags",
    "cloudtrail:DeleteEventDataStore",
    "cloudtrail:PutEventSelectors",
    "cloudtrail:GetInsightSelectors",
    "cloudtrail:PutInsightSelectors",
    "cloudtrail:UpdateServiceLinkedChannel",
    "cloudtrail:UpdateEventDataStore",
    "cloudtrail:CreateEventDataStore",
    "cloudtrail:CreateTrail",
    "cloudtrail:DeleteTrail",
    "cloudtrail:DeleteServiceLinkedChannel",
    "cloudtrail:GetEventSelectors",
    "cloudtrail:GetTrailStatus",
    "cloudtrail:UpdateTrail",
    "cloudtrail:AddTags",
    "cloudtrail:ListTags",
    "cloudtrail:StopLogging",
    "cloudtrail:CreateServiceLinkedChannel",
    "cloudtrail:GetServiceLinkedChannel",
    "cloudtrail:StartLogging",
    "cloudtrail:RestoreEventDataStore",
    "network-firewall:*",
    "network-firewall:CreateFirewall",
    "network-firewall:UpdateRuleGroup",
    "network-firewall:DescribeResourcePolicy",
    "network-firewall:DeleteResourcePolicy",
    "network-firewall:DeleteFirewall",
    "network-firewall:DisassociateSubnets",
    "network-firewall:UpdateFirewallPolicy",
    "network-firewall:DescribeRuleGroup",
    "network-firewall:AssociateFirewallPolicy",
    "network-firewall:UntagResource",
    "network-firewall:DescribeRuleGroupMetadata",
    "network-firewall:UpdateFirewallPolicyChangeProtection",
    "network-firewall:ListFirewallPolicies",
    "network-firewall:TagResource",
    "network-firewall:CreateFirewallPolicy",
    "network-firewall:UpdateLoggingConfiguration",
    "network-firewall:ListFirewalls",
    "network-firewall:DeleteRuleGroup",
    "network-firewall:ListTagsForResource",
    "network-firewall:UpdateSubnetChangeProtection",
    "network-firewall:PutResourcePolicy",
    "network-firewall:UpdateFirewallDeleteProtection",
    "network-firewall:DeleteFirewallPolicy",
    "network-firewall:CreateRuleGroup",
    "network-firewall:DescribeFirewallPolicy",
    "network-firewall:AssociateSubnets",
    "network-firewall:UpdateFirewallEncryptionConfiguration",
    "network-firewall:DescribeFirewall",
    "network-firewall:UpdateFirewallDescription",
    "network-firewall:DescribeLoggingConfiguration",
    "s3:*",
    "s3:GetObjectAcl",
    "s3:ObjectOwnerOverrideToBucketOwner",
    "s3:DeleteMultiRegionAccessPoint",
    "s3:GetBucketPolicyStatus",
    "s3:CreateBucket",
    "s3:PutMultiRegionAccessPointPolicy",
    "s3:GetBucketVersioning",
    "s3:GetMultiRegionAccessPoint",
    "s3:RestoreObject",
    "s3:GetObject",
    "s3:GetStorageLensDashboard",
    "s3:GetAccessPointPolicyForObjectLambda",
    "s3:PutAccessPointPolicyForObjectLambda",
    "s3:PutBucketLogging",
    "s3:GetJobTagging",
    "s3:PutBucketAcl",
    "s3:GetObjectVersionAcl",
    "s3:PutIntelligentTieringConfiguration",
    "s3:GetBucketCORS",
    "s3:PutStorageLensConfigurationTagging",
    "s3:ReplicateDelete",
    "s3:DeleteStorageLensConfigurationTagging",
    "s3:GetStorageLensConfiguration",
    "s3:CreateAccessPoint",
    "s3:GetAccessPointPolicy",
    "s3:ListBucketVersions",
    "s3:GetBucketPublicAccessBlock",
    "s3:DescribeMultiRegionAccessPointOperation",
    "s3:DeleteObjectTagging",
    "s3:DeleteObjectVersionTagging",
    "s3:AbortMultipartUpload",
    "s3:PutBucketTagging",
    "s3:GetInventoryConfiguration",
    "s3:CreateMultiRegionAccessPoint",
    "s3:DeleteStorageLensConfiguration",
    "s3:DescribeJob",
    "s3:PutObjectRetention",
    "s3:GetObjectVersionTorrent",
    "s3:GetBucketOwnershipControls",
    "s3:GetMultiRegionAccessPointPolicy",
    "s3:UpdateJobPriority",
    "s3:GetEncryptionConfiguration",
    "s3:PutEncryptionConfiguration",
    "s3:GetAccessPointPolicyStatus",
    "s3:GetAccessPointConfigurationForObjectLambda",
    "s3:DeleteAccessPointForObjectLambda",
    "s3:ListMultipartUploadParts",
    "s3:PutBucketOwnershipControls",
    "s3:GetAccelerateConfiguration",
    "s3:DeleteBucketPolicy",
    "s3:PutAccessPointConfigurationForObjectLambda",
    "s3:GetAnalyticsConfiguration",
    "s3:ListBucket",
    "s3:GetBucketNotification",
    "s3:GetIntelligentTieringConfiguration",
    "s3:DeleteBucket",
    "s3:PutBucketNotification",
    "s3:PutAccelerateConfiguration",
    "s3:PutBucketVersioning",
    "s3:CreateAccessPointForObjectLambda",
    "s3:GetBucketTagging",
    "s3:DeleteBucketWebsite",
    "s3:GetObjectVersion",
    "s3:PutBucketWebsite",
    "s3:GetStorageLensConfigurationTagging",
    "s3:GetObjectVersionAttributes",
    "s3:PutBucketPublicAccessBlock",
    "s3:GetBucketWebsite",
    "s3:PutObjectVersionAcl",
    "s3:GetObjectRetention",
    "s3:GetObjectTagging",
    "s3:DeleteAccessPointPolicyForObjectLambda",
    "s3:PutObjectTagging",
    "s3:BypassGovernanceRetention",
    "s3:GetReplicationConfiguration",
    "s3:GetObjectAttributes",
    "s3:GetMetricsConfiguration",
    "s3:PutObject",
    "s3:DeleteObject",
    "s3:PutMetricsConfiguration",
    "s3:DeleteAccessPoint",
    "s3:PutObjectVersionTagging",
    "s3:GetBucketRequestPayment",
    "s3:ReplicateTags",
    "s3:GetLifecycleConfiguration",
    "s3:InitiateReplication",
    "s3:UpdateJobStatus",
    "s3:PutBucketPolicy",
    "s3:PutLifecycleConfiguration",
    "s3:GetObjectVersionTagging",
    "s3:PutInventoryConfiguration",
    "s3:DeleteAccessPointPolicy",
    "s3:PutBucketCORS",
    "s3:PutAccessPointPolicy",
    "s3:PutObjectLegalHold",
    "s3:GetObjectTorrent",
    "s3:DeleteJobTagging",
    "s3:PutJobTagging",
    "s3:PutReplicationConfiguration",
    "s3:DeleteObjectVersion",
    "s3:PutBucketRequestPayment",
    "s3:PutBucketObjectLockConfiguration",
    "s3:PutAnalyticsConfiguration",
    "s3:PutObjectAcl",
    "s3:GetBucketObjectLockConfiguration",
    "s3:GetAccessPointPolicyStatusForObjectLambda",
    "s3:GetBucketLogging",
    "s3:GetAccessPointForObjectLambda",
    "s3:GetBucketLocation",
    "s3:ReplicateObject",
    "s3:GetBucketAcl",
    "s3:ListBucketMultipartUploads",
    "s3:GetMultiRegionAccessPointPolicyStatus",
    "s3:GetObjectVersionForReplication",
    "s3:GetBucketPolicy",
    "s3:GetObjectLegalHold",
    "waf:*",
    "waf:GetSizeConstraintSet",
    "waf:CreateRuleGroup",
    "waf:DeleteRegexMatchSet",
    "waf:CreateRegexMatchSet",
    "waf:CreateXssMatchSet",
    "waf:UpdateIPSet",
    "waf:DeleteRule",
    "waf:DeleteRateBasedRule",
    "waf:GetByteMatchSet",
    "waf:CreateRateBasedRule",
    "waf:UpdateRegexPatternSet",
    "waf:PutLoggingConfiguration",
    "waf:GetXssMatchSet",
    "waf:UpdateRule",
    "waf:CreateWebACL",
    "waf:GetSampledRequests",
    "waf:GetIPSet",
    "waf:GetPermissionPolicy",
    "waf:UpdateRuleGroup",
    "waf:UpdateSqlInjectionMatchSet",
    "waf:GetGeoMatchSet",
    "waf:UpdateRateBasedRule",
    "waf:ListTagsForResource",
    "waf:GetRule",
    "waf:DeleteByteMatchSet",
    "waf:DeleteWebACL",
    "waf:CreateByteMatchSet",
    "waf:UpdateXssMatchSet",
    "waf:GetRateBasedRuleManagedKeys",
    "waf:GetRegexPatternSet",
    "waf:UntagResource",
    "waf:CreateIPSet",
    "waf:DeleteRegexPatternSet",
    "waf:DeleteRuleGroup",
    "waf:GetSqlInjectionMatchSet",
    "waf:UpdateByteMatchSet",
    "waf:DeleteSizeConstraintSet",
    "waf:DeleteXssMatchSet",
    "waf:DeleteLoggingConfiguration",
    "waf:GetRateBasedRule",
    "waf:CreateSqlInjectionMatchSet",
    "waf:UpdateWebACL",
    "waf:CreateGeoMatchSet",
    "waf:CreateWebACLMigrationStack",
    "waf:CreateSizeConstraintSet",
    "waf:DeletePermissionPolicy",
    "waf:PutPermissionPolicy",
    "waf:UpdateSizeConstraintSet",
    "waf:GetRuleGroup",
    "waf:GetRegexMatchSet",
    "waf:UpdateGeoMatchSet",
    "waf:GetWebACL",
    "waf:CreateRule",
    "waf:DeleteGeoMatchSet",
    "waf:GetLoggingConfiguration",
    "waf:DeleteIPSet",
    "waf:TagResource",
    "waf:UpdateRegexMatchSet",
    "waf:DeleteSqlInjectionMatchSet",
    "waf:CreateRegexPatternSet",
    "servicediscovery:*",
    "servicediscovery:GetNamespace",
    "servicediscovery:RegisterInstance",
    "servicediscovery:DeregisterInstance",
    "servicediscovery:UpdatePrivateDnsNamespace",
    "servicediscovery:GetService",
    "servicediscovery:UpdateHttpNamespace",
    "servicediscovery:DeleteService",
    "servicediscovery:DeleteNamespace",
    "servicediscovery:UpdatePublicDnsNamespace",
    "servicediscovery:UpdateService",
    "servicediscovery:CreateService",
    "codestar:*",
    "codestar:GetExtendedAccess",
    "codestar:PutExtendedAccess",
    "codestar:UpdateProject",
    "codestar:ListTagsForProject",
    "codestar:DescribeProject",
    "codestar:ListTeamMembers",
    "codestar:ListResources",
    "codestar:UpdateUserProfile",
    "codestar:UntagProject",
    "codestar:DeleteProject",
    "codestar:DeleteUserProfile",
    "codestar:CreateUserProfile",
    "codestar:TagProject",
    "codestar:DeleteExtendedAccess",
    "codestar:UpdateTeamMember",
    "codestar:AssociateTeamMember",
    "codestar:DisassociateTeamMember",
    "ivs:*",
    "ivs:BatchGetChannel",
    "ivs:UntagResource",
    "ivs:UpdateChannel",
    "ivs:ImportPlaybackKeyPair",
    "ivs:BatchGetStreamKey",
    "ivs:CreateStreamKey",
    "ivs:ListRecordingConfigurations",
    "ivs:PutMetadata",
    "ivs:GetChannel",
    "ivs:DeleteChannel",
    "ivs:DeleteRecordingConfiguration",
    "ivs:GetStreamKey",
    "ivs:CreateChannel",
    "ivs:GetRecordingConfiguration",
    "ivs:DeletePlaybackKeyPair",
    "ivs:TagResource",
    "ivs:ListPlaybackKeyPairs",
    "ivs:ListTagsForResource",
    "ivs:GetPlaybackKeyPair",
    "ivs:ListStreams",
    "ivs:CreateRecordingConfiguration",
    "ivs:GetStreamSession",
    "ivs:ListChannels",
    "ivs:ListStreamSessions",
    "ivs:GetStream",
    "ivs:DeleteStreamKey",
    "ivs:StopStream",
    "ivs:ListStreamKeys",
    "profile:*",
    "profile:PutProfileObject",
    "profile:SearchProfiles",
    "profile:CreateProfile",
    "profile:UpdateDomain",
    "profile:ListProfileObjects",
    "profile:DeleteProfileKey",
    "profile:ListWorkflows",
    "profile:DeleteIntegration",
    "profile:CreateIntegrationWorkflow",
    "profile:AddProfileKey",
    "profile:PutProfileObjectType",
    "profile:DeleteProfileObjectType",
    "profile:GetDomain",
    "profile:GetMatches",
    "profile:ListIntegrations",
    "profile:DeleteWorkflow",
    "profile:ListIdentityResolutionJobs",
    "profile:PutIntegration",
    "profile:GetIdentityResolutionJob",
    "profile:DeleteDomain",
    "profile:UpdateProfile",
    "profile:GetProfileObjectType",
    "profile:CreateDomain",
    "profile:DeleteProfileObject",
    "profile:DeleteProfile",
    "profile:GetWorkflowSteps",
    "profile:GetIntegration",
    "profile:MergeProfiles",
    "profile:GetAutoMergingPreview",
    "profile:ListProfileObjectTypes",
    "profile:GetWorkflow",
    "workmailmessageflow:*",
    "workmailmessageflow:GetRawMessageContent",
    "workmailmessageflow:PutRawMessageContent",
    "emr-serverless:*",
    "emr-serverless:GetApplication",
    "emr-serverless:GetJobRun",
    "emr-serverless:CancelJobRun",
    "emr-serverless:StartApplication",
    "emr-serverless:GetDashboardForJobRun",
    "emr-serverless:ListTagsForResource",
    "emr-serverless:ListJobRuns",
    "emr-serverless:UpdateApplication",
    "emr-serverless:StopApplication",
    "emr-serverless:DeleteApplication",
    "emr-serverless:UntagResource",
    "emr-serverless:StartJobRun",
    "emr-serverless:TagResource",
    "ec2-instance-connect:*",
    "ec2-instance-connect:SendSerialConsoleSSHPublicKey",
    "ec2-instance-connect:SendSSHPublicKey",
    "qldb:*",
    "qldb:DeleteLedger",
    "qldb:GetDigest",
    "qldb:UpdateLedgerPermissionsMode",
    "qldb:DescribeJournalS3Export",
    "qldb:SendCommand",
    "qldb:ExportJournalToS3",
    "qldb:ExecuteStatement",
    "qldb:CancelJournalKinesisStream",
    "qldb:UntagResource",
    "qldb:PartiQLInsert",
    "qldb:InsertSampleData",
    "qldb:DescribeJournalKinesisStream",
    "qldb:CreateLedger",
    "qldb:GetBlock",
    "qldb:PartiQLSelect",
    "qldb:UpdateLedger",
    "qldb:DescribeLedger",
    "qldb:TagResource",
    "qldb:ListJournalKinesisStreamsForLedger",
    "qldb:PartiQLUndropTable",
    "qldb:GetRevision",
    "qldb:StreamJournalToKinesis",
    "qldb:PartiQLCreateIndex",
    "qldb:ListJournalS3ExportsForLedger",
    "qldb:PartiQLHistoryFunction",
    "qldb:PartiQLDropTable",
    "qldb:PartiQLUpdate",
    "qldb:ShowCatalog",
    "qldb:PartiQLDelete",
    "qldb:PartiQLCreateTable",
    "qldb:ListTagsForResource",
    "qldb:PartiQLDropIndex",
    "refactor-spaces:*",
    "refactor-spaces:DeleteEnvironment",
    "refactor-spaces:ListApplications",
    "refactor-spaces:UntagResource",
    "refactor-spaces:ListEnvironmentVpcs",
    "refactor-spaces:DeleteRoute",
    "refactor-spaces:DeleteService",
    "refactor-spaces:DeleteApplication",
    "refactor-spaces:GetApplication",
    "refactor-spaces:GetEnvironment",
    "refactor-spaces:TagResource",
    "refactor-spaces:GetRoute",
    "refactor-spaces:UpdateRoute",
    "refactor-spaces:ListRoutes",
    "refactor-spaces:GetService",
    "refactor-spaces:ListServices",
    "m2:*",
    "m2:CancelBatchJobExecution",
    "m2:ListDeployments",
    "m2:ListBatchJobDefinitions",
    "m2:UpdateEnvironment",
    "m2:UpdateApplication",
    "m2:GetDataSetImportTask",
    "m2:CreateDataSetImportTask",
    "m2:StopApplication",
    "m2:DeleteApplication",
    "m2:GetBatchJobExecution",
    "m2:ListBatchJobExecutions",
    "m2:ListApplicationVersions",
    "m2:StartBatchJob",
    "m2:DeleteApplicationFromEnvironment",
    "m2:ListDataSets",
    "m2:ListApplications",
    "m2:CreateDeployment",
    "m2:ListDataSetImportHistory",
    "m2:UntagResource",
    "m2:TagResource",
    "m2:StartApplication",
    "m2:DeleteEnvironment",
    "m2:GetDeployment",
    "m2:GetApplicationVersion",
    "m2:GetEnvironment",
    "m2:GetApplication",
    "m2:GetDataSetDetails",
    "sms-voice:*",
    "sms-voice:DescribeOptedOutNumbers",
    "sms-voice:CreatePool",
    "sms-voice:RequestPhoneNumber",
    "sms-voice:DescribeOptOutLists",
    "sms-voice:DeleteKeyword",
    "sms-voice:DeleteOptOutList",
    "sms-voice:DescribeConfigurationSets",
    "sms-voice:DeleteEventDestination",
    "sms-voice:DeleteOptedOutNumber",
    "sms-voice:CreateEventDestination",
    "sms-voice:DeletePool",
    "sms-voice:DisassociateOriginationIdentity",
    "sms-voice:UpdatePhoneNumber",
    "sms-voice:DeleteDefaultSenderId",
    "sms-voice:ListTagsForResource",
    "sms-voice:UntagResource",
    "sms-voice:DescribeKeywords",
    "sms-voice:PutKeyword",
    "sms-voice:SetDefaultSenderId",
    "sms-voice:SetDefaultMessageType",
    "sms-voice:DescribeSenderIds",
    "sms-voice:UpdateEventDestination",
    "sms-voice:SendVoiceMessage",
    "sms-voice:UpdatePool",
    "sms-voice:ReleasePhoneNumber",
    "sms-voice:SendTextMessage",
    "sms-voice:PutOptedOutNumber",
    "sms-voice:DescribePools",
    "sms-voice:AssociateOriginationIdentity",
    "sms-voice:DeleteDefaultMessageType",
    "sms-voice:DescribePhoneNumbers",
    "sms-voice:TagResource",
    "sms-voice:ListPoolOriginationIdentities",
    "sms-voice:DeleteConfigurationSet",
    "kinesisanalytics:*",
    "kinesisanalytics:ListApplicationSnapshots",
    "kinesisanalytics:DeleteApplicationVpcConfiguration",
    "kinesisanalytics:AddApplicationInput",
    "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "kinesisanalytics:DeleteApplication",
    "kinesisanalytics:StartApplication",
    "kinesisanalytics:UntagResource",
    "kinesisanalytics:DescribeApplicationVersion",
    "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "kinesisanalytics:CreateApplicationSnapshot",
    "kinesisanalytics:DescribeApplicationSnapshot",
    "kinesisanalytics:UpdateApplicationMaintenanceConfiguration",
    "kinesisanalytics:ListTagsForResource",
    "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "kinesisanalytics:DeleteApplicationOutput",
    "kinesisanalytics:DescribeApplication",
    "kinesisanalytics:StopApplication",
    "kinesisanalytics:RollbackApplication",
    "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "kinesisanalytics:AddApplicationVpcConfiguration",
    "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "kinesisanalytics:ListApplicationVersions",
    "kinesisanalytics:DeleteApplicationSnapshot",
    "kinesisanalytics:TagResource",
    "kinesisanalytics:CreateApplicationPresignedUrl",
    "kinesisanalytics:UpdateApplication",
    "kinesisanalytics:AddApplicationOutput",
    "kinesisanalytics:AddApplicationReferenceDataSource",
    "mobilehub:*",
    "mobilehub:DeleteProject",
    "mobilehub:ExportProject",
    "mobilehub:GenerateProjectParameters",
    "mobilehub:UpdateProject",
    "mobilehub:SynchronizeProject",
    "mobilehub:GetProject",
    "cur:*",
    "cur:DeleteReportDefinition",
    "cur:PutReportDefinition",
    "cur:ModifyReportDefinition",
    "wafv2:*",
    "wafv2:UpdateWebACL",
    "wafv2:ListResourcesForWebACL",
    "wafv2:GetRegexPatternSet",
    "wafv2:DeleteFirewallManagerRuleGroups",
    "wafv2:DeletePermissionPolicy",
    "wafv2:GetRuleGroup",
    "wafv2:DeleteIPSet",
    "wafv2:GetLoggingConfiguration",
    "wafv2:DisassociateFirewallManager",
    "wafv2:GetWebACLForResource",
    "wafv2:GetRateBasedStatementManagedKeys",
    "wafv2:GetSampledRequests",
    "wafv2:UntagResource",
    "wafv2:CreateRegexPatternSet",
    "wafv2:PutPermissionPolicy",
    "wafv2:UpdateIPSet",
    "wafv2:UpdateRegexPatternSet",
    "wafv2:DeleteRegexPatternSet",
    "wafv2:UpdateRuleGroup",
    "wafv2:DisassociateWebACL",
    "wafv2:PutFirewallManagerRuleGroups",
    "wafv2:CreateIPSet",
    "wafv2:GetWebACL",
    "wafv2:UpdateManagedRuleSetVersionExpiryDate",
    "wafv2:DeleteWebACL",
    "wafv2:ListTagsForResource",
    "wafv2:CreateRuleGroup",
    "wafv2:GetPermissionPolicy",
    "wafv2:CreateWebACL",
    "wafv2:TagResource",
    "wafv2:PutLoggingConfiguration",
    "wafv2:GetIPSet",
    "wafv2:PutManagedRuleSetVersions",
    "wafv2:DeleteLoggingConfiguration",
    "wafv2:DeleteRuleGroup",
    "wafv2:AssociateWebACL",
    "wafv2:GetManagedRuleSet",
    "forecast:*",
    "forecast:DeleteWhatIfForecastExport",
    "forecast:DeleteDatasetImportJob",
    "forecast:GetRecentForecastContext",
    "forecast:CreateForecastEndpoint",
    "forecast:DeletePredictorBacktestExportJob",
    "forecast:DeleteDatasetGroup",
    "forecast:DeletePredictor",
    "forecast:CreateWhatIfForecast",
    "forecast:DeleteMonitor",
    "forecast:CreateWhatIfForecastExport",
    "forecast:TagResource",
    "forecast:CreateMonitor",
    "forecast:DescribeDatasetGroup",
    "forecast:DescribeDataset",
    "forecast:QueryForecast",
    "forecast:DeleteExplainabilityExport",
    "forecast:DeleteExplainability",
    "forecast:DescribeMonitor",
    "forecast:DeleteForecastEndpoint",
    "forecast:ListMonitorEvaluations",
    "forecast:CreateForecastExportJob",
    "forecast:DescribeForecastEndpoint",
    "forecast:CreateDataset",
    "forecast:UntagResource",
    "forecast:DescribeExplainability",
    "forecast:DescribeExplainabilityExport",
    "forecast:CreateExplainability",
    "forecast:DeleteForecast",
    "forecast:DescribeForecast",
    "forecast:CreatePredictor",
    "forecast:CreateDatasetGroup",
    "forecast:DescribeDatasetImportJob",
    "forecast:InvokeForecastEndpoint",
    "forecast:QueryWhatIfForecast",
    "forecast:DeleteDataset",
    "forecast:ResumeResource",
    "forecast:CreateExplainabilityExport",
    "forecast:DescribePredictorBacktestExportJob",
    "forecast:DescribePredictor",
    "forecast:CreateDatasetImportJob",
    "forecast:ListTagsForResource",
    "forecast:DescribeForecastExportJob",
    "forecast:DescribeAutoPredictor",
    "forecast:CreateWhatIfAnalysis",
    "forecast:CreatePredictorBacktestExportJob",
    "forecast:StopResource",
    "forecast:DescribeWhatIfForecast",
    "forecast:DescribeWhatIfAnalysis",
    "forecast:DeleteWhatIfForecast",
    "forecast:DeleteWhatIfAnalysis",
    "forecast:DeleteResourceTree",
    "forecast:GetAccuracyMetrics",
    "forecast:DeleteForecastExportJob",
    "forecast:DescribeWhatIfForecastExport",
    "forecast:CreateForecast",
    "forecast:UpdateDatasetGroup",
    "connect:*",
    "connect:CreateVocabulary",
    "connect:AssociateApprovedOrigin",
    "connect:UpdateContactAttributes",
    "connect:DescribePhoneNumber",
    "connect:ListSecurityProfiles",
    "connect:GetCurrentUserData",
    "connect:UpdateUserHierarchyStructure",
    "connect:UpdateQuickConnectConfig",
    "connect:DeleteUserHierarchyGroup",
    "connect:ListInstanceAttributes",
    "connect:AssociateSecurityKey",
    "connect:ListTaskTemplates",
    "connect:BatchAssociateAnalyticsDataSet",
    "connect:CreateIntegrationAssociation",
    "connect:StopContact",
    "connect:DisassociateCustomerProfilesDomain",
    "connect:AssociateDefaultVocabulary",
    "connect:CreateTaskTemplate",
    "connect:DeleteIntegrationAssociation",
    "connect:ListUsers",
    "connect:UpdateQueueStatus",
    "connect:ListContactFlows",
    "connect:DeleteTaskTemplate",
    "connect:UpdateUserHierarchy",
    "connect:DeleteInstance",
    "connect:ListUseCases",
    "connect:DescribeTrafficDistributionGroup",
    "connect:ListQueueQuickConnects",
    "connect:ListPrompts",
    "connect:CreateQueue",
    "connect:UpdateTaskTemplate",
    "connect:DeleteHoursOfOperation",
    "connect:ListInstanceStorageConfigs",
    "connect:UpdateUserPhoneConfig",
    "connect:DeleteContactFlow",
    "connect:DescribeUser",
    "connect:CreateSecurityProfile",
    "connect:ListSecurityKeys",
    "connect:UpdateTrafficDistribution",
    "connect:StartTaskContact",
    "connect:StopContactStreaming",
    "connect:UpdateContactSchedule",
    "connect:SearchAvailablePhoneNumbers",
    "connect:SearchUsers",
    "connect:DescribeVocabulary",
    "connect:DescribeQueue",
    "connect:DescribeUserHierarchyGroup",
    "connect:DescribeContact",
    "connect:DisassociateQueueQuickConnects",
    "connect:ListPhoneNumbers",
    "connect:UpdateContactFlowModuleContent",
    "connect:CreateHoursOfOperation",
    "connect:AssociateInstanceStorageConfig",
    "connect:ListContactFlowModules",
    "connect:ListDefaultVocabularies",
    "connect:DisassociateInstanceStorageConfig",
    "connect:ListQuickConnects",
    "connect:DescribeInstanceStorageConfig",
    "connect:SearchVocabularies",
    "connect:CreateTrafficDistributionGroup",
    "connect:ListAgentStatuses",
    "connect:UpdateQueueHoursOfOperation",
    "connect:UpdateUserIdentityInfo",
    "connect:ListLexBots",
    "connect:DisassociateBot",
    "connect:DeleteTrafficDistributionGroup",
    "connect:DisassociateRoutingProfileQueues",
    "connect:ListRoutingProfileQueues",
    "connect:BatchDisassociateAnalyticsDataSet",
    "connect:CreateQuickConnect",
    "connect:DisassociatePhoneNumberContactFlow",
    "connect:CreateContactFlowModule",
    "connect:DisassociateApprovedOrigin",
    "connect:DescribeQuickConnect",
    "connect:StartContactRecording",
    "connect:UpdatePhoneNumber",
    "connect:SuspendContactRecording",
    "connect:ListUserHierarchyGroups",
    "connect:ListPhoneNumbersV2",
    "connect:UpdateRoutingProfileConcurrency",
    "connect:UpdateContactFlowName",
    "connect:AssociateLexBot",
    "connect:GetCurrentMetricData",
    "connect:StartOutboundVoiceContact",
    "connect:UntagResource",
    "connect:GetTaskTemplate",
    "connect:UpdateQueueOutboundCallerConfig",
    "connect:UpdateUserHierarchyGroupName",
    "connect:DeleteSecurityProfile",
    "connect:GetMetricData",
    "connect:ListTagsForResource",
    "connect:ListApprovedOrigins",
    "connect:ListHoursOfOperations",
    "connect:UpdateRoutingProfileName",
    "connect:StopContactRecording",
    "connect:GetFederationTokens",
    "connect:ListSecurityProfilePermissions",
    "connect:DisassociateSecurityKey",
    "connect:ResumeContactRecording",
    "connect:TagResource",
    "connect:UpdateHoursOfOperation",
    "connect:DescribeHoursOfOperation",
    "connect:ListContactReferences",
    "connect:DescribeContactFlowModule",
    "connect:DeleteVocabulary",
    "connect:UpdateUserRoutingProfile",
    "connect:UpdateRoutingProfileDefaultOutboundQueue",
    "connect:CreateUser",
    "connect:UpdatedescribeContent",
    "connect:DeleteUseCase",
    "connect:UpdateSecurityProfile",
    "connect:SearchSecurityProfiles",
    "connect:UpdateRoutingProfileQueues",
    "connect:UpdateContactFlowMetadata",
    "connect:DeleteContactFlowModule",
    "connect:UpdateQueueName",
    "connect:DescribeInstanceAttribute",
    "connect:CreateUserHierarchyGroup",
    "connect:ListLambdaFunctions",
    "connect:UpdateInstanceAttribute",
    "connect:TransferContact",
    "connect:DisassociateLambdaFunction",
    "connect:UpdateUserSecurityProfiles",
    "connect:ListBots",
    "connect:DescribeSecurityProfile",
    "connect:ListRealtimeContactAnalysisSegments",
    "connect:DisassociateLexBot",
    "connect:DescribeUserHierarchyStructure",
    "connect:DeleteUser",
    "connect:AssociateQueueQuickConnects",
    "connect:GetTrafficDistribution",
    "connect:UpdateContactFlowContent",
    "connect:ListQueues",
    "connect:UpdateInstanceStorageConfig",
    "connect:CreateAgentStatus",
    "connect:SearchRoutingProfiles",
    "connect:PutUserStatus",
    "connect:AssociateBot",
    "connect:CreateRoutingProfile",
    "connect:ClaimPhoneNumber",
    "connect:ListIntegrationAssociations",
    "connect:DescribeRoutingProfile",
    "connect:UpdateQuickConnectName",
    "connect:UpdateContact",
    "connect:UpdateContactFlowModuleMetadata",
    "connect:AssociateLambdaFunction",
    "connect:GetContactAttributes",
    "connect:UpdateAgentStatus",
    "connect:CreateContactFlow",
    "connect:AssociateCustomerProfilesDomain",
    "connect:AssociateRoutingProfileQueues",
    "connect:SearchQueues",
    "connect:ListRoutingProfiles",
    "connect:UpdateQueueMaxContacts",
    "connect:GetFederationToken",
    "connect:DescribeInstance",
    "connect:DescribeContactFlow",
    "connect:AssociatePhoneNumberContactFlow",
    "connect:ReleasePhoneNumber",
    "connect:DeleteQuickConnect",
    "connect:StartChatContact",
    "connect:StartContactStreaming",
    "connect:DescribeAgentStatus",
    "connect:ListTrafficDistributionGroups",
    "connect:CreateUseCase",
    "elasticloadbalancing:*",
    "elasticloadbalancing:DeleteTargetGroup",
    "elasticloadbalancing:RemoveTags",
    "elasticloadbalancing:CreateRule",
    "elasticloadbalancing:CreateListener",
    "elasticloadbalancing:ModifyTargetGroupAttributes",
    "elasticloadbalancing:ModifyListener",
    "elasticloadbalancing:SetIpAddressType",
    "elasticloadbalancing:DeleteLoadBalancer",
    "elasticloadbalancing:AddListenerCertificates",
    "elasticloadbalancing:CreateTargetGroup",
    "elasticloadbalancing:SetSubnets",
    "elasticloadbalancing:SetRulePriorities",
    "elasticloadbalancing:RegisterTargets",
    "elasticloadbalancing:ModifyRule",
    "elasticloadbalancing:DeleteRule",
    "elasticloadbalancing:CreateLoadBalancer",
    "elasticloadbalancing:ModifyLoadBalancerAttributes",
    "elasticloadbalancing:RemoveListenerCertificates",
    "elasticloadbalancing:ModifyTargetGroup",
    "elasticloadbalancing:SetSecurityGroups",
    "elasticloadbalancing:AddTags",
    "elasticloadbalancing:DeleteListener",
    "elasticloadbalancing:DeregisterTargets",
    "ecr-public:*",
    "ecr-public:DeleteRepositoryPolicy",
    "ecr-public:DescribeRepositories",
    "ecr-public:DeleteRepository",
    "ecr-public:PutRegistryCatalogData",
    "ecr-public:BatchCheckLayerAvailability",
    "ecr-public:BatchDeleteImage",
    "ecr-public:DescribeImages",
    "ecr-public:SetRepositoryPolicy",
    "ecr-public:UntagResource",
    "ecr-public:ListTagsForResource",
    "ecr-public:InitiateLayerUpload",
    "ecr-public:PutImage",
    "ecr-public:GetRepositoryCatalogData",
    "ecr-public:UploadLayerPart",
    "ecr-public:CompleteLayerUpload",
    "ecr-public:TagResource",
    "ecr-public:GetRegistryCatalogData",
    "ecr-public:CreateRepository",
    "ecr-public:DescribeRegistries",
    "ecr-public:DescribeImageTags",
    "ecr-public:GetRepositoryPolicy",
    "ecr-public:PutRepositoryCatalogData",
    "appflow:*",
    "appflow:UpdateFlow",
    "appflow:DescribeConnectorEntity",
    "appflow:DescribeFlowExecutionRecords",
    "appflow:UseConnectorProfile",
    "appflow:TagResource",
    "appflow:StartFlow",
    "appflow:UpdateConnectorProfile",
    "appflow:ListConnectorEntities",
    "appflow:ListFlows",
    "appflow:DescribeConnectorFields",
    "appflow:StopFlow",
    "appflow:UnRegisterConnector",
    "appflow:RunFlow",
    "appflow:UntagResource",
    "appflow:ListTagsForResource",
    "appflow:ListConnectors",
    "appflow:DeleteFlow",
    "appflow:DescribeConnector",
    "appflow:ListConnectorFields",
    "appflow:DescribeFlowExecution",
    "appflow:DeleteConnectorProfile",
    "cloudshell:*",
    "cloudshell:GetFileUploadUrls",
    "cloudshell:PutCredentials",
    "cloudshell:DeleteEnvironment",
    "cloudshell:CreateSession",
    "cloudshell:GetFileDownloadUrls",
    "cloudshell:StartEnvironment",
    "cloudshell:StopEnvironment",
    "cloudshell:GetEnvironmentStatus",
    "lookoutvision:*",
    "lookoutvision:DetectAnomalies",
    "lookoutvision:StartModel",
    "lookoutvision:DeleteProject",
    "lookoutvision:UntagResource",
    "lookoutvision:StopModel",
    "lookoutvision:TagResource",
    "lookoutvision:StartModelPackagingJob",
    "lookoutvision:DescribeModel",
    "lookoutvision:DescribeProject",
    "lookoutvision:CreateProject",
    "lookoutvision:CreateModel",
    "lookoutvision:DeleteModel",
    "lookoutvision:ListTagsForResource",
    "eks:*",
    "eks:AccessKubernetesApi",
    "eks:DescribeIdentityProviderConfig",
    "eks:AssociateEncryptionConfig",
    "eks:ListFargateProfiles",
    "eks:DescribeAddon",
    "eks:DeleteFargateProfile",
    "eks:TagResource",
    "eks:UpdateClusterVersion",
    "eks:DescribeCluster",
    "eks:DeleteCluster",
    "eks:ListTagsForResource",
    "eks:DeleteNodegroup",
    "eks:UpdateClusterConfig",
    "eks:ListIdentityProviderConfigs",
    "eks:DeregisterCluster",
    "eks:UntagResource",
    "eks:ListUpdates",
    "eks:ListAddons",
    "eks:AssociateIdentityProviderConfig",
    "eks:DeleteAddon",
    "eks:UpdateNodegroupVersion",
    "eks:ListNodegroups",
    "eks:CreateAddon",
    "eks:DescribeFargateProfile",
    "eks:DescribeNodegroup",
    "eks:CreateFargateProfile",
    "eks:CreateNodegroup",
    "eks:UpdateAddon",
    "eks:DescribeUpdate",
    "eks:UpdateNodegroupConfig",
    "eks:DisassociateIdentityProviderConfig",
    "chatbot:*",
    "chatbot:DeleteChimeWebhookConfiguration",
    "chatbot:DeleteSlackChannelConfiguration",
    "chatbot:UpdateChimeWebhookConfiguration",
    "chatbot:UpdateSlackChannelConfiguration",
    "devops-guru:*",
    "devops-guru:RemoveNotificationChannel",
    "devops-guru:AddNotificationChannel",
    "apigateway:*",
    "apigateway:PUT",
    "apigateway:PATCH",
    "apigateway:GET",
    "apigateway:DELETE",
    "apigateway:POST",
    "iotfleethub:*",
    "iotfleethub:DescribeApplication",
    "iotfleethub:UntagResource",
    "iotfleethub:UpdateApplication",
    "iotfleethub:ListTagsForResource",
    "iotfleethub:DeleteApplication",
    "iotfleethub:TagResource",
    "imagebuilder:*",
    "imagebuilder:GetComponentPolicy",
    "imagebuilder:PutImagePolicy",
    "imagebuilder:GetComponent",
    "imagebuilder:ImportComponent",
    "imagebuilder:CreateDistributionConfiguration",
    "imagebuilder:UpdateDistributionConfiguration",
    "imagebuilder:UpdateInfrastructureConfiguration",
    "imagebuilder:DeleteDistributionConfiguration",
    "imagebuilder:DeleteImage",
    "imagebuilder:GetInfrastructureConfiguration",
    "imagebuilder:DeleteImagePipeline",
    "imagebuilder:ListImagePackages",
    "imagebuilder:GetContainerRecipe",
    "imagebuilder:CreateImage",
    "imagebuilder:DeleteInfrastructureConfiguration",
    "imagebuilder:GetImagePolicy",
    "imagebuilder:PutContainerRecipePolicy",
    "imagebuilder:GetContainerRecipePolicy",
    "imagebuilder:CreateImageRecipe",
    "imagebuilder:StartImagePipelineExecution",
    "imagebuilder:ImportVmImage",
    "imagebuilder:PutComponentPolicy",
    "imagebuilder:CreateImagePipeline",
    "imagebuilder:UpdateImagePipeline",
    "imagebuilder:GetImageRecipePolicy",
    "imagebuilder:GetDistributionConfiguration",
    "imagebuilder:UntagResource",
    "imagebuilder:CreateContainerRecipe",
    "imagebuilder:ListComponentBuildVersions",
    "imagebuilder:CancelImageCreation",
    "imagebuilder:DeleteImageRecipe",
    "imagebuilder:GetImagePipeline",
    "imagebuilder:CreateInfrastructureConfiguration",
    "imagebuilder:ListImageBuildVersions",
    "imagebuilder:DeleteContainerRecipe",
    "imagebuilder:DeleteComponent",
    "imagebuilder:ListTagsForResource",
    "imagebuilder:ListImagePipelineImages",
    "imagebuilder:TagResource",
    "imagebuilder:GetImage",
    "imagebuilder:CreateComponent",
    "imagebuilder:PutImageRecipePolicy",
    "imagebuilder:GetImageRecipe",
    "rds:*",
    "rds:AddSourceIdentifierToSubscription",
    "rds:DescribeDBProxies",
    "rds:StartActivityStream",
    "rds:DeleteDBParameterGroup",
    "rds:ModifyDBProxyTargetGroup",
    "rds:RestoreDBClusterFromS3",
    "rds:StopDBInstance",
    "rds:PromoteReadReplicaDBCluster",
    "rds:StartDBCluster",
    "rds:AddRoleToDBCluster",
    "rds:DeregisterDBProxyTargets",
    "rds:ModifyOptionGroup",
    "rds:DeleteEventSubscription",
    "rds:RestoreDBInstanceToPointInTime",
    "rds:RegisterDBProxyTargets",
    "rds:AddTagsToResource",
    "rds:AddRoleToDBInstance",
    "rds:CreateDBClusterParameterGroup",
    "rds:ApplyPendingMaintenanceAction",
    "rds:DescribeDBParameters",
    "rds:ModifyDBClusterEndpoint",
    "rds:DeleteCustomDBEngineVersion",
    "rds:RestoreDBInstanceFromDBSnapshot",
    "rds:DeleteDBClusterEndpoint",
    "rds:DescribeDBClusterSnapshots",
    "rds:CreateDBInstance",
    "rds:CreateDBCluster",
    "rds:CopyDBClusterParameterGroup",
    "rds:AuthorizeDBSecurityGroupIngress",
    "rds:RebootDBCluster",
    "rds:ModifyDBClusterParameterGroup",
    "rds:CreateDBSnapshot",
    "rds:RestoreDBClusterToPointInTime",
    "rds:CopyDBParameterGroup",
    "rds:RemoveRoleFromDBInstance",
    "rds:CopyOptionGroup",
    "rds:DescribeDBParameterGroups",
    "rds:CreateDBClusterEndpoint",
    "rds:CreateDBProxyEndpoint",
    "rds:ResetDBClusterParameterGroup",
    "rds:DeleteDBSubnetGroup",
    "rds:PurchaseReservedDBInstancesOffering",
    "rds:DeleteDBInstance",
    "rds:StopDBInstanceAutomatedBackupsReplication",
    "rds:DescribePendingMaintenanceActions",
    "rds:DescribeDBProxyEndpoints",
    "rds:DescribeDBSubnetGroups",
    "rds:CreateOptionGroup",
    "rds:RestoreDBInstanceFromS3",
    "rds:RestoreDBClusterFromSnapshot",
    "rds:RevokeDBSecurityGroupIngress",
    "rds:DeleteDBProxy",
    "rds:DescribeDBInstanceAutomatedBackups",
    "rds:DescribeDBProxyTargetGroups",
    "rds:StartDBInstance",
    "rds:ModifyCurrentDBClusterCapacity",
    "rds:RebootDBInstance",
    "rds:RemoveTagsFromResource",
    "rds:DescribeValidDBInstanceModifications",
    "rds:DownloadDBLogFilePortion",
    "rds:StartDBInstanceAutomatedBackupsReplication",
    "rds:ModifyDBParameterGroup",
    "rds:ModifyGlobalCluster",
    "rds:CreateDBInstanceReadReplica",
    "rds:CreateDBSecurityGroup",
    "rds:DeleteOptionGroup",
    "rds:PromoteReadReplica",
    "rds:RemoveFromGlobalCluster",
    "rds:DescribeDBClusterParameterGroups",
    "rds:DescribeReservedDBInstances",
    "rds:DescribeDBClusterEndpoints",
    "rds:DescribeDBInstances",
    "rds:ModifyCustomDBEngineVersion",
    "rds:DescribeDBProxyTargets",
    "rds:DeleteDBSecurityGroup",
    "rds:CopyDBSnapshot",
    "rds:BacktrackDBCluster",
    "rds:DescribeOptionGroupOptions",
    "rds:DescribeDBSnapshots",
    "rds:CreateGlobalCluster",
    "rds:ModifyActivityStream",
    "rds:RemoveRoleFromDBCluster",
    "rds:DownloadCompleteDBLogFile",
    "rds:DescribeDBClusterBacktracks",
    "rds:FailoverDBCluster",
    "rds:DeleteDBSnapshot",
    "rds:DescribeEventSubscriptions",
    "rds:SwitchoverReadReplica",
    "rds:CreateDBClusterSnapshot",
    "rds:CreateDBSubnetGroup",
    "rds:ModifyDBProxy",
    "rds:DescribeDBClusters",
    "rds:RemoveSourceIdentifierFromSubscription",
    "rds:ResetDBParameterGroup",
    "rds:DeleteDBCluster",
    "rds:DescribeDBClusterSnapshotAttributes",
    "rds:DeleteGlobalCluster",
    "rds:DeleteDBClusterParameterGroup",
    "rds:StopDBCluster",
    "rds:FailoverGlobalCluster",
    "rds:DeleteDBClusterSnapshot",
    "rds:DescribeOptionGroups",
    "rds:DescribeDBLogFiles",
    "rds:CreateEventSubscription",
    "rds:ModifyDBClusterSnapshotAttribute",
    "rds:DeleteDBProxyEndpoint",
    "rds:DescribeDBSecurityGroups",
    "rds:ModifyDBInstance",
    "rds:ModifyDBProxyEndpoint",
    "rds:CreateDBParameterGroup",
    "rds:ModifyDBCluster",
    "rds:CopyDBClusterSnapshot",
    "rds:DescribeDBClusterParameters",
    "rds:ModifyDBSnapshot",
    "rds:ModifyDBSubnetGroup",
    "rds:DescribeGlobalClusters",
    "rds:ListTagsForResource",
    "rds:StopActivityStream",
    "rds:CreateCustomDBEngineVersion",
    "rds:ModifyDBSnapshotAttribute",
    "rds:ModifyEventSubscription",
    "rds:DescribeDBSnapshotAttributes",
    "globalaccelerator:*",
    "globalaccelerator:ListCustomRoutingPortMappings",
    "globalaccelerator:ListCustomRoutingEndpointGroups",
    "globalaccelerator:UpdateCustomRoutingAccelerator",
    "globalaccelerator:DeleteCustomRoutingAccelerator",
    "globalaccelerator:UpdateListener",
    "globalaccelerator:RemoveCustomRoutingEndpoints",
    "globalaccelerator:ListCustomRoutingListeners",
    "globalaccelerator:DeleteListener",
    "globalaccelerator:AllowCustomRoutingTraffic",
    "globalaccelerator:DeleteCustomRoutingListener",
    "globalaccelerator:DeleteAccelerator",
    "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes",
    "globalaccelerator:DescribeAcceleratorAttributes",
    "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
    "globalaccelerator:DescribeCustomRoutingListener",
    "globalaccelerator:ListTagsForResource",
    "globalaccelerator:UntagResource",
    "globalaccelerator:UpdateEndpointGroup",
    "globalaccelerator:DeleteCustomRoutingEndpointGroup",
    "globalaccelerator:AddCustomRoutingEndpoints",
    "globalaccelerator:CreateCustomRoutingEndpointGroup",
    "globalaccelerator:DescribeAccelerator",
    "globalaccelerator:TagResource",
    "globalaccelerator:DescribeListener",
    "globalaccelerator:RemoveEndpoints",
    "globalaccelerator:UpdateAcceleratorAttributes",
    "globalaccelerator:ListListeners",
    "globalaccelerator:CreateCustomRoutingListener",
    "globalaccelerator:DescribeCustomRoutingAccelerator",
    "globalaccelerator:DenyCustomRoutingTraffic",
    "globalaccelerator:ListEndpointGroups",
    "globalaccelerator:CreateEndpointGroup",
    "globalaccelerator:DeleteEndpointGroup",
    "globalaccelerator:AddEndpoints",
    "globalaccelerator:CreateListener",
    "globalaccelerator:UpdateAccelerator",
    "globalaccelerator:UpdateCustomRoutingListener",
    "globalaccelerator:DescribeEndpointGroup",
    "globalaccelerator:DescribeCustomRoutingEndpointGroup",
    "swf:*",
    "swf:StartWorkflowExecution",
    "swf:StartChildWorkflowExecution",
    "swf:DescribeActivityType",
    "swf:UndeprecateActivityType",
    "swf:RespondActivityTaskCompleted",
    "swf:DeprecateActivityType",
    "swf:CountOpenWorkflowExecutions",
    "swf:FailWorkflowExecution",
    "swf:CountPendingActivityTasks",
    "swf:StartTimer",
    "swf:ListOpenWorkflowExecutions",
    "swf:ListWorkflowTypes",
    "swf:ListTagsForResource",
    "swf:ListActivityTypes",
    "swf:UntagResource",
    "swf:DescribeDomain",
    "swf:CancelTimer",
    "swf:DeprecateDomain",
    "swf:RecordMarker",
    "swf:PollForActivityTask",
    "swf:PollForDecisionTask",
    "swf:RecordActivityTaskHeartbeat",
    "swf:RegisterActivityType",
    "swf:SignalExternalWorkflowExecution",
    "swf:CountPendingDecisionTasks",
    "swf:DescribeWorkflowExecution",
    "swf:DescribeWorkflowType",
    "swf:UndeprecateWorkflowType",
    "swf:TerminateWorkflowExecution",
    "swf:UndeprecateDomain",
    "swf:DeprecateWorkflowType",
    "swf:SignalWorkflowExecution",
    "swf:RequestCancelActivityTask",
    "swf:CompleteWorkflowExecution",
    "swf:ContinueAsNewWorkflowExecution",
    "swf:GetWorkflowExecutionHistory",
    "swf:TagResource",
    "swf:RegisterWorkflowType",
    "swf:RespondActivityTaskCanceled",
    "swf:RespondActivityTaskFailed",
    "swf:CountClosedWorkflowExecutions",
    "swf:RequestCancelExternalWorkflowExecution",
    "swf:ScheduleActivityTask",
    "swf:RespondDecisionTaskCompleted",
    "swf:RequestCancelWorkflowExecution",
    "swf:ListClosedWorkflowExecutions",
    "swf:CancelWorkflowExecution",
    "savingsplans:*",
    "savingsplans:UntagResource",
    "savingsplans:TagResource",
    "savingsplans:DescribeSavingsPlanRates",
    "savingsplans:DeleteQueuedSavingsPlan",
    "savingsplans:ListTagsForResource",
    "savingsplans:DescribeSavingsPlans",
    "elasticloadbalancing:*",
    "elasticloadbalancing:ConfigureHealthCheck",
    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
    "elasticloadbalancing:DetachLoadBalancerFromSubnets",
    "elasticloadbalancing:CreateLBCookieStickinessPolicy",
    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
    "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
    "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
    "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
    "elasticloadbalancing:RemoveTags",
    "elasticloadbalancing:DeleteLoadBalancer",
    "elasticloadbalancing:CreateLoadBalancer",
    "elasticloadbalancing:AttachLoadBalancerToSubnets",
    "elasticloadbalancing:DeleteLoadBalancerListeners",
    "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
    "elasticloadbalancing:ModifyLoadBalancerAttributes",
    "elasticloadbalancing:CreateLoadBalancerListeners",
    "elasticloadbalancing:CreateAppCookieStickinessPolicy",
    "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
    "elasticloadbalancing:CreateLoadBalancerPolicy",
    "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
    "elasticloadbalancing:DeleteLoadBalancerPolicy",
    "elasticloadbalancing:AddTags",
    "rds-db:*",
    "rds-db:connect",
    "storagegateway:*",
    "storagegateway:DeleteAutomaticTapeCreationPolicy",
    "storagegateway:DescribeSnapshotSchedule",
    "storagegateway:CancelArchival",
    "storagegateway:DeleteGateway",
    "storagegateway:UpdateNFSFileShare",
    "storagegateway:UpdateSMBLocalGroups",
    "storagegateway:UpdateSMBSecurityStrategy",
    "storagegateway:UpdateSMBFileShareVisibility",
    "storagegateway:UpdateFileSystemAssociation",
    "storagegateway:RetrieveTapeRecoveryPoint",
    "storagegateway:JoinDomain",
    "storagegateway:BypassGovernanceRetention",
    "storagegateway:CreateSnapshot",
    "storagegateway:DeleteVolume",
    "storagegateway:AddTagsToResource",
    "storagegateway:ListVolumeRecoveryPoints",
    "storagegateway:DescribeAvailabilityMonitorTest",
    "storagegateway:DisassociateFileSystem",
    "storagegateway:RemoveTagsFromResource",
    "storagegateway:DeleteTape",
    "storagegateway:DescribeTapes",
    "storagegateway:DeleteTapePool",
    "storagegateway:RetrieveTapeArchive",
    "storagegateway:UpdateGatewaySoftwareNow",
    "storagegateway:StartGateway",
    "storagegateway:DescribeMaintenanceStartTime",
    "storagegateway:CreateStorediSCSIVolume",
    "storagegateway:DescribeUploadBuffer",
    "storagegateway:SetLocalConsolePassword",
    "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
    "storagegateway:DescribeStorediSCSIVolumes",
    "storagegateway:DescribeSMBFileShares",
    "storagegateway:UpdateGatewayInformation",
    "storagegateway:DescribeWorkingStorage",
    "storagegateway:ListFileShares",
    "storagegateway:AddWorkingStorage",
    "storagegateway:DescribeNFSFileShares",
    "storagegateway:SetSMBGuestPassword",
    "storagegateway:AssociateFileSystem",
    "storagegateway:DescribeTapeRecoveryPoints",
    "storagegateway:AddUploadBuffer",
    "storagegateway:CancelRetrieval",
    "storagegateway:ListVolumeInitiators",
    "storagegateway:ListTapes",
    "storagegateway:AttachVolume",
    "storagegateway:UpdateVTLDeviceType",
    "storagegateway:DescribeGatewayInformation",
    "storagegateway:UpdateSMBFileShare",
    "storagegateway:UpdateAutomaticTapeCreationPolicy",
    "storagegateway:CreateSMBFileShare",
    "storagegateway:UpdateBandwidthRateLimitSchedule",
    "storagegateway:DescribeCachediSCSIVolumes",
    "storagegateway:DescribeChapCredentials",
    "storagegateway:StartAvailabilityMonitorTest",
    "storagegateway:UpdateMaintenanceStartTime",
    "storagegateway:DescribeVTLDevices",
    "storagegateway:DeleteBandwidthRateLimit",
    "storagegateway:CreateCachediSCSIVolume",
    "storagegateway:DeleteChapCredentials",
    "storagegateway:UpdateBandwidthRateLimit",
    "storagegateway:DeleteSnapshotSchedule",
    "storagegateway:DescribeCache",
    "storagegateway:ListFileSystemAssociations",
    "storagegateway:ListAutomaticTapeCreationPolicies",
    "storagegateway:DescribeSMBSettings",
    "storagegateway:DetachVolume",
    "storagegateway:DeleteFileShare",
    "storagegateway:ListTapePools",
    "storagegateway:DescribeBandwidthRateLimitSchedule",
    "storagegateway:DescribeBandwidthRateLimit",
    "storagegateway:DisableGateway",
    "storagegateway:DescribeFileSystemAssociations",
    "storagegateway:CreateTapes",
    "storagegateway:ListTagsForResource",
    "storagegateway:RefreshCache",
    "storagegateway:ListLocalDisks",
    "storagegateway:AssignTapePool",
    "storagegateway:NotifyWhenUploaded",
    "storagegateway:UpdateChapCredentials",
    "storagegateway:AddCache",
    "storagegateway:CreateTapeWithBarcode",
    "storagegateway:ResetCache",
    "storagegateway:ShutdownGateway",
    "storagegateway:ListVolumes",
    "storagegateway:CreateNFSFileShare",
    "storagegateway:UpdateSnapshotSchedule",
    "machinelearning:*",
    "machinelearning:CreateRealtimeEndpoint",
    "machinelearning:AddTags",
    "machinelearning:DeleteEvaluation",
    "machinelearning:DeleteTags",
    "machinelearning:GetDataSource",
    "machinelearning:GetMLModel",
    "machinelearning:DeleteBatchPrediction",
    "machinelearning:CreateBatchPrediction",
    "machinelearning:DescribeTags",
    "machinelearning:UpdateBatchPrediction",
    "machinelearning:DeleteMLModel",
    "machinelearning:GetBatchPrediction",
    "machinelearning:DeleteRealtimeEndpoint",
    "machinelearning:UpdateMLModel",
    "machinelearning:Predict",
    "machinelearning:GetEvaluation",
    "machinelearning:UpdateEvaluation",
    "machinelearning:CreateDataSourceFromRDS",
    "machinelearning:CreateEvaluation",
    "machinelearning:CreateDataSourceFromS3",
    "machinelearning:UpdateDataSource",
    "machinelearning:DeleteDataSource",
    "machinelearning:CreateMLModel",
    "machinelearning:CreateDataSourceFromRedshift",
    "acm-pca:*",
    "acm-pca:GetCertificateAuthorityCertificate",
    "acm-pca:ListTags",
    "acm-pca:GetCertificate",
    "acm-pca:GetPolicy",
    "acm-pca:PutPolicy",
    "acm-pca:DescribeCertificateAuthority",
    "acm-pca:GetCertificateAuthorityCsr",
    "acm-pca:IssueCertificate",
    "acm-pca:DeletePolicy",
    "acm-pca:UpdateCertificateAuthority",
    "acm-pca:DescribeCertificateAuthorityAuditReport",
    "acm-pca:CreateCertificateAuthorityAuditReport",
    "acm-pca:UntagCertificateAuthority",
    "acm-pca:ListPermissions",
    "acm-pca:RestoreCertificateAuthority",
    "acm-pca:CreatePermission",
    "acm-pca:TagCertificateAuthority",
    "acm-pca:ImportCertificateAuthorityCertificate",
    "acm-pca:RevokeCertificate",
    "acm-pca:DeleteCertificateAuthority",
    "acm-pca:DeletePermission",
    "app-integrations:*",
    "app-integrations:UntagResource",
    "app-integrations:ListTagsForResource",
    "app-integrations:DeleteEventIntegrationAssociation",
    "app-integrations:CreateDataIntegrationAssociation",
    "app-integrations:DeleteDataIntegrationAssociation",
    "app-integrations:UpdateDataIntegration",
    "app-integrations:CreateEventIntegrationAssociation",
    "app-integrations:CreateEventIntegration",
    "app-integrations:GetEventIntegration",
    "app-integrations:UpdateEventIntegration",
    "app-integrations:DeleteDataIntegration",
    "app-integrations:DeleteEventIntegration",
    "app-integrations:CreateDataIntegration",
    "app-integrations:GetDataIntegration",
    "app-integrations:TagResource",
    "ce:*",
    "ce:UpdateAnomalyMonitor",
    "ce:GetAnomalies",
    "ce:UpdateAnomalySubscription",
    "ce:DeleteAnomalySubscription",
    "ce:GetAnomalySubscriptions",
    "ce:GetAnomalyMonitors",
    "ce:UpdateCostCategoryDefinition",
    "ce:UntagResource",
    "ce:DescribeCostCategoryDefinition",
    "ce:TagResource",
    "ce:DeleteCostCategoryDefinition",
    "ce:DeleteAnomalyMonitor",
    "ce:ListTagsForResource",
    "ses:*",
    "ses:SendEmail",
    "ses:SendRawEmail",
    "ses:SendTemplatedEmail",
    "ses:SendCustomVerificationEmail",
    "ses:SendBulkTemplatedEmail",
    "ses:SendBounce",
    "clouddirectory:*",
    "clouddirectory:UpdateSchema",
    "clouddirectory:CreateTypedLinkFacet",
    "clouddirectory:LookupPolicy",
    "clouddirectory:GetFacet",
    "clouddirectory:ListFacetAttributes",
    "clouddirectory:ListIncomingTypedLinks",
    "clouddirectory:AttachPolicy",
    "clouddirectory:GetObjectAttributes",
    "clouddirectory:CreateIndex",
    "clouddirectory:UpdateLinkAttributes",
    "clouddirectory:AttachObject",
    "clouddirectory:TagResource",
    "clouddirectory:ApplySchema",
    "clouddirectory:CreateFacet",
    "clouddirectory:UpdateTypedLinkFacet",
    "clouddirectory:UpdateObjectAttributes",
    "clouddirectory:CreateDirectory",
    "clouddirectory:AddFacetToObject",
    "clouddirectory:GetDirectory",
    "clouddirectory:ListFacetNames",
    "clouddirectory:RemoveFacetFromObject",
    "clouddirectory:ListAppliedSchemaArns",
    "clouddirectory:DeleteObject",
    "clouddirectory:AttachTypedLink",
    "clouddirectory:ListPolicyAttachments",
    "clouddirectory:DetachTypedLink",
    "clouddirectory:ListTypedLinkFacetNames",
    "clouddirectory:ListObjectParentPaths",
    "clouddirectory:DetachFromIndex",
    "clouddirectory:ListObjectParents",
    "clouddirectory:DeleteDirectory",
    "clouddirectory:GetTypedLinkFacetInformation",
    "clouddirectory:UpgradeAppliedSchema",
    "clouddirectory:AttachToIndex",
    "clouddirectory:UntagResource",
    "clouddirectory:ListIndex",
    "clouddirectory:DeleteTypedLinkFacet",
    "clouddirectory:ListAttachedIndices",
    "clouddirectory:DeleteFacet",
    "clouddirectory:ListTagsForResource",
    "clouddirectory:EnableDirectory",
    "clouddirectory:PublishSchema",
    "clouddirectory:UpgradePublishedSchema",
    "clouddirectory:CreateObject",
    "clouddirectory:ListObjectAttributes",
    "clouddirectory:ListOutgoingTypedLinks",
    "clouddirectory:BatchRead",
    "clouddirectory:DeleteSchema",
    "clouddirectory:GetLinkAttributes",
    "clouddirectory:DetachPolicy",
    "clouddirectory:DetachObject",
    "clouddirectory:BatchWrite",
    "clouddirectory:DisableDirectory",
    "clouddirectory:ListObjectPolicies",
    "clouddirectory:ListObjectChildren",
    "clouddirectory:UpdateFacet",
    "clouddirectory:GetAppliedSchemaVersion",
    "clouddirectory:ListTypedLinkFacetAttributes",
    "clouddirectory:GetSchemaAsJson",
    "clouddirectory:GetObjectInformation",
    "es:*",
    "es:DescribeElasticsearchDomainConfig",
    "es:ListTags",
    "es:DeleteDomain",
    "es:AssociatePackage",
    "es:ESHttpDelete",
    "es:DescribeElasticsearchDomains",
    "es:CancelElasticsearchServiceSoftwareUpdate",
    "es:ESCrossClusterGet",
    "es:DescribeDomainConfig",
    "es:ESHttpPut",
    "es:ESHttpPost",
    "es:GetUpgradeStatus",
    "es:UpdateElasticsearchDomainConfig",
    "es:CreateOutboundCrossClusterSearchConnection",
    "es:CreateOutboundConnection",
    "es:UpdateDomainConfig",
    "es:CreateElasticsearchDomain",
    "es:DeleteElasticsearchDomain",
    "es:ListPackagesForDomain",
    "es:AddTags",
    "es:CancelServiceSoftwareUpdate",
    "es:StartServiceSoftwareUpdate",
    "es:DissociatePackage",
    "es:DescribeDomainAutoTunes",
    "es:ESHttpHead",
    "es:GetCompatibleVersions",
    "es:UpgradeDomain",
    "es:ESHttpGet",
    "es:DescribeDomain",
    "es:DescribeDomainChangeProgress",
    "es:UpgradeElasticsearchDomain",
    "es:StartElasticsearchServiceSoftwareUpdate",
    "es:ESHttpPatch",
    "es:DescribeDomains",
    "es:RemoveTags",
    "es:GetUpgradeHistory",
    "es:DescribeElasticsearchDomain",
    "es:GetCompatibleElasticsearchVersions",
    "es:CreateDomain",
    "inspector2:*",
    "inspector2:CreateFilter",
    "inspector2:DeleteFilter",
    "inspector2:UpdateFilter",
    "iotdeviceadvisor:*",
    "iotdeviceadvisor:StopSuiteRun",
    "iotdeviceadvisor:GetSuiteRunReport",
    "iotdeviceadvisor:ListSuiteRuns",
    "iotdeviceadvisor:TagResource",
    "iotdeviceadvisor:UntagResource",
    "iotdeviceadvisor:GetSuiteRun",
    "iotdeviceadvisor:UpdateSuiteDefinition",
    "iotdeviceadvisor:GetSuiteDefinition",
    "iotdeviceadvisor:ListTagsForResource",
    "iotdeviceadvisor:DeleteSuiteDefinition",
    "rbin:*",
    "rbin:ListTagsForResource",
    "rbin:TagResource",
    "rbin:UpdateRule",
    "rbin:GetRule",
    "rbin:CreateRule",
    "rbin:DeleteRule",
    "rbin:UntagResource",
    "sumerian:*",
    "sumerian:ViewRelease",
    "elasticache:*",
    "elasticache:CreateCacheSubnetGroup",
    "elasticache:ModifyCacheCluster",
    "elasticache:RebootCacheCluster",
    "elasticache:CreateReplicationGroup",
    "elasticache:ModifyReplicationGroupShardConfiguration",
    "elasticache:CopySnapshot",
    "elasticache:CompleteMigration",
    "elasticache:ModifyCacheParameterGroup",
    "elasticache:AddTagsToResource",
    "elasticache:CreateCacheSecurityGroup",
    "elasticache:BatchApplyUpdateAction",
    "elasticache:DescribeCacheSubnetGroups",
    "elasticache:DeleteUserGroup",
    "elasticache:DeleteReplicationGroup",
    "elasticache:DescribeCacheSecurityGroups",
    "elasticache:CreateUserGroup",
    "elasticache:DeleteGlobalReplicationGroup",
    "elasticache:ModifyReplicationGroup",
    "elasticache:ModifyUser",
    "elasticache:DeleteCacheParameterGroup",
    "elasticache:BatchStopUpdateAction",
    "elasticache:DisassociateGlobalReplicationGroup",
    "elasticache:DescribeCacheParameters",
    "elasticache:ListTagsForResource",
    "elasticache:DeleteUser",
    "elasticache:ModifyGlobalReplicationGroup",
    "elasticache:ModifyCacheSubnetGroup",
    "elasticache:DecreaseReplicaCount",
    "elasticache:DescribeUserGroups",
    "elasticache:DescribeReservedCacheNodes",
    "elasticache:DescribeSnapshots",
    "elasticache:DescribeReplicationGroups",
    "elasticache:StartMigration",
    "elasticache:DescribeCacheParameterGroups",
    "elasticache:DeleteSnapshot",
    "elasticache:CreateCacheParameterGroup",
    "elasticache:RemoveTagsFromResource",
    "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache:DeleteCacheSecurityGroup",
    "elasticache:DescribeUpdateActions",
    "elasticache:DeleteCacheCluster",
    "elasticache:DeleteCacheSubnetGroup",
    "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
    "elasticache:CreateGlobalReplicationGroup",
    "elasticache:ListAllowedNodeTypeModifications",
    "elasticache:PurchaseReservedCacheNodesOffering",
    "elasticache:CreateSnapshot",
    "elasticache:CreateCacheCluster",
    "elasticache:RevokeCacheSecurityGroupIngress",
    "elasticache:ModifyUserGroup",
    "elasticache:DescribeUsers",
    "elasticache:TestFailover",
    "elasticache:DescribeGlobalReplicationGroups",
    "elasticache:CreateUser",
    "elasticache:AuthorizeCacheSecurityGroupIngress",
    "elasticache:ResetCacheParameterGroup",
    "elasticache:DescribeCacheClusters",
    "elasticache:IncreaseReplicaCount",
    "elasticache:FailoverGlobalReplicationGroup",
    "elasticache:RebalanceSlotsInGlobalReplicationGroup",
    "emr-containers:*",
    "emr-containers:DescribeVirtualCluster",
    "emr-containers:StartJobRun",
    "emr-containers:DescribeManagedEndpoint",
    "emr-containers:UntagResource",
    "emr-containers:DescribeJobRun",
    "emr-containers:ListManagedEndpoints",
    "emr-containers:TagResource",
    "emr-containers:CancelJobRun",
    "emr-containers:ListTagsForResource",
    "emr-containers:ListJobRuns",
    "emr-containers:DeleteVirtualCluster",
    "emr-containers:DeleteManagedEndpoint",
    "emr-containers:CreateManagedEndpoint",
    "shield:*",
    "shield:DeleteProtectionGroup",
    "shield:DescribeProtectionGroup",
    "shield:DisassociateHealthCheck",
    "shield:TagResource",
    "shield:ListTagsForResource",
    "shield:DeleteProtection",
    "shield:DescribeProtection",
    "shield:UntagResource",
    "shield:AssociateHealthCheck",
    "shield:UpdateProtectionGroup",
    "shield:ListResourcesInProtectionGroup",
    "shield:DescribeAttack",
    "identity-sync:*",
    "identity-sync:GetSyncTarget",
    "identity-sync:DeleteSyncFilter",
    "identity-sync:DeleteSyncTarget",
    "identity-sync:UpdateSyncTarget",
    "identity-sync:DeleteSyncProfile",
    "identity-sync:StartSync",
    "identity-sync:CreateSyncTarget",
    "identity-sync:ListSyncFilters",
    "identity-sync:CreateSyncFilter",
    "identity-sync:GetSyncProfile",
    "identity-sync:StopSync",
    "trustedadvisor:*",
    "trustedadvisor:DescribeCheckRefreshStatuses",
    "trustedadvisor:DescribeCheckSummaries",
    "trustedadvisor:ExcludeCheckItems",
    "trustedadvisor:RefreshCheck",
    "trustedadvisor:IncludeCheckItems",
    "trustedadvisor:DescribeCheckItems",
    "deepracer:*",
    "deepracer:TagResource",
    "deepracer:CloneReinforcementLearningModel",
    "deepracer:CreateLeaderboardSubmission",
    "deepracer:AddLeaderboardAccessPermission",
    "deepracer:StopEvaluation",
    "deepracer:ListLeaderboardSubmissions",
    "deepracer:GetAssetUrl",
    "deepracer:EditLeaderboard",
    "deepracer:ListPrivateLeaderboardParticipants",
    "deepracer:RemoveLeaderboardAccessPermission",
    "deepracer:PerformLeaderboardOperation",
    "deepracer:StopTrainingReinforcementLearningModel",
    "deepracer:GetModel",
    "deepracer:ListEvaluations",
    "deepracer:UntagResource",
    "deepracer:ListTagsForResource",
    "deepracer:GetTrainingJob",
    "deepracer:GetRankedUserSubmission",
    "deepracer:GetPrivateLeaderboard",
    "deepracer:GetEvaluation",
    "deepracer:ListTrainingJobs",
    "deepracer:GetCar",
    "deepracer:GetLatestUserSubmission",
    "deepracer:UpdateCar",
    "deepracer:GetLeaderboard",
    "deepracer:GetTrack",
    "deepracer:CreateReinforcementLearningModel",
    "deepracer:DeleteModel",
    "deepracer:CreateLeaderboardAccessToken",
    "deepracer:StartEvaluation",
    "deepracer:DeleteLeaderboard",
    "budgets:*",
    "budgets:ViewBudget",
    "budgets:DescribeBudgetActionsForBudget",
    "budgets:ExecuteBudgetAction",
    "budgets:UpdateBudgetAction",
    "budgets:DeleteBudgetAction",
    "budgets:DescribeBudgetAction",
    "budgets:ModifyBudget",
    "budgets:DescribeBudgetActionHistories",
    "budgets:CreateBudgetAction",
    "airflow:*",
    "airflow:CreateEnvironment",
    "airflow:UpdateEnvironment",
    "airflow:ListTagsForResource",
    "airflow:CreateWebLoginToken",
    "airflow:TagResource",
    "airflow:CreateCliToken",
    "airflow:UntagResource",
    "airflow:DeleteEnvironment",
    "airflow:GetEnvironment",
    "airflow:PublishMetrics",
    "mq:*",
    "mq:ListUsers",
    "mq:UpdateUser",
    "mq:DeleteTags",
    "mq:CreateTags",
    "mq:DescribeUser",
    "mq:DeleteBroker",
    "mq:UpdateBroker",
    "mq:DescribeConfigurationRevision",
    "mq:DescribeConfiguration",
    "mq:ListConfigurationRevisions",
    "mq:ListTags",
    "mq:CreateUser",
    "mq:DeleteUser",
    "mq:RebootBroker",
    "mq:UpdateConfiguration",
    "mq:DescribeBroker",
    "mobiletargeting:*",
    "mobiletargeting:UpdateSmsTemplate",
    "mobiletargeting:UpdateVoiceTemplate",
    "mobiletargeting:UpdateVoiceChannel",
    "mobiletargeting:SendMessages",
    "mobiletargeting:DeleteAdmChannel",
    "mobiletargeting:UpdateEndpointsBatch",
    "mobiletargeting:GetCampaign",
    "mobiletargeting:GetInAppTemplate",
    "mobiletargeting:DeleteApnsSandboxChannel",
    "mobiletargeting:GetVoiceTemplate",
    "mobiletargeting:GetChannels",
    "mobiletargeting:UpdateBaiduChannel",
    "mobiletargeting:DeleteCampaign",
    "mobiletargeting:UpdateSmsChannel",
    "mobiletargeting:UpdateInAppTemplate",
    "mobiletargeting:UpdateApnsSandboxChannel",
    "mobiletargeting:DeleteApnsVoipSandboxChannel",
    "mobiletargeting:GetApnsChannel",
    "mobiletargeting:GetCampaignDateRangeKpi",
    "mobiletargeting:DeleteApp",
    "mobiletargeting:UntagResource",
    "mobiletargeting:GetSegment",
    "mobiletargeting:UpdatePushTemplate",
    "mobiletargeting:RemoveAttributes",
    "mobiletargeting:GetApplicationSettings",
    "mobiletargeting:VerifyOTPMessage",
    "mobiletargeting:DeleteBaiduChannel",
    "mobiletargeting:GetEmailTemplate",
    "mobiletargeting:CreateJourney",
    "mobiletargeting:GetAdmChannel",
    "mobiletargeting:UpdateApplicationSettings",
    "mobiletargeting:GetApnsVoipChannel",
    "mobiletargeting:GetImportJob",
    "mobiletargeting:CreateCampaign",
    "mobiletargeting:UpdateEmailTemplate",
    "mobiletargeting:DeleteGcmChannel",
    "mobiletargeting:UpdateGcmChannel",
    "mobiletargeting:UpdateApnsVoipSandboxChannel",
    "mobiletargeting:UpdateEndpoint",
    "mobiletargeting:GetSegmentVersion",
    "mobiletargeting:UpdateRecommenderConfiguration",
    "mobiletargeting:GetJourneyExecutionMetrics",
    "mobiletargeting:DeleteEmailChannel",
    "mobiletargeting:PhoneNumberValidate",
    "mobiletargeting:GetPushTemplate",
    "mobiletargeting:DeleteVoiceChannel",
    "mobiletargeting:GetGcmChannel",
    "mobiletargeting:GetApp",
    "mobiletargeting:GetApnsSandboxChannel",
    "mobiletargeting:GetSegmentExportJobs",
    "mobiletargeting:ListTagsForResource",
    "mobiletargeting:DeleteInAppTemplate",
    "mobiletargeting:GetSmsChannel",
    "mobiletargeting:GetApnsVoipSandboxChannel",
    "mobiletargeting:CreateSegment",
    "mobiletargeting:GetJourneyDateRangeKpi",
    "mobiletargeting:GetApplicationDateRangeKpi",
    "mobiletargeting:DeleteJourney",
    "mobiletargeting:CreateExportJob",
    "mobiletargeting:GetRecommenderConfiguration",
    "mobiletargeting:GetExportJobs",
    "mobiletargeting:GetCampaigns",
    "mobiletargeting:DeleteApnsChannel",
    "mobiletargeting:GetSegmentVersions",
    "mobiletargeting:GetEndpoint",
    "mobiletargeting:GetInAppMessages",
    "mobiletargeting:UpdateTemplateActiveVersion",
    "mobiletargeting:DeleteSmsChannel",
    "mobiletargeting:GetSmsTemplate",
    "mobiletargeting:GetCampaignVersions",
    "mobiletargeting:UpdateAdmChannel",
    "mobiletargeting:DeleteEmailTemplate",
    "mobiletargeting:CreateImportJob",
    "mobiletargeting:UpdateJourneyState",
    "mobiletargeting:ListTemplates",
    "mobiletargeting:DeleteVoiceTemplate",
    "mobiletargeting:UpdateJourney",
    "mobiletargeting:GetEventStream",
    "mobiletargeting:GetCampaignVersion",
    "mobiletargeting:PutEventStream",
    "mobiletargeting:UpdateEmailChannel",
    "mobiletargeting:GetSegments",
    "mobiletargeting:UpdateApnsChannel",
    "mobiletargeting:TagResource",
    "mobiletargeting:DeleteEndpoint",
    "mobiletargeting:GetJourneyExecutionActivityMetrics",
    "mobiletargeting:DeleteEventStream",
    "mobiletargeting:DeletePushTemplate",
    "mobiletargeting:DeleteApnsVoipChannel",
    "mobiletargeting:GetBaiduChannel",
    "mobiletargeting:GetCampaignActivities",
    "mobiletargeting:SendUsersMessages",
    "mobiletargeting:DeleteRecommenderConfiguration",
    "mobiletargeting:GetExportJob",
    "mobiletargeting:GetUserEndpoints",
    "mobiletargeting:ListTemplateVersions",
    "mobiletargeting:GetEmailChannel",
    "mobiletargeting:DeleteSegment",
    "mobiletargeting:GetImportJobs",
    "mobiletargeting:SendOTPMessage",
    "mobiletargeting:ListJourneys",
    "mobiletargeting:UpdateApnsVoipChannel",
    "mobiletargeting:GetSegmentImportJobs",
    "mobiletargeting:DeleteSmsTemplate",
    "mobiletargeting:PutEvents",
    "mobiletargeting:UpdateCampaign",
    "mobiletargeting:UpdateSegment",
    "mobiletargeting:GetJourney",
    "mobiletargeting:DeleteUserEndpoints",
    "mobiletargeting:GetVoiceChannel",
    "mobiletargeting:GetApps",
    "amplifyuibuilder:*",
    "amplifyuibuilder:UntagResource",
    "amplifyuibuilder:TagResource",
    "amplifyuibuilder:UpdateTheme",
    "amplifyuibuilder:GetTheme",
    "amplifyuibuilder:ListTagsForResource",
    "amplifyuibuilder:DeleteComponent",
    "amplifyuibuilder:GetComponent",
    "amplifyuibuilder:DeleteTheme",
    "amplifyuibuilder:UpdateComponent",
    "lookoutequipment:*",
    "lookoutequipment:DescribeLabelGroup",
    "lookoutequipment:ListInferenceExecutions",
    "lookoutequipment:DeleteLabelGroup",
    "lookoutequipment:StartDataIngestionJob",
    "lookoutequipment:UntagResource",
    "lookoutequipment:DescribeDataset",
    "lookoutequipment:DeleteModel",
    "lookoutequipment:CreateModel",
    "lookoutequipment:DescribeInferenceScheduler",
    "lookoutequipment:UpdateLabelGroup",
    "lookoutequipment:ListSensorStatistics",
    "lookoutequipment:ListTagsForResource",
    "lookoutequipment:ListInferenceEvents",
    "lookoutequipment:DeleteDataset",
    "lookoutequipment:StopInferenceScheduler",
    "lookoutequipment:CreateLabelGroup",
    "lookoutequipment:DeleteInferenceScheduler",
    "lookoutequipment:ListDataIngestionJobs",
    "lookoutequipment:DescribeModel",
    "lookoutequipment:CreateLabel",
    "lookoutequipment:CreateDataset",
    "lookoutequipment:DeleteLabel",
    "lookoutequipment:ListLabels",
    "lookoutequipment:Describelabel",
    "lookoutequipment:ListLabelGroups",
    "lookoutequipment:TagResource",
    "lookoutequipment:CreateInferenceScheduler",
    "lookoutequipment:StartInferenceScheduler",
    "lookoutequipment:UpdateInferenceScheduler",
    "ds:*",
    "ds:CreateAlias",
    "ds:AddTagsToResource",
    "ds:UpdateConditionalForwarder",
    "ds:CreateLogSubscription",
    "ds:DisableClientAuthentication",
    "ds:RejectSharedDirectory",
    "ds:DeleteDirectory",
    "ds:GetSnapshotLimits",
    "ds:AcceptSharedDirectory",
    "ds:StartSchemaExtension",
    "ds:RemoveIpRoutes",
    "ds:UpdateTrust",
    "ds:EnableSso",
    "ds:EnableLDAPS",
    "ds:UpdateNumberOfDomainControllers",
    "ds:DeleteLogSubscription",
    "ds:GetAuthorizedApplicationDetails",
    "ds:UpdateRadius",
    "ds:DescribeUpdateDirectory",
    "ds:DeregisterEventTopic",
    "ds:AddIpRoutes",
    "ds:DisableSso",
    "ds:ListCertificates",
    "ds:DeleteConditionalForwarder",
    "ds:RemoveRegion",
    "ds:UpdateDirectorySetup",
    "ds:ShareDirectory",
    "ds:ListIpRoutes",
    "ds:CreateComputer",
    "ds:EnableRadius",
    "ds:VerifyTrust",
    "ds:DescribeEventTopics",
    "ds:AuthorizeApplication",
    "ds:DescribeDomainControllers",
    "ds:DisableRadius",
    "ds:CreateTrust",
    "ds:RegisterEventTopic",
    "ds:DescribeConditionalForwarders",
    "ds:UpdateSettings",
    "ds:UnauthorizeApplication",
    "ds:ListAuthorizedApplications",
    "ds:CancelSchemaExtension",
    "ds:DescribeSettings",
    "ds:CreateSnapshot",
    "ds:EnableClientAuthentication",
    "ds:RegisterCertificate",
    "ds:ListTagsForResource",
    "ds:DescribeClientAuthenticationSettings",
    "ds:DescribeLDAPSSettings",
    "ds:DescribeSharedDirectories",
    "ds:RemoveTagsFromResource",
    "ds:RestoreFromSnapshot",
    "ds:DisableLDAPS",
    "ds:UnshareDirectory",
    "ds:ResetUserPassword",
    "ds:DeregisterCertificate",
    "ds:ListSchemaExtensions",
    "ds:DescribeRegions",
    "ds:AddRegion",
    "ds:CreateConditionalForwarder",
    "ds:DescribeCertificate",
    "ds:DeleteSnapshot",
    "ds:DeleteTrust",
    "iotanalytics:*",
    "iotanalytics:CreateChannel",
    "iotanalytics:DeleteDatasetContent",
    "iotanalytics:CreateDataset",
    "iotanalytics:StartPipelineReprocessing",
    "iotanalytics:DeleteDatastore",
    "iotanalytics:DeleteChannel",
    "iotanalytics:DeletePipeline",
    "iotanalytics:CreateDatasetContent",
    "iotanalytics:DescribePipeline",
    "iotanalytics:CreateDatastore",
    "iotanalytics:CreatePipeline",
    "iotanalytics:DescribeDataset",
    "iotanalytics:TagResource",
    "iotanalytics:BatchPutMessage",
    "iotanalytics:UpdateChannel",
    "iotanalytics:ListTagsForResource",
    "iotanalytics:UpdatePipeline",
    "iotanalytics:UpdateDatastore",
    "iotanalytics:UpdateDataset",
    "iotanalytics:UntagResource",
    "iotanalytics:ListDatasetContents",
    "iotanalytics:SampleChannelData",
    "iotanalytics:DescribeChannel",
    "iotanalytics:GetDatasetContent",
    "iotanalytics:CancelPipelineReprocessing",
    "iotanalytics:DescribeDatastore",
    "iotanalytics:DeleteDataset",
    "iam:*",
    "iam:DeleteRolePermissionsBoundary",
    "iam:GetGroupPolicy",
    "iam:UpdateLoginProfile",
    "iam:DetachRolePolicy",
    "iam:GetPolicyVersion",
    "iam:UpdateServiceSpecificCredential",
    "iam:AttachRolePolicy",
    "iam:CreatePolicyVersion",
    "iam:UntagRole",
    "iam:UpdateUser",
    "iam:GetGroup",
    "iam:DeleteSSHPublicKey",
    "iam:DeleteSigningCertificate",
    "iam:UpdateSigningCertificate",
    "iam:ListSSHPublicKeys",
    "iam:UntagSAMLProvider",
    "iam:DetachUserPolicy",
    "iam:ListUserTags",
    "iam:DeleteLoginProfile",
    "iam:ListAttachedRolePolicies",
    "iam:DeleteVirtualMFADevice",
    "iam:DeletePolicy",
    "iam:CreateLoginProfile",
    "iam:DeleteRole",
    "iam:DeleteServiceLinkedRole",
    "iam:AddClientIDToOpenIDConnectProvider",
    "iam:TagPolicy",
    "iam:ListRoleTags",
    "iam:PutRolePermissionsBoundary",
    "iam:AttachGroupPolicy",
    "iam:UpdateAccessKey",
    "iam:DeleteSAMLProvider",
    "iam:CreateOpenIDConnectProvider",
    "iam:SimulatePrincipalPolicy",
    "iam:ListAttachedGroupPolicies",
    "iam:UpdateRole",
    "iam:DeleteGroup",
    "iam:DeleteInstanceProfile",
    "iam:GetRolePolicy",
    "iam:CreateVirtualMFADevice",
    "iam:ListUserPolicies",
    "iam:TagMFADevice",
    "iam:TagRole",
    "iam:TagOpenIDConnectProvider",
    "iam:ListEntitiesForPolicy",
    "iam:DeleteUser",
    "iam:ListOpenIDConnectProviderTags",
    "iam:ListInstanceProfiles",
    "iam:UntagOpenIDConnectProvider",
    "iam:CreateServiceSpecificCredential",
    "iam:RemoveClientIDFromOpenIDConnectProvider",
    "iam:ListAccessKeys",
    "iam:CreateAccessKey",
    "iam:UpdateRoleDescription",
    "iam:SetDefaultPolicyVersion",
    "iam:CreateRole",
    "iam:TagSAMLProvider",
    "iam:DeleteUserPermissionsBoundary",
    "iam:GetUserPolicy",
    "iam:CreateServiceLinkedRole",
    "iam:PutUserPermissionsBoundary",
    "iam:ListGroupPolicies",
    "iam:UpdateSSHPublicKey",
    "iam:DeleteServiceSpecificCredential",
    "iam:ListPoliciesGrantingServiceAccess",
    "iam:GetServerCertificate",
    "iam:ResetServiceSpecificCredential",
    "iam:GenerateServiceLastAccessedDetails",
    "iam:TagUser",
    "iam:ListMFADevices",
    "iam:UpdateOpenIDConnectProviderThumbprint",
    "iam:UpdateServerCertificate",
    "iam:GetAccessKeyLastUsed",
    "iam:PassRole",
    "iam:ListPolicyTags",
    "iam:GetOpenIDConnectProvider",
    "iam:RemoveUserFromGroup",
    "iam:ListInstanceProfileTags",
    "iam:DeleteServerCertificate",
    "iam:CreateUser",
    "iam:ListRolePolicies",
    "iam:PutRolePolicy",
    "iam:CreateSAMLProvider",
    "iam:GetUser",
    "iam:TagInstanceProfile",
    "iam:AddRoleToInstanceProfile",
    "iam:DeactivateMFADevice",
    "iam:UpdateSAMLProvider",
    "iam:PutUserPolicy",
    "iam:UploadSSHPublicKey",
    "iam:DeleteAccessKey",
    "iam:DeleteOpenIDConnectProvider",
    "iam:CreateGroup",
    "iam:ListGroupsForUser",
    "iam:DeletePolicyVersion",
    "iam:AddUserToGroup",
    "iam:ListAttachedUserPolicies",
    "iam:EnableMFADevice",
    "iam:ListServerCertificateTags",
    "iam:TagServerCertificate",
    "iam:ListSigningCertificates",
    "iam:GetSAMLProvider",
    "iam:UntagServerCertificate",
    "iam:DetachGroupPolicy",
    "iam:ChangePassword",
    "iam:GetSSHPublicKey",
    "iam:UploadSigningCertificate",
    "iam:GetInstanceProfile",
    "iam:RemoveRoleFromInstanceProfile",
    "iam:ListInstanceProfilesForRole",
    "iam:ListSAMLProviderTags",
    "iam:ListServiceSpecificCredentials",
    "iam:UntagInstanceProfile",
    "iam:GetServiceLinkedRoleDeletionStatus",
    "iam:PutGroupPolicy",
    "iam:GetPolicy",
    "iam:DeleteRolePolicy",
    "iam:GetLoginProfile",
    "iam:UpdateGroup",
    "iam:ListPolicyVersions",
    "iam:GenerateOrganizationsAccessReport",
    "iam:CreatePolicy",
    "iam:UntagPolicy",
    "iam:AttachUserPolicy",
    "iam:CreateInstanceProfile",
    "iam:UntagMFADevice",
    "iam:DeleteUserPolicy",
    "iam:DeleteGroupPolicy",
    "iam:ListMFADeviceTags",
    "iam:GetRole",
    "iam:UploadServerCertificate",
    "iam:ResyncMFADevice",
    "iam:UpdateAssumeRolePolicy",
    "iam:UntagUser",
    "iam:GetContextKeysForPrincipalPolicy",
    "auditmanager:*",
    "auditmanager:GetEvidenceByEvidenceFolder",
    "auditmanager:GetControl",
    "auditmanager:StartAssessmentFrameworkShare",
    "auditmanager:BatchDeleteDelegationByAssessment",
    "auditmanager:CreateAssessmentReport",
    "auditmanager:UpdateAssessmentStatus",
    "auditmanager:GetEvidenceFoldersByAssessment",
    "auditmanager:ListTagsForResource",
    "auditmanager:GetAssessmentFramework",
    "auditmanager:DisassociateAssessmentReportEvidenceFolder",
    "auditmanager:DeleteAssessmentReport",
    "auditmanager:UpdateAssessment",
    "auditmanager:UntagResource",
    "auditmanager:GetEvidenceFoldersByAssessmentControl",
    "auditmanager:GetEvidence",
    "auditmanager:GetEvidenceFolder",
    "auditmanager:DeleteControl",
    "auditmanager:UpdateAssessmentControlSetStatus",
    "auditmanager:GetAssessmentReportUrl",
    "auditmanager:UpdateAssessmentFramework",
    "auditmanager:GetAssessment",
    "auditmanager:UpdateAssessmentControl",
    "auditmanager:GetChangeLogs",
    "auditmanager:BatchDisassociateAssessmentReportEvidence",
    "auditmanager:UpdateControl",
    "auditmanager:DeleteAssessmentFramework",
    "auditmanager:AssociateAssessmentReportEvidenceFolder",
    "auditmanager:DeleteAssessment",
    "auditmanager:BatchImportEvidenceToAssessmentControl",
    "auditmanager:BatchAssociateAssessmentReportEvidence",
    "auditmanager:TagResource",
    "auditmanager:BatchCreateDelegationByAssessment",
    "s3-object-lambda:*",
    "s3-object-lambda:PutObjectVersionTagging",
    "s3-object-lambda:GetObjectAcl",
    "s3-object-lambda:PutObjectVersionAcl",
    "s3-object-lambda:ListBucketVersions",
    "s3-object-lambda:GetObjectRetention",
    "s3-object-lambda:GetObjectTagging",
    "s3-object-lambda:ListMultipartUploadParts",
    "s3-object-lambda:DeleteObjectTagging",
    "s3-object-lambda:WriteGetObjectResponse",
    "s3-object-lambda:GetObjectVersionTagging",
    "s3-object-lambda:PutObjectTagging",
    "s3-object-lambda:GetObject",
    "s3-object-lambda:GetObjectVersionAcl",
    "s3-object-lambda:PutObjectLegalHold",
    "s3-object-lambda:PutObject",
    "s3-object-lambda:GetObjectVersion",
    "s3-object-lambda:AbortMultipartUpload",
    "s3-object-lambda:ListBucketMultipartUploads",
    "s3-object-lambda:DeleteObject",
    "s3-object-lambda:ListBucket",
    "s3-object-lambda:PutObjectRetention",
    "s3-object-lambda:PutObjectAcl",
    "s3-object-lambda:RestoreObject",
    "s3-object-lambda:DeleteObjectVersion",
    "s3-object-lambda:GetObjectLegalHold",
    "s3-object-lambda:DeleteObjectVersionTagging",
    "elemental-activations:*",
    "elemental-activations:TagResource",
    "elemental-activations:GetActivation",
    "elemental-activations:UntagResource",
    "elemental-activations:ListTagsForResource",
    "appstream:*",
    "appstream:CreateUpdatedImage",
    "appstream:ListEntitledApplications",
    "appstream:CreateStreamingURL",
    "appstream:DescribeAppBlocks",
    "appstream:DescribeImagePermissions",
    "appstream:DeleteApplication",
    "appstream:DeleteEntitlement",
    "appstream:DisassociateApplicationFleet",
    "appstream:DeleteImageBuilder",
    "appstream:ListAssociatedFleets",
    "appstream:AssociateApplicationFleet",
    "appstream:DisassociateFleet",
    "appstream:UpdateApplication",
    "appstream:CreateImageBuilderStreamingURL",
    "appstream:DescribeUserStackAssociations",
    "appstream:DescribeEntitlements",
    "appstream:DescribeImageBuilders",
    "appstream:CreateApplication",
    "appstream:DeleteAppBlock",
    "appstream:TagResource",
    "appstream:BatchDisassociateUserStack",
    "appstream:CreateImageBuilder",
    "appstream:BatchAssociateUserStack",
    "appstream:StopFleet",
    "appstream:StartFleet",
    "appstream:CreateEntitlement",
    "appstream:ListAssociatedStacks",
    "appstream:DeleteImage",
    "appstream:DescribeStacks",
    "appstream:CreateStack",
    "appstream:StopImageBuilder",
    "appstream:DeleteImagePermissions",
    "appstream:DescribeFleets",
    "appstream:DescribeImages",
    "appstream:UpdateFleet",
    "appstream:CreateFleet",
    "appstream:Stream",
    "appstream:UntagResource",
    "appstream:UpdateStack",
    "appstream:AssociateApplicationToEntitlement",
    "appstream:AssociateFleet",
    "appstream:DescribeSessions",
    "appstream:DeleteFleet",
    "appstream:DisassociateApplicationFromEntitlement",
    "appstream:DeleteStack",
    "appstream:UpdateEntitlement",
    "appstream:DescribeApplications",
    "appstream:StartImageBuilder",
    "appstream:UpdateImagePermissions",
    "appstream:DescribeApplicationFleetAssociations",
    "appstream:CopyImage",
    "kafkaconnect:*",
    "kafkaconnect:DescribeWorkerConfiguration",
    "kafkaconnect:DescribeCustomPlugin",
    "kafkaconnect:DescribeConnector",
    "cloudsearch:*",
    "cloudsearch:document",
    "cloudsearch:DescribeAnalysisSchemes",
    "cloudsearch:UpdateAvailabilityOptions",
    "cloudsearch:DefineExpression",
    "cloudsearch:AddTags",
    "cloudsearch:DescribeAvailabilityOptions",
    "cloudsearch:DescribeDomainEndpointOptions",
    "cloudsearch:RemoveTags",
    "cloudsearch:DefineAnalysisScheme",
    "cloudsearch:DeleteAnalysisScheme",
    "cloudsearch:DescribeScalingParameters",
    "cloudsearch:IndexDocuments",
    "cloudsearch:DeleteDomain",
    "cloudsearch:DescribeSuggesters",
    "cloudsearch:search",
    "cloudsearch:DescribeDomains",
    "cloudsearch:DeleteExpression",
    "cloudsearch:DescribeExpressions",
    "cloudsearch:suggest",
    "cloudsearch:ListDomainNames",
    "cloudsearch:DescribeIndexFields",
    "cloudsearch:DeleteSuggester",
    "cloudsearch:ListTags",
    "cloudsearch:UpdateServiceAccessPolicies",
    "cloudsearch:DefineSuggester",
    "cloudsearch:DescribeServiceAccessPolicies",
    "cloudsearch:DeleteIndexField",
    "cloudsearch:DefineIndexField",
    "cloudsearch:BuildSuggesters",
    "cloudsearch:UpdateDomainEndpointOptions",
    "cloudsearch:CreateDomain",
    "cloudsearch:UpdateScalingParameters",
    "mediapackage-vod:*",
    "mediapackage-vod:DescribePackagingGroup",
    "mediapackage-vod:DeletePackagingConfiguration",
    "mediapackage-vod:DeleteAsset",
    "mediapackage-vod:DescribeAsset",
    "mediapackage-vod:DeletePackagingGroup",
    "mediapackage-vod:ConfigureLogs",
    "mediapackage-vod:UpdatePackagingGroup",
    "mediapackage-vod:TagResource",
    "mediapackage-vod:DescribePackagingConfiguration",
    "mediapackage-vod:UntagResource",
    "mediapackage-vod:ListTagsForResource",
    "mgh:*",
    "mgh:AssociateCreatedArtifact",
    "mgh:ImportMigrationTask",
    "mgh:ListDiscoveredResources",
    "mgh:AssociateDiscoveredResource",
    "mgh:DeleteProgressUpdateStream",
    "mgh:ListCreatedArtifacts",
    "mgh:DisassociateCreatedArtifact",
    "mgh:NotifyMigrationTaskState",
    "mgh:CreateProgressUpdateStream",
    "mgh:PutResourceAttributes",
    "mgh:DisassociateDiscoveredResource",
    "mgh:DescribeMigrationTask",
    "kafka-cluster:*",
    "kafka-cluster:DescribeCluster",
    "kafka-cluster:ReadData",
    "kafka-cluster:WriteDataIdempotently",
    "kafka-cluster:DescribeTransactionalId",
    "kafka-cluster:DescribeClusterDynamicConfiguration",
    "kafka-cluster:DeleteGroup",
    "kafka-cluster:AlterCluster",
    "kafka-cluster:DescribeGroup",
    "kafka-cluster:AlterTopic",
    "kafka-cluster:AlterTopicDynamicConfiguration",
    "kafka-cluster:WriteData",
    "kafka-cluster:AlterGroup",
    "kafka-cluster:CreateTopic",
    "kafka-cluster:DeleteTopic",
    "kafka-cluster:DescribeTopic",
    "kafka-cluster:AlterTransactionalId",
    "kafka-cluster:Connect",
    "kafka-cluster:DescribeTopicDynamicConfiguration",
    "kafka-cluster:AlterClusterDynamicConfiguration",
    "lex:*",
    "lex:DeleteBotVersion",
    "lex:UntagResource",
    "lex:PutBot",
    "lex:GetBotChannelAssociations",
    "lex:GetSlotTypeVersions",
    "lex:PutSession",
    "lex:DeleteSlotTypeVersion",
    "lex:DeleteSession",
    "lex:DeleteBot",
    "lex:DeleteSlotType",
    "lex:ListTagsForResource",
    "lex:TagResource",
    "lex:DeleteUtterances",
    "lex:GetSession",
    "lex:PostText",
    "lex:GetIntentVersions",
    "lex:GetSlotType",
    "lex:PostContent",
    "lex:GetExport",
    "lex:GetBotVersions",
    "lex:DeleteIntentVersion",
    "lex:GetBotAlias",
    "lex:GetUtterancesView",
    "lex:CreateSlotTypeVersion",
    "lex:GetIntent",
    "lex:StartMigration",
    "lex:DeleteBotChannelAssociation",
    "lex:GetBot",
    "lex:PutIntent",
    "lex:GetBotChannelAssociation",
    "lex:DeleteIntent",
    "lex:PutBotAlias",
    "lex:PutSlotType",
    "lex:CreateBotVersion",
    "lex:CreateIntentVersion",
    "lex:DeleteBotAlias",
    "backup:*",
    "backup:DescribeRecoveryPoint",
    "backup:CreateBackupPlan",
    "backup:UpdateFramework",
    "backup:DeleteBackupVault",
    "backup:DisassociateRecoveryPoint",
    "backup:DescribeReportPlan",
    "backup:GetBackupPlan",
    "backup:StartReportJob",
    "backup:DeleteFramework",
    "backup:DeleteBackupVaultNotifications",
    "backup:GetBackupSelection",
    "backup:CreateBackupSelection",
    "backup:UpdateBackupPlan",
    "backup:DeleteReportPlan",
    "backup:CreateFramework",
    "backup:CreateReportPlan",
    "backup:StartRestoreJob",
    "backup:GetBackupVaultAccessPolicy",
    "backup:ListRecoveryPointsByBackupVault",
    "backup:CreateBackupVault",
    "backup:UpdateRecoveryPointLifecycle",
    "backup:DeleteBackupSelection",
    "backup:DeleteBackupVaultAccessPolicy",
    "backup:DescribeBackupVault",
    "backup:GetBackupVaultNotifications",
    "backup:StartBackupJob",
    "backup:StartCopyJob",
    "backup:TagResource",
    "backup:PutBackupVaultAccessPolicy",
    "backup:DeleteRecoveryPoint",
    "backup:GetRecoveryPointRestoreMetadata",
    "backup:PutBackupVaultLockConfiguration",
    "backup:DescribeFramework",
    "backup:DeleteBackupVaultLockConfiguration",
    "backup:UntagResource",
    "backup:PutBackupVaultNotifications",
    "backup:DeleteBackupPlan",
    "backup:ListBackupPlanVersions",
    "backup:ListTags",
    "backup:UpdateReportPlan",
    "backup:ListBackupSelections",
    "transfer:*",
    "transfer:UpdateHostKey",
    "transfer:StartFileTransfer",
    "transfer:ImportSshPublicKey",
    "transfer:DescribeCertificate",
    "transfer:UpdateProfile",
    "transfer:CreateUser",
    "transfer:ListHostKeys",
    "transfer:UpdateServer",
    "transfer:SendWorkflowStepState",
    "transfer:DeleteProfile",
    "transfer:DescribeWorkflow",
    "transfer:DeleteSshPublicKey",
    "transfer:TagResource",
    "transfer:StartServer",
    "transfer:DescribeHostKey",
    "transfer:CreateAgreement",
    "transfer:DescribeExecution",
    "transfer:DeleteUser",
    "transfer:DeleteServer",
    "transfer:UpdateAgreement",
    "transfer:CreateAccess",
    "transfer:UpdateCertificate",
    "transfer:DescribeServer",
    "transfer:UpdateConnector",
    "transfer:TestIdentityProvider",
    "transfer:DescribeAccess",
    "transfer:ListAgreements",
    "transfer:DescribeAgreement",
    "transfer:DescribeUser",
    "transfer:ListUsers",
    "transfer:DeleteAgreement",
    "transfer:UntagResource",
    "transfer:StopServer",
    "transfer:DeleteWorkflow",
    "transfer:DescribeConnector",
    "transfer:ListTagsForResource",
    "transfer:ListExecutions",
    "transfer:DeleteConnector",
    "transfer:DescribeProfile",
    "transfer:ListAccesses",
    "transfer:UpdateUser",
    "transfer:ImportHostKey",
    "transfer:DeleteCertificate",
    "transfer:DeleteAccess",
    "transfer:DeleteHostKey",
    "chime:*",
    "chime:AssociateChannelFlow",
    "chime:GetChannelMessage",
    "chime:UpdateAppInstance",
    "chime:ListChannelMessages",
    "chime:GetChannelMessageStatus",
    "chime:BatchCreateAttendee",
    "chime:CreateChannelMembership",
    "chime:PutAppInstanceRetentionSettings",
    "chime:DeleteAppInstanceStreamingConfigurations",
    "chime:DeleteAppInstance",
    "chime:TagMeeting",
    "chime:ListChannelsModeratedByAppInstanceUser",
    "chime:DescribeAppInstance",
    "chime:GetAppInstanceStreamingConfigurations",
    "chime:ListAppInstances",
    "chime:ListChannelBans",
    "chime:DeleteChannelFlow",
    "chime:DeleteChannelModerator",
    "chime:ListMeetingTags",
    "chime:DescribeAppInstanceAdmin",
    "chime:CreateAttendee",
    "chime:DescribeChannelModeratedByAppInstanceUser",
    "chime:GetAppInstanceRetentionSettings",
    "chime:UpdateAppInstanceUserEndpoint",
    "chime:CreateChannelBan",
    "chime:UpdateChannelFlow",
    "chime:ListChannelMembershipsForAppInstanceUser",
    "chime:RegisterAppInstanceUserEndpoint",
    "chime:Connect",
    "chime:SearchChannels",
    "chime:DescribeChannel",
    "chime:DescribeAppInstanceUser",
    "chime:DeleteChannelMessage",
    "chime:DeleteChannel",
    "chime:UpdateChannel",
    "chime:DescribeChannelBan",
    "chime:ListSubChannels",
    "chime:TagResource",
    "chime:ListChannelsAssociatedWithChannelFlow",
    "chime:PutChannelMembershipPreferences",
    "chime:ListTagsForResource",
    "chime:BatchCreateChannelMembership",
    "chime:ListChannelFlows",
    "chime:GetAttendee",
    "chime:BatchUpdateAttendeeCapabilitiesExcept",
    "chime:DeleteAttendee",
    "chime:CreateChannelModerator",
    "chime:DeleteMediaCapturePipeline",
    "chime:DescribeChannelMembership",
    "chime:ListAppInstanceUserEndpoints",
    "chime:DeleteMediaPipeline",
    "chime:DeleteChannelBan",
    "chime:DeleteChannelMembership",
    "chime:ListAppInstanceUsers",
    "chime:UntagAttendee",
    "chime:DeregisterAppInstanceUserEndpoint",
    "chime:DescribeChannelModerator",
    "chime:UntagMeeting",
    "chime:SendChannelMessage",
    "chime:TagAttendee",
    "chime:CreateChannelFlow",
    "chime:DescribeAppInstanceUserEndpoint",
    "chime:DeleteAppInstanceUser",
    "chime:ListAttendees",
    "chime:CreateChannel",
    "chime:ListChannelMemberships",
    "chime:GetMediaPipeline",
    "chime:UntagResource",
    "chime:UpdateChannelMessage",
    "chime:ListChannels",
    "chime:UpdateAttendeeCapabilities",
    "chime:ListAttendeeTags",
    "chime:DeleteAppInstanceAdmin",
    "chime:CreateAppInstanceAdmin",
    "chime:DeleteMeeting",
    "chime:GetChannelMembershipPreferences",
    "chime:ChannelFlowCallback",
    "chime:GetMeeting",
    "chime:GetMediaCapturePipeline",
    "chime:UpdateChannelReadMarker",
    "chime:ListAppInstanceAdmins",
    "chime:RedactChannelMessage",
    "chime:DescribeChannelFlow",
    "chime:DisassociateChannelFlow",
    "chime:UpdateAppInstanceUser",
    "chime:CreateMeetingDialOut",
    "chime:DescribeChannelMembershipForAppInstanceUser",
    "chime:PutAppInstanceStreamingConfigurations",
    "chime:ListChannelModerators",
    "braket:*",
    "braket:TagResource",
    "braket:UntagResource",
    "braket:GetQuantumTask",
    "braket:ListTagsForResource",
    "braket:CancelQuantumTask",
    "braket:CancelJob",
    "braket:GetJob",
    "elasticbeanstalk:*",
    "elasticbeanstalk:ListAvailableSolutionStacks",
    "elasticbeanstalk:RestartAppServer",
    "elasticbeanstalk:UpdateApplicationResourceLifecycle",
    "elasticbeanstalk:CreateApplication",
    "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
    "elasticbeanstalk:DescribeInstancesHealth",
    "elasticbeanstalk:ComposeEnvironments",
    "elasticbeanstalk:CreateEnvironment",
    "elasticbeanstalk:AbortEnvironmentUpdate",
    "elasticbeanstalk:TerminateEnvironment",
    "elasticbeanstalk:AddTags",
    "elasticbeanstalk:DescribeApplications",
    "elasticbeanstalk:DescribeEvents",
    "elasticbeanstalk:ValidateConfigurationSettings",
    "elasticbeanstalk:SwapEnvironmentCNAMEs",
    "elasticbeanstalk:DeleteApplicationVersion",
    "elasticbeanstalk:DescribeEnvironmentHealth",
    "elasticbeanstalk:ListPlatformVersions",
    "elasticbeanstalk:RebuildEnvironment",
    "elasticbeanstalk:UpdateTagsForResource",
    "elasticbeanstalk:DeleteEnvironmentConfiguration",
    "elasticbeanstalk:PutInstanceStatistics",
    "elasticbeanstalk:ListTagsForResource",
    "elasticbeanstalk:DescribeEnvironmentManagedActions",
    "elasticbeanstalk:DescribePlatformVersion",
    "elasticbeanstalk:AssociateEnvironmentOperationsRole",
    "elasticbeanstalk:CreateConfigurationTemplate",
    "elasticbeanstalk:DeleteApplication",
    "elasticbeanstalk:DeleteConfigurationTemplate",
    "elasticbeanstalk:DeletePlatformVersion",
    "elasticbeanstalk:RequestEnvironmentInfo",
    "elasticbeanstalk:CreateApplicationVersion",
    "elasticbeanstalk:DescribeApplicationVersions",
    "elasticbeanstalk:UpdateConfigurationTemplate",
    "elasticbeanstalk:ApplyEnvironmentManagedAction",
    "elasticbeanstalk:DescribeEnvironmentResources",
    "elasticbeanstalk:DescribeEnvironments",
    "elasticbeanstalk:RemoveTags",
    "elasticbeanstalk:CreatePlatformVersion",
    "elasticbeanstalk:DescribeConfigurationOptions",
    "elasticbeanstalk:UpdateApplication",
    "elasticbeanstalk:RetrieveEnvironmentInfo",
    "elasticbeanstalk:DescribeConfigurationSettings",
    "elasticbeanstalk:UpdateEnvironment",
    "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
    "elasticbeanstalk:UpdateApplicationVersion",
    "health:*",
    "health:DescribeAffectedEntities",
    "health:DescribeEventDetails",
    "lightsail:*",
    "lightsail:UpdateBucketBundle",
    "lightsail:AttachStaticIp",
    "lightsail:PutInstancePublicPorts",
    "lightsail:DetachDisk",
    "lightsail:DeleteRelationalDatabaseSnapshot",
    "lightsail:CreateLoadBalancerTlsCertificate",
    "lightsail:DeleteContainerImage",
    "lightsail:DeleteDomain",
    "lightsail:StopRelationalDatabase",
    "lightsail:DeleteKnownHostKeys",
    "lightsail:DeleteBucketAccessKey",
    "lightsail:SetIpAddressType",
    "lightsail:DeleteAlarm",
    "lightsail:DeleteInstance",
    "lightsail:RegisterContainerImage",
    "lightsail:DeleteDomainEntry",
    "lightsail:DeleteCertificate",
    "lightsail:DeleteKeyPair",
    "lightsail:GetInstanceAccessDetails",
    "lightsail:DetachCertificateFromDistribution",
    "lightsail:DeleteRelationalDatabase",
    "lightsail:UpdateLoadBalancerAttribute",
    "lightsail:UpdateDistribution",
    "lightsail:AttachLoadBalancerTlsCertificate",
    "lightsail:DeleteDisk",
    "lightsail:StartInstance",
    "lightsail:SetResourceAccessForBucket",
    "lightsail:ExportSnapshot",
    "lightsail:CreateDiskSnapshot",
    "lightsail:CreateContainerServiceDeployment",
    "lightsail:CloseInstancePublicPorts",
    "lightsail:TestAlarm",
    "lightsail:DetachInstancesFromLoadBalancer",
    "lightsail:DeleteContainerService",
    "lightsail:AttachDisk",
    "lightsail:GetRelationalDatabaseMasterUserPassword",
    "lightsail:AttachInstancesToLoadBalancer",
    "lightsail:UntagResource",
    "lightsail:UpdateContainerService",
    "lightsail:StartRelationalDatabase",
    "lightsail:RebootInstance",
    "lightsail:CreateDomainEntry",
    "lightsail:DetachStaticIp",
    "lightsail:DeleteBucket",
    "lightsail:CreateBucketAccessKey",
    "lightsail:UpdateRelationalDatabaseParameters",
    "lightsail:UpdateDistributionBundle",
    "lightsail:DeleteInstanceSnapshot",
    "lightsail:OpenInstancePublicPorts",
    "lightsail:DeleteDistribution",
    "lightsail:RebootRelationalDatabase",
    "lightsail:CreateRelationalDatabaseFromSnapshot",
    "lightsail:CreateInstanceSnapshot",
    "lightsail:UpdateInstanceMetadataOptions",
    "lightsail:AttachCertificateToDistribution",
    "lightsail:CreateDiskFromSnapshot",
    "lightsail:ReleaseStaticIp",
    "lightsail:StopInstance",
    "lightsail:DeleteDiskSnapshot",
    "lightsail:UpdateDomainEntry",
    "lightsail:CreateInstancesFromSnapshot",
    "lightsail:UpdateRelationalDatabase",
    "lightsail:UpdateBucket",
    "lightsail:DeleteLoadBalancer",
    "lightsail:ResetDistributionCache",
    "lightsail:TagResource",
    "lightsail:PutAlarm",
    "lightsail:DeleteLoadBalancerTlsCertificate",
    "honeycode:*",
    "honeycode:StartTableDataImportJob",
    "honeycode:InvokeScreenAutomation",
    "honeycode:ListTables",
    "honeycode:ListTableColumns",
    "honeycode:BatchUpdateTableRows",
    "honeycode:GetScreenData",
    "honeycode:DescribeTableDataImportJob",
    "honeycode:BatchCreateTableRows",
    "honeycode:BatchDeleteTableRows",
    "honeycode:ListTableRows",
    "honeycode:QueryTableRows",
    "honeycode:BatchUpsertTableRows",
    "secretsmanager:*",
    "secretsmanager:StopReplicationToReplica",
    "secretsmanager:DeleteResourcePolicy",
    "secretsmanager:ValidateResourcePolicy",
    "secretsmanager:UntagResource",
    "secretsmanager:GetSecretValue",
    "secretsmanager:DeleteSecret",
    "secretsmanager:UpdateSecretVersionStage",
    "secretsmanager:TagResource",
    "secretsmanager:PutResourcePolicy",
    "secretsmanager:DescribeSecret",
    "secretsmanager:RemoveRegionsFromReplication",
    "secretsmanager:ListSecretVersionIds",
    "secretsmanager:RestoreSecret",
    "secretsmanager:RotateSecret",
    "secretsmanager:PutSecretValue",
    "secretsmanager:CreateSecret",
    "secretsmanager:UpdateSecret",
    "secretsmanager:ReplicateSecretToRegions",
    "secretsmanager:GetResourcePolicy",
    "secretsmanager:CancelRotateSecret",
    "redshift-serverless:*",
    "redshift-serverless:CreateNamespace",
    "redshift-serverless:RestoreFromRecoveryPoint",
    "redshift-serverless:DeleteNamespace",
    "redshift-serverless:CreateEndpointAccess",
    "redshift-serverless:ListSnapshots",
    "redshift-serverless:RestoreFromSnapshot",
    "redshift-serverless:GetRecoveryPoint",
    "redshift-serverless:ListTagsForResource",
    "redshift-serverless:UpdateWorkgroup",
    "redshift-serverless:GetSnapshot",
    "redshift-serverless:DeleteEndpointAccess",
    "redshift-serverless:ListEndpointAccess",
    "redshift-serverless:GetWorkgroup",
    "redshift-serverless:TagResource",
    "redshift-serverless:DeleteSnapshot",
    "redshift-serverless:GetNamespace",
    "redshift-serverless:GetEndpointAccess",
    "redshift-serverless:CreateSnapshot",
    "redshift-serverless:DeleteWorkgroup",
    "redshift-serverless:CreateWorkgroup",
    "redshift-serverless:UpdateNamespace",
    "redshift-serverless:ListRecoveryPoints",
    "redshift-serverless:UpdateEndpointAccess",
    "redshift-serverless:UntagResource",
    "redshift-serverless:ConvertRecoveryPointToSnapshot",
    "redshift-serverless:UpdateSnapshot",
    "redshift-serverless:GetCredentials",
    "sts:*",
    "sts:AssumeRoleWithWebIdentity",
    "sts:AssumeRoleWithSAML",
    "sts:AssumeRole",
    "sts:GetFederationToken",
    "sts:SetSourceIdentity",
    "sts:TagSession",
    "ecs:*",
    "ecs:TagResource",
    "ecs:StartTask",
    "ecs:UpdateCluster",
    "ecs:DescribeCapacityProviders",
    "ecs:UpdateService",
    "ecs:PutAttributes",
    "ecs:SubmitContainerStateChange",
    "ecs:ListContainerInstances",
    "ecs:DeregisterContainerInstance",
    "ecs:PutClusterCapacityProviders",
    "ecs:ListTagsForResource",
    "ecs:DescribeClusters",
    "ecs:SubmitTaskStateChange",
    "ecs:DescribeTasks",
    "ecs:UpdateContainerAgent",
    "ecs:StopTask",
    "ecs:DescribeTaskSets",
    "ecs:DeleteTaskSet",
    "ecs:DescribeServices",
    "ecs:DeleteService",
    "ecs:DeleteCluster",
    "ecs:UntagResource",
    "ecs:RunTask",
    "ecs:UpdateTaskSet",
    "ecs:SubmitAttachmentStateChanges",
    "ecs:DeleteCapacityProvider",
    "ecs:Poll",
    "ecs:StartTelemetrySession",
    "ecs:DescribeContainerInstances",
    "ecs:ExecuteCommand",
    "ecs:UpdateCapacityProvider",
    "ecs:UpdateClusterSettings",
    "ecs:CreateService",
    "ecs:ListTasks",
    "ecs:UpdateContainerInstancesState",
    "ecs:DeleteAttributes",
    "ecs:ListAttributes",
    "ecs:UpdateServicePrimaryTaskSet",
    "ecs:RegisterContainerInstance",
    "freertos:*",
    "freertos:DescribeSoftwareConfiguration",
    "freertos:CreateSoftwareConfiguration",
    "freertos:DeleteSoftwareConfiguration",
    "freertos:UpdateSoftwareConfiguration",
    "batch:*",
    "batch:CreateJobQueue",
    "batch:DeleteSchedulingPolicy",
    "batch:TerminateJob",
    "batch:CreateSchedulingPolicy",
    "batch:TagResource",
    "batch:UpdateJobQueue",
    "batch:CreateComputeEnvironment",
    "batch:UpdateComputeEnvironment",
    "batch:RegisterJobDefinition",
    "batch:DeleteJobQueue",
    "batch:UpdateSchedulingPolicy",
    "batch:DeregisterJobDefinition",
    "batch:ListTagsForResource",
    "batch:UntagResource",
    "batch:SubmitJob",
    "batch:DeleteComputeEnvironment",
    "batch:CancelJob",
    "backup-gateway:*",
    "backup-gateway:TagResource",
    "backup-gateway:PutMaintenanceStartTime",
    "backup-gateway:GetGateway",
    "backup-gateway:UpdateHypervisor",
    "backup-gateway:UntagResource",
    "backup-gateway:DisassociateGatewayFromServer",
    "backup-gateway:GetVirtualMachine",
    "backup-gateway:DeleteHypervisor",
    "backup-gateway:TestHypervisorConfiguration",
    "backup-gateway:UpdateGatewaySoftwareNow",
    "backup-gateway:Backup",
    "backup-gateway:AssociateGatewayToServer",
    "backup-gateway:ListTagsForResource",
    "backup-gateway:Restore",
    "backup-gateway:UpdateGatewayInformation",
    "backup-gateway:DeleteGateway",
    "translate:*",
    "translate:CreateParallelData",
    "translate:UntagResource",
    "translate:ListTagsForResource",
    "translate:GetTerminology",
    "translate:TagResource",
    "translate:DeleteTerminology",
    "translate:ImportTerminology",
    "translate:DeleteParallelData",
    "translate:StartTextTranslationJob",
    "translate:TranslateText",
    "translate:UpdateParallelData",
    "translate:GetParallelData",
    "signer:*",
    "signer:ListProfilePermissions",
    "signer:AddProfilePermission",
    "signer:RevokeSigningProfile",
    "signer:CancelSigningProfile",
    "signer:GetSigningProfile",
    "signer:RevokeSignature",
    "signer:StartSigningJob",
    "signer:DescribeSigningJob",
    "signer:TagResource",
    "signer:RemoveProfilePermission",
    "signer:ListTagsForResource",
    "signer:UntagResource",
    "a4b:*",
    "a4b:UpdateConferenceProvider",
    "a4b:DeleteAddressBook",
    "a4b:DeleteBusinessReportSchedule",
    "a4b:ForgetSmartHomeAppliances",
    "a4b:DeleteRoomSkillParameter",
    "a4b:GetConferenceProvider",
    "a4b:DeleteSkillGroup",
    "a4b:DeleteContact",
    "a4b:GetRoom",
    "a4b:UpdateSkillGroup",
    "a4b:UpdateAddressBook",
    "a4b:ListTags",
    "a4b:UntagResource",
    "a4b:DeleteNetworkProfile",
    "a4b:UpdateNetworkProfile",
    "a4b:GetNetworkProfile",
    "a4b:DisassociateSkillFromSkillGroup",
    "a4b:DisassociateDeviceFromRoom",
    "a4b:UpdateRoom",
    "a4b:DeleteGatewayGroup",
    "a4b:GetSkillGroup",
    "a4b:DeleteProfile",
    "a4b:GetGateway",
    "a4b:UpdateBusinessReportSchedule",
    "a4b:CreateRoom",
    "a4b:DisassociateSkillFromUsers",
    "a4b:DeleteSkillAuthorization",
    "a4b:StartSmartHomeApplianceDiscovery",
    "a4b:DisassociateSkillGroupFromRoom",
    "a4b:GetGatewayGroup",
    "a4b:CreateUser",
    "a4b:SendInvitation",
    "a4b:AssociateDeviceWithRoom",
    "a4b:UpdateGateway",
    "a4b:UpdateGatewayGroup",
    "a4b:PutSkillAuthorization",
    "a4b:DeleteDevice",
    "a4b:GetContact",
    "a4b:UpdateProfile",
    "a4b:AssociateContactWithAddressBook",
    "a4b:RevokeInvitation",
    "a4b:AssociateDeviceWithNetworkProfile",
    "a4b:PutRoomSkillParameter",
    "a4b:AssociateSkillWithSkillGroup",
    "a4b:GetRoomSkillParameter",
    "a4b:ListSmartHomeAppliances",
    "a4b:DeleteUser",
    "a4b:GetDevice",
    "a4b:AssociateSkillGroupWithRoom",
    "a4b:ListGateways",
    "a4b:ListDeviceEvents",
    "a4b:TagResource",
    "a4b:DisassociateContactFromAddressBook",
    "a4b:GetAddressBook",
    "a4b:DeleteDeviceUsageData",
    "a4b:DeleteRoom",
    "a4b:UpdateDevice",
    "a4b:DeleteConferenceProvider",
    "a4b:GetProfile",
    "a4b:UpdateContact",
    "license-manager:*",
    "license-manager:ListFailuresForLicenseConfigurationOperations",
    "license-manager:GetLicenseConfiguration",
    "license-manager:TagResource",
    "license-manager:UpdateLicenseSpecificationsForResource",
    "license-manager:GetLicense",
    "license-manager:DeleteLicenseManagerReportGenerator",
    "license-manager:ListLicenseVersions",
    "license-manager:GetGrant",
    "license-manager:ListAssociationsForLicenseConfiguration",
    "license-manager:UntagResource",
    "license-manager:ListUsageForLicenseConfiguration",
    "license-manager:CreateGrant",
    "license-manager:ListLicenseManagerReportGenerators",
    "license-manager:DeleteGrant",
    "license-manager:GetLicenseUsage",
    "license-manager:CreateToken",
    "license-manager:RejectGrant",
    "license-manager:ListTagsForResource",
    "license-manager:CreateGrantVersion",
    "license-manager:UpdateLicenseManagerReportGenerator",
    "license-manager:CreateLicenseVersion",
    "license-manager:DeleteLicenseConfiguration",
    "license-manager:DeleteLicense",
    "license-manager:AcceptGrant",
    "license-manager:GetLicenseManagerReportGenerator",
    "license-manager:CheckoutBorrowLicense",
    "license-manager:UpdateLicenseConfiguration",
    "resource-groups:*",
    "resource-groups:GetTags",
    "resource-groups:ListGroupResources",
    "resource-groups:GetGroupConfiguration",
    "resource-groups:PutGroupConfiguration",
    "resource-groups:UpdateGroup",
    "resource-groups:UpdateGroupQuery",
    "resource-groups:Tag",
    "resource-groups:UngroupResources",
    "resource-groups:DeleteGroup",
    "resource-groups:GroupResources",
    "resource-groups:GetGroup",
    "resource-groups:GetGroupQuery",
    "resource-groups:Untag",
    "resource-groups:PutGroupPolicy",
    "organizations:*",
    "organizations:UpdatePolicy",
    "organizations:EnablePolicyType",
    "organizations:MoveAccount",
    "organizations:UntagResource",
    "organizations:DescribeOrganizationalUnit",
    "organizations:ListAccountsForParent",
    "organizations:DeregisterDelegatedAdministrator",
    "organizations:DeclineHandshake",
    "organizations:ListChildren",
    "organizations:CloseAccount",
    "organizations:ListPoliciesForTarget",
    "organizations:DisablePolicyType",
    "organizations:DescribeHandshake",
    "organizations:InviteAccountToOrganization",
    "organizations:UpdateOrganizationalUnit",
    "organizations:DescribeEffectivePolicy",
    "organizations:ListTargetsForPolicy",
    "organizations:ListOrganizationalUnitsForParent",
    "organizations:DescribeAccount",
    "organizations:RegisterDelegatedAdministrator",
    "organizations:AcceptHandshake",
    "organizations:DeletePolicy",
    "organizations:TagResource",
    "organizations:DescribePolicy",
    "organizations:CreateOrganizationalUnit",
    "organizations:ListDelegatedServicesForAccount",
    "organizations:DetachPolicy",
    "organizations:AttachPolicy",
    "organizations:CancelHandshake",
    "organizations:ListParents",
    "organizations:DeleteOrganizationalUnit",
    "organizations:RemoveAccountFromOrganization",
    "organizations:ListTagsForResource",
    "waf-regional:*",
    "waf-regional:GetSizeConstraintSet",
    "waf-regional:UpdateSizeConstraintSet",
    "waf-regional:CreateSqlInjectionMatchSet",
    "waf-regional:DeleteLoggingConfiguration",
    "waf-regional:CreateSizeConstraintSet",
    "waf-regional:UpdateGeoMatchSet",
    "waf-regional:DeleteSqlInjectionMatchSet",
    "waf-regional:UntagResource",
    "waf-regional:DisassociateWebACL",
    "waf-regional:GetRateBasedRule",
    "waf-regional:DeleteSizeConstraintSet",
    "waf-regional:GetIPSet",
    "waf-regional:CreateRegexPatternSet",
    "waf-regional:CreateRateBasedRule",
    "waf-regional:ListResourcesForWebACL",
    "waf-regional:UpdateSqlInjectionMatchSet",
    "waf-regional:CreateGeoMatchSet",
    "waf-regional:DeleteRegexMatchSet",
    "waf-regional:GetSqlInjectionMatchSet",
    "waf-regional:CreateWebACL",
    "waf-regional:CreateIPSet",
    "waf-regional:GetRuleGroup",
    "waf-regional:DeleteRule",
    "waf-regional:CreateWebACLMigrationStack",
    "waf-regional:UpdateWebACL",
    "waf-regional:DeletePermissionPolicy",
    "waf-regional:DeleteRuleGroup",
    "waf-regional:GetPermissionPolicy",
    "waf-regional:DeleteXssMatchSet",
    "waf-regional:ListTagsForResource",
    "waf-regional:UpdateIPSet",
    "waf-regional:UpdateRule",
    "waf-regional:GetWebACLForResource",
    "waf-regional:UpdateXssMatchSet",
    "waf-regional:CreateRuleGroup",
    "waf-regional:UpdateRegexMatchSet",
    "waf-regional:AssociateWebACL",
    "waf-regional:DeleteIPSet",
    "waf-regional:GetLoggingConfiguration",
    "waf-regional:GetWebACL",
    "waf-regional:UpdateRateBasedRule",
    "waf-regional:DeleteRegexPatternSet",
    "waf-regional:UpdateByteMatchSet",
    "waf-regional:GetRateBasedRuleManagedKeys",
    "waf-regional:GetXssMatchSet",
    "waf-regional:GetSampledRequests",
    "waf-regional:DeleteWebACL",
    "waf-regional:CreateRegexMatchSet",
    "waf-regional:UpdateRuleGroup",
    "waf-regional:CreateXssMatchSet",
    "waf-regional:UpdateRegexPatternSet",
    "waf-regional:TagResource",
    "waf-regional:GetGeoMatchSet",
    "waf-regional:GetRule",
    "waf-regional:PutPermissionPolicy",
    "waf-regional:GetRegexPatternSet",
    "waf-regional:CreateByteMatchSet",
    "waf-regional:CreateRule",
    "waf-regional:DeleteRateBasedRule",
    "waf-regional:GetByteMatchSet",
    "waf-regional:DeleteGeoMatchSet",
    "waf-regional:GetRegexMatchSet",
    "waf-regional:PutLoggingConfiguration",
    "waf-regional:DeleteByteMatchSet",
    "account:*",
    "account:GetAlternateContact",
    "account:PutAlternateContact",
    "account:DeleteAlternateContact",
    "account:GetContactInformation",
    "account:PutContactInformation",
    "mgn:*",
    "mgn:GetAgentSnapshotCreditsForMgn",
    "mgn:NotifyAgentAuthenticationForMgn",
    "mgn:TagResource",
    "mgn:GetAgentRuntimeConfigurationForMgn",
    "mgn:UpdateLaunchConfiguration",
    "mgn:DeleteSourceServer",
    "mgn:StartCutover",
    "mgn:UpdateAgentBacklogForMgn",
    "mgn:DeleteLaunchConfigurationTemplate",
    "mgn:UpdateReplicationConfiguration",
    "mgn:IssueClientCertificateForMgn",
    "mgn:GetAgentReplicationInfoForMgn",
    "mgn:StartReplication",
    "mgn:SendVcenterClientMetricsForMgn",
    "mgn:UpdateAgentSourcePropertiesForMgn",
    "mgn:UpdateSourceServerReplicationType",
    "mgn:UpdateLaunchConfigurationTemplate",
    "mgn:UntagResource",
    "mgn:NotifyVcenterClientStartedForMgn",
    "mgn:NotifyAgentReplicationProgressForMgn",
    "mgn:NotifyAgentConnectedForMgn",
    "mgn:RetryDataReplication",
    "mgn:GetVcenterClientCommandsForMgn",
    "mgn:ChangeServerLifeCycleState",
    "mgn:UpdateAgentReplicationInfoForMgn",
    "mgn:NotifyAgentDisconnectedForMgn",
    "mgn:MarkAsArchived",
    "mgn:DeleteJob",
    "mgn:GetAgentCommandForMgn",
    "mgn:DescribeJobLogItems",
    "mgn:BatchCreateVolumeSnapshotGroupForMgn",
    "mgn:UpdateAgentConversionInfoForMgn",
    "mgn:SendAgentLogsForMgn",
    "mgn:UpdateAgentReplicationProcessStateForMgn",
    "mgn:DeleteVcenterClient",
    "mgn:SendVcenterClientCommandResultForMgn",
    "mgn:FinalizeCutover",
    "mgn:SendVcenterClientLogsForMgn",
    "mgn:GetLaunchConfiguration",
    "mgn:GetAgentConfirmedResumeInfoForMgn",
    "mgn:DeleteReplicationConfigurationTemplate",
    "mgn:DisconnectFromService",
    "mgn:SendAgentMetricsForMgn",
    "mgn:StartTest",
    "mgn:UpdateReplicationConfigurationTemplate",
    "mgn:TerminateTargetInstances",
    "mgn:GetReplicationConfiguration",
    "elemental-appliances-software:*",
    "elemental-appliances-software:CreateQuote",
    "elemental-appliances-software:UntagResource",
    "elemental-appliances-software:UpdateQuote",
    "elemental-appliances-software:TagResource",
    "elemental-appliances-software:ListTagsForResource",
    "elemental-appliances-software:GetQuote",
    "healthlake:*",
    "healthlake:TagResource",
    "healthlake:DeleteResource",
    "healthlake:SearchWithGet",
    "healthlake:ReadResource",
    "healthlake:UntagResource",
    "healthlake:StartFHIRExportJob",
    "healthlake:GetCapabilities",
    "healthlake:CreateResource",
    "healthlake:DeleteFHIRDatastore",
    "healthlake:DescribeFHIRExportJob",
    "healthlake:ListTagsForResource",
    "healthlake:DescribeFHIRDatastore",
    "healthlake:DescribeFHIRImportJob",
    "healthlake:SearchWithPost",
    "healthlake:ListFHIRExportJobs",
    "healthlake:StartFHIRImportJob",
    "healthlake:ListFHIRImportJobs",
    "healthlake:UpdateResource",
    "fis:*",
    "fis:GetExperiment",
    "fis:InjectApiInternalError",
    "fis:InjectApiThrottleError",
    "fis:DeleteExperimentTemplate",
    "fis:InjectApiUnavailableError",
    "fis:StartExperiment",
    "fis:UntagResource",
    "fis:StopExperiment",
    "fis:GetAction",
    "fis:CreateExperimentTemplate",
    "fis:UpdateExperimentTemplate",
    "fis:TagResource",
    "fis:ListTagsForResource",
    "fis:GetExperimentTemplate",
    "geo:*",
    "geo:GetDevicePositionHistory",
    "geo:BatchPutGeofence",
    "geo:ListGeofences",
    "geo:GetMapGlyphs",
    "geo:UpdateRouteCalculator",
    "geo:UpdateGeofenceCollection",
    "geo:DescribeGeofenceCollection",
    "geo:AssociateTrackerConsumer",
    "geo:GetDevicePosition",
    "geo:DeleteRouteCalculator",
    "geo:DisassociateTrackerConsumer",
    "geo:DeleteMap",
    "geo:DeleteTracker",
    "geo:DescribeTracker",
    "geo:DeletePlaceIndex",
    "geo:SearchPlaceIndexForSuggestions",
    "geo:ListTrackerConsumers",
    "geo:UntagResource",
    "geo:TagResource",
    "geo:PutGeofence",
    "geo:GetMapSprites",
    "geo:DescribePlaceIndex",
    "geo:GetMapStyleDescriptor",
    "geo:UpdateMap",
    "geo:ListDevicePositions",
    "geo:BatchDeleteDevicePositionHistory",
    "geo:BatchUpdateDevicePosition",
    "geo:UpdateTracker",
    "geo:SearchPlaceIndexForPosition",
    "geo:DeleteGeofenceCollection",
    "geo:CalculateRoute",
    "geo:SearchPlaceIndexForText",
    "geo:GetGeofence",
    "geo:BatchDeleteGeofence",
    "geo:CalculateRouteMatrix",
    "geo:GetMapTile",
    "geo:DescribeMap",
    "geo:DescribeRouteCalculator",
    "geo:BatchEvaluateGeofences",
    "geo:BatchGetDevicePosition",
    "geo:UpdatePlaceIndex",
    "geo:ListTagsForResource",
    "dax:*",
    "dax:Query",
    "dax:RebootNode",
    "dax:BatchWriteItem",
    "dax:DecreaseReplicationFactor",
    "dax:ConditionCheckItem",
    "dax:UpdateItem",
    "dax:TagResource",
    "dax:GetItem",
    "dax:Scan",
    "dax:IncreaseReplicationFactor",
    "dax:DeleteItem",
    "dax:DescribeClusters",
    "dax:BatchGetItem",
    "dax:PutItem",
    "dax:DeleteCluster",
    "dax:ListTags",
    "dax:CreateCluster",
    "dax:UpdateCluster",
    "dax:UntagResource",
    "cloudfront:*",
    "cloudfront:GetStreamingDistribution",
    "cloudfront:DeleteOriginRequestPolicy",
    "cloudfront:DescribeFunction",
    "cloudfront:GetCachePolicy",
    "cloudfront:UpdateFieldLevelEncryptionProfile",
    "cloudfront:UpdateFunction",
    "cloudfront:GetResponseHeadersPolicyConfig",
    "cloudfront:ListTagsForResource",
    "cloudfront:GetOriginRequestPolicyConfig",
    "cloudfront:GetOriginAccessControl",
    "cloudfront:DeleteFieldLevelEncryptionConfig",
    "cloudfront:GetFieldLevelEncryptionProfile",
    "cloudfront:DeleteResponseHeadersPolicy",
    "cloudfront:CreateStreamingDistributionWithTags",
    "cloudfront:DeleteFunction",
    "cloudfront:GetRealtimeLogConfig",
    "cloudfront:GetFunction",
    "cloudfront:CreateRealtimeLogConfig",
    "cloudfront:PublishFunction",
    "cloudfront:UpdateRealtimeLogConfig",
    "cloudfront:DeleteCloudFrontOriginAccessIdentity",
    "cloudfront:CreateInvalidation",
    "cloudfront:TagResource",
    "cloudfront:CreateCloudFrontOriginAccessIdentity",
    "cloudfront:CreateCachePolicy",
    "cloudfront:GetDistributionConfig",
    "cloudfront:GetFieldLevelEncryptionProfileConfig",
    "cloudfront:DeleteDistribution",
    "cloudfront:UpdateStreamingDistribution",
    "cloudfront:GetInvalidation",
    "cloudfront:GetResponseHeadersPolicy",
    "cloudfront:UpdateCachePolicy",
    "cloudfront:UpdateDistribution",
    "cloudfront:CreateOriginRequestPolicy",
    "cloudfront:ListInvalidations",
    "cloudfront:UpdateOriginRequestPolicy",
    "cloudfront:CreateStreamingDistribution",
    "cloudfront:DeleteStreamingDistribution",
    "cloudfront:GetOriginRequestPolicy",
    "cloudfront:GetOriginAccessControlConfig",
    "cloudfront:TestFunction",
    "cloudfront:AssociateAlias",
    "cloudfront:GetFieldLevelEncryptionConfig",
    "cloudfront:GetCachePolicyConfig",
    "cloudfront:CreateFunction",
    "cloudfront:DeleteFieldLevelEncryptionProfile",
    "cloudfront:UpdateOriginAccessControl",
    "cloudfront:UpdateResponseHeadersPolicy",
    "cloudfront:DeleteCachePolicy",
    "cloudfront:UpdateCloudFrontOriginAccessIdentity",
    "cloudfront:DeleteOriginAccessControl",
    "cloudfront:GetDistribution",
    "cloudfront:GetCloudFrontOriginAccessIdentity",
    "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
    "cloudfront:CreateResponseHeadersPolicy",
    "cloudfront:GetFieldLevelEncryption",
    "cloudfront:GetStreamingDistributionConfig",
    "cloudfront:ListConflictingAliases",
    "cloudfront:DeleteRealtimeLogConfig",
    "cloudfront:UntagResource",
    "cloudfront:CreateDistribution",
    "iot:*",
    "iot:GetPercentiles",
    "iot:CreateBillingGroup",
    "iot:CancelJobExecution",
    "iot:ListThingGroupsForThing",
    "iot:CreateMitigationAction",
    "iot:DescribeScheduledAudit",
    "iot:RemoveThingFromBillingGroup",
    "iot:AcceptCertificateTransfer",
    "iot:DeleteCACertificate",
    "iot:GetBucketsAggregation",
    "iot:CreateProvisioningTemplate",
    "iot:GetJobDocument",
    "iot:CreatePolicy",
    "iot:GetPolicyVersion",
    "iot:DescribeRoleAlias",
    "iot:AddThingToBillingGroup",
    "iot:EnableTopicRule",
    "iot:DescribeJobExecution",
    "iot:CreateScheduledAudit",
    "iot:DeleteMitigationAction",
    "iot:DescribeCACertificate",
    "iot:ConfirmTopicRuleDestination",
    "iot:CreateProvisioningTemplateVersion",
    "iot:DeleteTopicRule",
    "iot:UpdateDimension",
    "iot:UpdateJob",
    "iot:Receive",
    "iot:CreateAuthorizer",
    "iot:GetOTAUpdate",
    "iot:CreateThingGroup",
    "iot:UpdateCustomMetric",
    "iot:Subscribe",
    "iot:DeleteBillingGroup",
    "iot:DeleteDynamicThingGroup",
    "iot:DeleteFleetMetric",
    "iot:DescribeProvisioningTemplateVersion",
    "iot:ListTargetsForSecurityProfile",
    "iot:GetStatistics",
    "iot:CreateTopicRule",
    "iot:GetTopicRule",
    "iot:Connect",
    "iot:CreateDimension",
    "iot:ListJobExecutionsForThing",
    "iot:UpdateFleetMetric",
    "iot:ListJobExecutionsForJob",
    "iot:UpdateThing",
    "iot:DescribeThingType",
    "iot:GetBehaviorModelTrainingSummaries",
    "iot:RemoveThingFromThingGroup",
    "iot:DescribeBillingGroup",
    "iot:DeleteTopicRuleDestination",
    "iot:CreateThingType",
    "iot:DeleteRoleAlias",
    "iot:StartDetectMitigationActionsTask",
    "iot:DeleteScheduledAudit",
    "iot:ListThingsInThingGroup",
    "iot:DescribeCustomMetric",
    "iot:DeleteProvisioningTemplateVersion",
    "iot:DeleteJobTemplate",
    "iot:DescribeThing",
    "iot:CreateProvisioningClaim",
    "iot:SearchIndex",
    "iot:DeleteAuthorizer",
    "iot:GetEffectivePolicies",
    "iot:ReplaceTopicRule",
    "iot:CancelJob",
    "iot:AssociateTargetsWithJob",
    "iot:UpdateRoleAlias",
    "iot:DescribeMitigationAction",
    "iot:DescribeProvisioningTemplate",
    "iot:TestInvokeAuthorizer",
    "iot:ListTagsForResource",
    "iot:CloseTunnel",
    "iot:DeleteThing",
    "iot:GetRetainedMessage",
    "iot:DescribeStream",
    "iot:DeleteJobExecution",
    "iot:GetCardinality",
    "iot:CreateRoleAlias",
    "iot:UpdateThingGroup",
    "iot:DescribeAuthorizer",
    "iot:ListMetricValues",
    "iot:AddThingToThingGroup",
    "iot:DeleteThingType",
    "iot:CreateStream",
    "iot:AttachPrincipalPolicy",
    "iot:AttachPolicy",
    "iot:DeleteSecurityProfile",
    "iot:DeleteProvisioningTemplate",
    "iot:TransferCertificate",
    "iot:TestAuthorization",
    "iot:RejectCertificateTransfer",
    "iot:TagResource",
    "iot:CreatePolicyVersion",
    "iot:ListThingsInBillingGroup",
    "iot:DetachPrincipalPolicy",
    "iot:DeleteJob",
    "iot:UntagResource",
    "iot:DescribeCertificate",
    "iot:DeleteDomainConfiguration",
    "iot:DeleteCustomMetric",
    "iot:UpdateAuthorizer",
    "iot:ListNamedShadowsForThing",
    "iot:UpdateThingGroupsForThing",
    "iot:ListDetectMitigationActionsExecutions",
    "iot:CreateTopicRuleDestination",
    "iot:CreateJob",
    "iot:RetainPublish",
    "iot:UpdateBillingGroup",
    "iot:DescribeManagedJobTemplate",
    "iot:DeleteDimension",
    "iot:DeprecateThingType",
    "iot:UpdateProvisioningTemplate",
    "iot:UpdateMitigationAction",
    "iot:CancelCertificateTransfer",
    "iot:ListPolicyVersions",
    "iot:DescribeDimension",
    "iot:DeleteCertificate",
    "iot:CreateOTAUpdate",
    "iot:UpdateSecurityProfile",
    "iot:SetDefaultAuthorizer",
    "iot:DeleteThingGroup",
    "iot:ListSecurityProfilesForTarget",
    "iot:DescribeJob",
    "iot:UpdateDynamicThingGroup",
    "iot:DescribeJobTemplate",
    "iot:CreateCustomMetric",
    "iot:UpdateStream",
    "iot:DeletePolicyVersion",
    "iot:DeleteThingShadow",
    "iot:DescribeTunnel",
    "iot:CreateDynamicThingGroup",
    "iot:UpdateTopicRuleDestination",
    "iot:DescribeSecurityProfile",
    "iot:DisableTopicRule",
    "iot:UpdateScheduledAudit",
    "iot:CreateJobTemplate",
    "iot:DeletePolicy",
    "iot:UpdateThingShadow",
    "iot:CreateThing",
    "iot:DetachSecurityProfile",
    "iot:DescribeDomainConfiguration",
    "iot:SetDefaultPolicyVersion",
    "iot:GetPolicy",
    "iot:ListActiveViolations",
    "iot:DeleteStream",
    "iot:CreateFleetMetric",
    "iot:UpdateCACertificate",
    "iot:DescribeFleetMetric",
    "iot:UpdateDomainConfiguration",
    "iot:DeleteOTAUpdate",
    "iot:CreateSecurityProfile",
    "iot:GetTopicRuleDestination",
    "iot:DetachPolicy",
    "iot:DescribeIndex",
    "iot:AttachSecurityProfile",
    "iot:ListTargetsForPolicy",
    "iot:CreateDomainConfiguration",
    "iot:ListSecurityProfiles",
    "iot:UpdateCertificate",
    "iot:DescribeThingGroup",
    "iot:RotateTunnelAccessToken",
    "iot:ListProvisioningTemplateVersions",
    "iot:ListViolationEvents",
    "iot:Publish",
    "iot:GetThingShadow",
    "route53-recovery-control-config:*",
    "route53-recovery-control-config:UpdateRoutingControl",
    "route53-recovery-control-config:DescribeCluster",
    "route53-recovery-control-config:DeleteSafetyRule",
    "route53-recovery-control-config:UpdateSafetyRule",
    "route53-recovery-control-config:DescribeSafetyRule",
    "route53-recovery-control-config:DescribeControlPanel",
    "route53-recovery-control-config:CreateRoutingControl",
    "route53-recovery-control-config:CreateControlPanel",
    "route53-recovery-control-config:DeleteCluster",
    "route53-recovery-control-config:DescribeRoutingControlByName",
    "route53-recovery-control-config:CreateSafetyRule",
    "route53-recovery-control-config:TagResource",
    "route53-recovery-control-config:DescribeRoutingControl",
    "route53-recovery-control-config:CreateCluster",
    "route53-recovery-control-config:ListSafetyRules",
    "route53-recovery-control-config:DeleteRoutingControl",
    "route53-recovery-control-config:UpdateControlPanel",
    "route53-recovery-control-config:DeleteControlPanel",
    "route53-recovery-control-config:UntagResource",
    "rum:*",
    "rum:DeleteAppMonitor",
    "rum:UntagResource",
    "rum:GetAppMonitorData",
    "rum:UpdateAppMonitor",
    "rum:ListRumMetricsDestinations",
    "rum:BatchDeleteRumMetricDefinitions",
    "rum:UpdateRumMetricDefinition",
    "rum:PutRumEvents",
    "rum:CreateAppMonitor",
    "rum:TagResource",
    "rum:BatchCreateRumMetricDefinitions",
    "rum:GetAppMonitor",
    "rum:PutRumMetricsDestination",
    "rum:BatchGetRumMetricDefinitions",
    "rum:DeleteRumMetricsDestination",
    "medialive:*",
    "medialive:PurchaseOffering",
    "medialive:StopMultiplex",
    "medialive:UpdateMultiplexProgram",
    "medialive:RejectInputDeviceTransfer",
    "medialive:DeleteMultiplexProgram",
    "medialive:DescribeInputSecurityGroup",
    "medialive:UpdateChannelClass",
    "medialive:CreateInputSecurityGroup",
    "medialive:StartMultiplex",
    "medialive:CreateTags",
    "medialive:TransferInputDevice",
    "medialive:DeleteTags",
    "medialive:DescribeInput",
    "medialive:CreatePartnerInput",
    "medialive:StartChannel",
    "medialive:ListTagsForResource",
    "medialive:DeleteInput",
    "medialive:DescribeChannel",
    "medialive:AcceptInputDeviceTransfer",
    "medialive:ClaimDevice",
    "medialive:DeleteMultiplex",
    "medialive:DeleteInputSecurityGroup",
    "medialive:DescribeOffering",
    "medialive:DescribeMultiplexProgram",
    "medialive:CreateMultiplexProgram",
    "medialive:CreateInput",
    "medialive:UpdateInputSecurityGroup",
    "medialive:UpdateReservation",
    "medialive:DeleteSchedule",
    "medialive:DescribeInputDevice",
    "medialive:UpdateChannel",
    "medialive:RebootInputDevice",
    "medialive:DeleteReservation",
    "medialive:DescribeMultiplex",
    "medialive:UpdateInputDevice",
    "medialive:DescribeReservation",
    "medialive:DeleteChannel",
    "medialive:CreateChannel",
    "medialive:StopChannel",
    "medialive:StartInputDeviceMaintenanceWindow",
    "medialive:UpdateInput",
    "medialive:CancelInputDeviceTransfer",
    "medialive:CreateMultiplex",
    "medialive:UpdateMultiplex",
    "medialive:BatchUpdateSchedule",
    "medialive:DescribeInputDeviceThumbnail",
    "medialive:DescribeSchedule",
    "mediatailor:*",
    "mediatailor:GetChannelPolicy",
    "mediatailor:ConfigureLogsForPlaybackConfiguration",
    "mediatailor:DeleteProgram",
    "mediatailor:ListVodSources",
    "mediatailor:DeletePlaybackConfiguration",
    "mediatailor:DescribeProgram",
    "mediatailor:PutChannelPolicy",
    "mediatailor:CreateVodSource",
    "mediatailor:DeletePrefetchSchedule",
    "mediatailor:DescribeChannel",
    "mediatailor:ListLiveSources",
    "mediatailor:StopChannel",
    "mediatailor:DeleteChannel",
    "mediatailor:DescribeSourceLocation",
    "mediatailor:StartChannel",
    "mediatailor:UpdateSourceLocation",
    "mediatailor:DeleteChannelPolicy",
    "mediatailor:TagResource",
    "mediatailor:DeleteSourceLocation",
    "mediatailor:DescribeVodSource",
    "mediatailor:UpdateVodSource",
    "mediatailor:CreatePrefetchSchedule",
    "mediatailor:UpdateChannel",
    "mediatailor:CreateProgram",
    "mediatailor:UpdateLiveSource",
    "mediatailor:CreateLiveSource",
    "mediatailor:GetChannelSchedule",
    "mediatailor:UntagResource",
    "mediatailor:DeleteVodSource",
    "mediatailor:GetPrefetchSchedule",
    "mediatailor:ListTagsForResource",
    "mediatailor:DescribeLiveSource",
    "mediatailor:DeleteLiveSource",
    "mediatailor:GetPlaybackConfiguration",
    "mediatailor:ListPrefetchSchedules",
    "iotwireless:*",
    "iotwireless:AssociateMulticastGroupWithFuotaTask",
    "iotwireless:ListMulticastGroupsByFuotaTask",
    "iotwireless:UpdatePosition",
    "iotwireless:UpdateResourceEventConfiguration",
    "iotwireless:UpdateDestination",
    "iotwireless:DisassociateMulticastGroupFromFuotaTask",
    "iotwireless:UpdateFuotaTask",
    "iotwireless:PutResourceLogLevel",
    "iotwireless:GetWirelessDeviceStatistics",
    "iotwireless:DisassociateWirelessDeviceFromMulticastGroup",
    "iotwireless:AssociateWirelessDeviceWithFuotaTask",
    "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup",
    "iotwireless:DeleteDeviceProfile",
    "iotwireless:StartFuotaTask",
    "iotwireless:DeleteWirelessGatewayTask",
    "iotwireless:DeleteDestination",
    "iotwireless:UpdatePartnerAccount",
    "iotwireless:DisassociateWirelessDeviceFromFuotaTask",
    "iotwireless:DeleteWirelessGatewayTaskDefinition",
    "iotwireless:GetWirelessGatewayCertificate",
    "iotwireless:GetPositionConfiguration",
    "iotwireless:GetPosition",
    "iotwireless:UpdateWirelessDevice",
    "iotwireless:DisassociateWirelessDeviceFromThing",
    "iotwireless:UpdateMulticastGroup",
    "iotwireless:GetFuotaTask",
    "iotwireless:CreateNetworkAnalyzerConfiguration",
    "iotwireless:DisassociateAwsAccountFromPartnerAccount",
    "iotwireless:ListTagsForResource",
    "iotwireless:AssociateWirelessDeviceWithThing",
    "iotwireless:GetServiceProfile",
    "iotwireless:GetDeviceProfile",
    "iotwireless:DisassociateWirelessGatewayFromCertificate",
    "iotwireless:DeleteWirelessGateway",
    "iotwireless:AssociateWirelessDeviceWithMulticastGroup",
    "iotwireless:DisassociateWirelessGatewayFromThing",
    "iotwireless:TagResource",
    "iotwireless:GetWirelessDevice",
    "iotwireless:GetDestination",
    "iotwireless:SendDataToWirelessDevice",
    "iotwireless:DeleteServiceProfile",
    "iotwireless:GetWirelessGatewayFirmwareInformation",
    "iotwireless:UpdateWirelessGateway",
    "iotwireless:GetNetworkAnalyzerConfiguration",
    "iotwireless:CreateWirelessGatewayTask",
    "iotwireless:DeleteMulticastGroup",
    "iotwireless:GetWirelessGatewayTask",
    "iotwireless:DeleteFuotaTask",
    "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup",
    "iotwireless:AssociateWirelessGatewayWithCertificate",
    "iotwireless:ResetResourceLogLevel",
    "iotwireless:DeleteWirelessDevice",
    "iotwireless:SendDataToMulticastGroup",
    "iotwireless:GetMulticastGroupSession",
    "iotwireless:GetWirelessGatewayTaskDefinition",
    "iotwireless:PutPositionConfiguration",
    "iotwireless:GetResourceLogLevel",
    "iotwireless:AssociateWirelessGatewayWithThing",
    "iotwireless:TestWirelessDevice",
    "iotwireless:StartMulticastGroupSession",
    "iotwireless:GetWirelessGateway",
    "iotwireless:GetWirelessGatewayStatistics",
    "iotwireless:GetResourceEventConfiguration",
    "iotwireless:UpdateNetworkAnalyzerConfiguration",
    "iotwireless:UntagResource",
    "iotwireless:StartNetworkAnalyzerStream",
    "iotwireless:GetPartnerAccount",
    "iotwireless:DeleteNetworkAnalyzerConfiguration",
    "iotwireless:CancelMulticastGroupSession",
    "iotwireless:GetMulticastGroup",
    "bugbust:*",
    "bugbust:ListPullRequests",
    "bugbust:GetJoinEventStatus",
    "bugbust:EvaluateProfilingGroups",
    "bugbust:UpdateWorkItemAdmin",
    "bugbust:ListEventParticipants",
    "bugbust:GetEvent",
    "bugbust:ListBugs",
    "bugbust:JoinEvent",
    "bugbust:UpdateWorkItem",
    "bugbust:TagResource",
    "bugbust:ListEventScores",
    "bugbust:ListTagsForResource",
    "bugbust:ListProfilingGroups",
    "bugbust:UntagResource",
    "bugbust:UpdateEvent",
    "codeguru-reviewer:*",
    "codeguru-reviewer:DisassociateRepository",
    "codeguru-reviewer:DescribeRecommendationFeedback",
    "codeguru-reviewer:TagResource",
    "codeguru-reviewer:CreateCodeReview",
    "codeguru-reviewer:DescribeCodeReview",
    "codeguru-reviewer:ListRecommendations",
    "codeguru-reviewer:ListTagsForResource",
    "codeguru-reviewer:DescribeRepositoryAssociation",
    "codeguru-reviewer:AssociateRepository",
    "codeguru-reviewer:ListRecommendationFeedback",
    "codeguru-reviewer:PutRecommendationFeedback",
    "codeguru-reviewer:UnTagResource",
    "vendor-insights:*",
    "vendor-insights:ListEntitledSecurityProfileSnapshots",
    "vendor-insights:ActivateSecurityProfile",
    "vendor-insights:DeleteDataSource",
    "vendor-insights:AssociateDataSource",
    "vendor-insights:UpdateSecurityProfile",
    "vendor-insights:GetEntitledSecurityProfileSnapshot",
    "vendor-insights:DeactivateSecurityProfile",
    "vendor-insights:GetSecurityProfile",
    "vendor-insights:DisassociateDataSource",
    "vendor-insights:GetDataSource",
    "vendor-insights:ListSecurityProfileSnapshots",
    "vendor-insights:GetSecurityProfileSnapshot",
    "opsworks:*",
    "opsworks:CreateInstance",
    "opsworks:DescribeElasticIps",
    "opsworks:DescribeLoadBasedAutoScaling",
    "opsworks:DeleteStack",
    "opsworks:DescribeServiceErrors",
    "opsworks:DescribeRaidArrays",
    "opsworks:UpdateStack",
    "opsworks:CreateDeployment",
    "opsworks:StartInstance",
    "opsworks:DeleteInstance",
    "opsworks:UnassignVolume",
    "opsworks:AssociateElasticIp",
    "opsworks:DisassociateElasticIp",
    "opsworks:DescribeInstances",
    "opsworks:DescribeStacks",
    "opsworks:DescribeApps",
    "opsworks:StartStack",
    "opsworks:DeregisterElasticIp",
    "opsworks:RebootInstance",
    "opsworks:DeleteLayer",
    "opsworks:DescribeDeployments",
    "opsworks:RegisterVolume",
    "opsworks:RegisterElasticIp",
    "opsworks:AssignVolume",
    "opsworks:UpdateApp",
    "opsworks:DescribePermissions",
    "opsworks:DescribeEcsClusters",
    "opsworks:DescribeStackSummary",
    "opsworks:DeregisterRdsDbInstance",
    "opsworks:DescribeCommands",
    "opsworks:SetTimeBasedAutoScaling",
    "opsworks:AttachElasticLoadBalancer",
    "opsworks:SetPermission",
    "opsworks:DescribeRdsDbInstances",
    "opsworks:ListTags",
    "opsworks:UpdateVolume",
    "opsworks:UpdateElasticIp",
    "opsworks:GrantAccess",
    "opsworks:DeregisterInstance",
    "opsworks:DescribeStackProvisioningParameters",
    "opsworks:UntagResource",
    "opsworks:DeregisterVolume",
    "opsworks:DetachElasticLoadBalancer",
    "opsworks:GetHostnameSuggestion",
    "opsworks:DescribeAgentVersions",
    "opsworks:UnassignInstance",
    "opsworks:RegisterInstance",
    "opsworks:RegisterEcsCluster",
    "opsworks:UpdateRdsDbInstance",
    "opsworks:UpdateLayer",
    "opsworks:DescribeVolumes",
    "opsworks:SetLoadBasedAutoScaling",
    "opsworks:AssignInstance",
    "opsworks:CreateApp",
    "opsworks:RegisterRdsDbInstance",
    "opsworks:CloneStack",
    "opsworks:DescribeElasticLoadBalancers",
    "opsworks:TagResource",
    "opsworks:DeleteApp",
    "opsworks:DeregisterEcsCluster",
    "opsworks:DescribeLayers",
    "opsworks:DescribeTimeBasedAutoScaling",
    "opsworks:UpdateInstance",
    "opsworks:CreateLayer",
    "opsworks:StopStack",
    "opsworks:StopInstance",
    "workmail:*",
    "workmail:ListImpersonationRoles",
    "workmail:DeleteMobileDevice",
    "workmail:DeleteOrganization",
    "workmail:GetMobilePolicyDetails",
    "workmail:DescribeOrganization",
    "workmail:DeleteResource",
    "workmail:DescribeSmtpGateway",
    "workmail:DeleteOutboundMailFlowRule",
    "workmail:CreateResource",
    "workmail:GetMailboxDetails",
    "workmail:GetMobileDeviceAccessOverride",
    "workmail:DisassociateDelegateFromResource",
    "workmail:CreateInboundMailFlowRule",
    "workmail:DescribeMailUsers",
    "workmail:DescribeOutboundMailFlowRule",
    "workmail:WipeMobileDevice",
    "workmail:DisableMailUsers",
    "workmail:DescribeEmailMonitoringConfiguration",
    "workmail:DeleteUser",
    "workmail:UpdatePrimaryEmailAddress",
    "workmail:ListGroupMembers",
    "workmail:ResetPassword",
    "workmail:RemoveMembersFromGroup",
    "workmail:PutMailboxPermissions",
    "workmail:CreateMailDomain",
    "workmail:ListInboundMailFlowRules",
    "workmail:DescribeInboundDmarcSettings",
    "workmail:PutRetentionPolicy",
    "workmail:UpdateAvailabilityConfiguration",
    "workmail:ListResources",
    "workmail:ListGroups",
    "workmail:SetMailUserDetails",
    "workmail:DescribeResource",
    "workmail:CreateAvailabilityConfiguration",
    "workmail:GetMailDomainDetails",
    "workmail:DeleteMailboxPermissions",
    "workmail:ListMailboxPermissions",
    "workmail:GetMobileDeviceAccessEffect",
    "workmail:CreateUser",
    "workmail:ListMobileDeviceAccessRules",
    "workmail:ListAccessControlRules",
    "workmail:EnableMailDomain",
    "workmail:ListSmtpGateways",
    "workmail:AssociateMemberToGroup",
    "workmail:DeleteInboundMailFlowRule",
    "workmail:EnableMailUsers",
    "workmail:DeleteMobileDeviceAccessRule",
    "workmail:DeleteImpersonationRole",
    "workmail:GetImpersonationRole",
    "workmail:TestAvailabilityConfiguration",
    "workmail:SetMobilePolicyDetails",
    "workmail:SearchMembers",
    "workmail:DescribeInboundMailFlowRule",
    "workmail:GetMailUserDetails",
    "workmail:RegisterToWorkMail",
    "workmail:PutAccessControlRule",
    "workmail:TestInboundMailFlowRules",
    "workmail:GetJournalingRules",
    "workmail:DeleteAccessControlRule",
    "workmail:CreateOutboundMailFlowRule",
    "workmail:GetMobileDeviceDetails",
    "workmail:ListMembersInMailGroup",
    "workmail:DescribeGroup",
    "workmail:ListMailboxExportJobs",
    "workmail:UpdateMailboxQuota",
    "workmail:DeleteAlias",
    "workmail:ListResourceDelegates",
    "workmail:UntagResource",
    "workmail:DescribeUser",
    "workmail:UpdateOutboundMailFlowRule",
    "workmail:ListOutboundMailFlowRules",
    "workmail:AssociateDelegateToResource",
    "workmail:EnableMailGroups",
    "workmail:CreateGroup",
    "workmail:DeleteSmtpGateway",
    "workmail:PutMobileDeviceAccessOverride",
    "workmail:DisassociateMemberFromGroup",
    "workmail:UpdateSmtpGateway",
    "workmail:AddMembersToGroup",
    "workmail:AssumeImpersonationRole",
    "workmail:TestOutboundMailFlowRules",
    "workmail:DeleteMailDomain",
    "workmail:PutEmailMonitoringConfiguration",
    "workmail:DeregisterFromWorkMail",
    "workmail:DisableMailGroups",
    "workmail:GetMailDomain",
    "workmail:GetDefaultRetentionPolicy",
    "workmail:CreateAlias",
    "workmail:ListAliases",
    "workmail:DeregisterMailDomain",
    "workmail:ListAvailabilityConfigurations",
    "workmail:UpdateImpersonationRole",
    "workmail:SetJournalingRules",
    "workmail:PutInboundDmarcSettings",
    "workmail:ResetUserPassword",
    "workmail:StartMailboxExportJob",
    "workmail:GetMailGroupDetails",
    "workmail:RegisterMailDomain",
    "workmail:CreateMobileDeviceAccessRule",
    "workmail:GetAccessControlEffect",
    "workmail:DescribeMailDomains",
    "workmail:CreateSmtpGateway",
    "workmail:CreateMailUser",
    "workmail:ListMailDomains",
    "workmail:UpdateInboundMailFlowRule",
    "workmail:GetImpersonationRoleEffect",
    "workmail:CancelMailboxExportJob",
    "workmail:SetAdmin",
    "workmail:CreateImpersonationRole",
    "workmail:ListTagsForResource",
    "workmail:DeleteAvailabilityConfiguration",
    "workmail:GetMobileDevicesForUser",
    "workmail:UpdateResource",
    "workmail:ListMobileDeviceAccessOverrides",
    "workmail:TagResource",
    "workmail:UpdateDefaultMailDomain",
    "workmail:UpdateMobileDeviceAccessRule",
    "workmail:DeleteRetentionPolicy",
    "workmail:DescribeMailboxExportJob",
    "workmail:DeleteEmailMonitoringConfiguration",
    "workmail:DescribeMailGroups",
    "workmail:DeleteGroup",
    "workmail:DeleteMobileDeviceAccessOverride",
    "workmail:SetDefaultMailDomain",
    "workmail:ListUsers",
    "workmail:SetMailGroupDetails",
    "elastictranscoder:*",
    "elastictranscoder:ReadPreset",
    "elastictranscoder:UpdatePipelineStatus",
    "elastictranscoder:CreateJob",
    "elastictranscoder:ReadPipeline",
    "elastictranscoder:UpdatePipeline",
    "elastictranscoder:UpdatePipelineNotifications",
    "elastictranscoder:CancelJob",
    "elastictranscoder:ReadJob",
    "elastictranscoder:ListJobsByPipeline",
    "elastictranscoder:DeletePreset",
    "elastictranscoder:DeletePipeline",
    "route53-recovery-cluster:*",
    "route53-recovery-cluster:UpdateRoutingControlState",
    "route53-recovery-cluster:UpdateRoutingControlStates",
    "route53-recovery-cluster:GetRoutingControlState",
    "snow-device-management:*",
    "snow-device-management:UntagResource",
    "snow-device-management:DescribeTask",
    "snow-device-management:TagResource",
    "snow-device-management:DescribeDeviceEc2Instances",
    "snow-device-management:ListDeviceResources",
    "snow-device-management:CancelTask",
    "snow-device-management:DescribeDevice",
    "firehose:*",
    "firehose:PutRecord",
    "firehose:UpdateDestination",
    "firehose:CreateDeliveryStream",
    "firehose:StartDeliveryStreamEncryption",
    "firehose:StopDeliveryStreamEncryption",
    "firehose:UntagDeliveryStream",
    "firehose:ListTagsForDeliveryStream",
    "firehose:DescribeDeliveryStream",
    "firehose:PutRecordBatch",
    "firehose:TagDeliveryStream",
    "firehose:DeleteDeliveryStream",
    "voiceid:*",
    "voiceid:StartSpeakerEnrollmentJob",
    "voiceid:DescribeSpeaker",
    "voiceid:ListSpeakers",
    "voiceid:OptOutSpeaker",
    "voiceid:DeleteSpeaker",
    "voiceid:DescribeDomain",
    "voiceid:DescribeSpeakerEnrollmentJob",
    "voiceid:UpdateDomain",
    "voiceid:ListTagsForResource",
    "voiceid:DescribeFraudster",
    "voiceid:ListFraudsterRegistrationJobs",
    "voiceid:UntagResource",
    "voiceid:DescribeFraudsterRegistrationJob",
    "voiceid:ListSpeakerEnrollmentJobs",
    "voiceid:TagResource",
    "voiceid:DeleteDomain",
    "voiceid:EvaluateSession",
    "voiceid:DeleteFraudster",
    "voiceid:StartFraudsterRegistrationJob",
    "detective:*",
    "detective:CreateMembers",
    "detective:DescribeOrganizationConfiguration",
    "detective:UpdateOrganizationConfiguration",
    "detective:DisableOrganizationAdminAccount",
    "detective:ListMembers",
    "detective:SearchGraph",
    "detective:UpdateDatasourcePackages",
    "detective:ListTagsForResource",
    "detective:ListDatasourcePackages",
    "detective:GetUsageInformation",
    "detective:TagResource",
    "detective:GetFreeTrialEligibility",
    "detective:StartMonitoringMember",
    "detective:GetGraphIngestState",
    "detective:DeleteGraph",
    "detective:GetMembers",
    "detective:UntagResource",
    "detective:DeleteMembers",
    "detective:BatchGetGraphMemberDatasources",
    "detective:ListOrganizationAdminAccounts",
    "elasticfilesystem:*",
    "elasticfilesystem:Backup",
    "elasticfilesystem:DescribeBackupPolicy",
    "elasticfilesystem:DeleteAccessPoint",
    "elasticfilesystem:Restore",
    "elasticfilesystem:CreateMountTarget",
    "elasticfilesystem:ListTagsForResource",
    "elasticfilesystem:DescribeLifecycleConfiguration",
    "elasticfilesystem:PutBackupPolicy",
    "elasticfilesystem:DescribeAccessPoints",
    "elasticfilesystem:DeleteReplicationConfiguration",
    "elasticfilesystem:CreateTags",
    "elasticfilesystem:DeleteTags",
    "elasticfilesystem:DescribeFileSystemPolicy",
    "elasticfilesystem:DescribeMountTargets",
    "elasticfilesystem:ClientMount",
    "elasticfilesystem:PutLifecycleConfiguration",
    "elasticfilesystem:CreateReplicationConfiguration",
    "elasticfilesystem:DescribeReplicationConfigurations",
    "elasticfilesystem:DeleteFileSystem",
    "elasticfilesystem:DescribeFileSystems",
    "elasticfilesystem:DeleteMountTarget",
    "elasticfilesystem:CreateAccessPoint",
    "elasticfilesystem:DescribeTags",
    "elasticfilesystem:PutFileSystemPolicy",
    "elasticfilesystem:DeleteFileSystemPolicy",
    "elasticfilesystem:ClientWrite",
    "elasticfilesystem:UpdateFileSystem",
    "elasticfilesystem:TagResource",
    "elasticfilesystem:UntagResource",
    "elasticfilesystem:ClientRootAccess",
    "codecommit:*",
    "codecommit:BatchGetCommits",
    "codecommit:GetReferences",
    "codecommit:DeleteRepository",
    "codecommit:GetObjectIdentifier",
    "codecommit:OverridePullRequestApprovalRules",
    "codecommit:UpdatePullRequestStatus",
    "codecommit:GetCommentsForComparedCommit",
    "codecommit:UpdatePullRequestApprovalState",
    "codecommit:DescribePullRequestEvents",
    "codecommit:GetBranch",
    "codecommit:GetCommentsForPullRequest",
    "codecommit:GetPullRequestApprovalStates",
    "codecommit:CreatePullRequest",
    "codecommit:CancelUploadArchive",
    "codecommit:DeletePullRequestApprovalRule",
    "codecommit:BatchGetPullRequests",
    "codecommit:ListBranches",
    "codecommit:GetUploadArchiveStatus",
    "codecommit:BatchDescribeMergeConflicts",
    "codecommit:UntagResource",
    "codecommit:PutRepositoryTriggers",
    "codecommit:DeleteFile",
    "codecommit:ListPullRequests",
    "codecommit:UpdateComment",
    "codecommit:GetRepositoryTriggers",
    "codecommit:PutCommentReaction",
    "codecommit:GitPush",
    "codecommit:MergePullRequestByFastForward",
    "codecommit:UpdateRepositoryDescription",
    "codecommit:GetCommentReactions",
    "codecommit:UpdatePullRequestApprovalRuleContent",
    "codecommit:CreateUnreferencedMergeCommit",
    "codecommit:UpdateRepositoryName",
    "codecommit:DescribeMergeConflicts",
    "codecommit:MergePullRequestByThreeWay",
    "codecommit:GetRepository",
    "codecommit:DisassociateApprovalRuleTemplateFromRepository",
    "codecommit:GetPullRequest",
    "codecommit:PostCommentForPullRequest",
    "codecommit:GitPull",
    "codecommit:DeleteCommentContent",
    "codecommit:CreatePullRequestApprovalRule",
    "codecommit:UpdateDefaultBranch",
    "codecommit:GetComment",
    "codecommit:GetFile",
    "codecommit:BatchGetRepositories",
    "codecommit:AssociateApprovalRuleTemplateWithRepository",
    "codecommit:MergeBranchesByFastForward",
    "codecommit:GetCommitHistory",
    "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
    "codecommit:GetCommitsFromMergeBase",
    "codecommit:MergeBranchesBySquash",
    "codecommit:GetFolder",
    "codecommit:CreateBranch",
    "codecommit:PutFile",
    "codecommit:GetMergeOptions",
    "codecommit:GetMergeCommit",
    "codecommit:GetPullRequestOverrideState",
    "codecommit:CreateCommit",
    "codecommit:UpdatePullRequestDescription",
    "codecommit:DeleteBranch",
    "codecommit:ListTagsForResource",
    "codecommit:PostCommentReply",
    "codecommit:UploadArchive",
    "codecommit:MergePullRequestBySquash",
    "codecommit:MergeBranchesByThreeWay",
    "codecommit:TestRepositoryTriggers",
    "codecommit:CreateRepository",
    "codecommit:PostCommentForComparedCommit",
    "codecommit:GetBlob",
    "codecommit:UpdatePullRequestTitle",
    "codecommit:TagResource",
    "codecommit:GetCommit",
    "codecommit:GetTree",
    "codecommit:GetMergeConflicts",
    "codecommit:EvaluatePullRequestApprovalRules",
    "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
    "codecommit:GetDifferences",
    "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
    "events:*",
    "events:DeleteRule",
    "events:CreateConnection",
    "events:ListTargetsByRule",
    "events:CreateEventBus",
    "events:DisableRule",
    "events:ListTagsForResource",
    "events:DescribeReplay",
    "events:DeleteConnection",
    "events:DescribeEndpoint",
    "events:CancelReplay",
    "events:PutTargets",
    "events:CreateEndpoint",
    "events:EnableRule",
    "events:TagResource",
    "events:DeleteEventBus",
    "events:DescribeRule",
    "events:RemoveTargets",
    "events:DescribeConnection",
    "events:CreateArchive",
    "events:UpdateArchive",
    "events:DescribeEventBus",
    "events:ListPartnerEventSourceAccounts",
    "events:PutRule",
    "events:DescribePartnerEventSource",
    "events:DeletePartnerEventSource",
    "events:DeauthorizeConnection",
    "events:DescribeArchive",
    "events:DeactivateEventSource",
    "events:UpdateEndpoint",
    "events:DeleteApiDestination",
    "events:DeleteArchive",
    "events:UpdateApiDestination",
    "events:UpdateConnection",
    "events:UntagResource",
    "events:InvokeApiDestination",
    "events:StartReplay",
    "events:DescribeApiDestination",
    "events:DeleteEndpoint",
    "events:CreatePartnerEventSource",
    "events:CreateApiDestination",
    "events:DescribeEventSource",
    "events:ActivateEventSource",
    "events:PutEvents",
    "sagemaker:*",
    "sagemaker:ListImageVersions",
    "sagemaker:CreateLabelingJob",
    "sagemaker:CreateEndpointConfig",
    "sagemaker:DescribeDevice",
    "sagemaker:StopHumanLoop",
    "sagemaker:DescribeDataQualityJobDefinition",
    "sagemaker:SendHeartbeat",
    "sagemaker:UpdateDevices",
    "sagemaker:CreateNotebookInstanceLifecycleConfig",
    "sagemaker:InvokeEndpointAsync",
    "sagemaker:UpdateWorkforce",
    "sagemaker:SendPipelineExecutionStepFailure",
    "sagemaker:DeleteModelQualityJobDefinition",
    "sagemaker:CreateImage",
    "sagemaker:CreateMonitoringSchedule",
    "sagemaker:CreateNotebookInstance",
    "sagemaker:CreateModelExplainabilityJobDefinition",
    "sagemaker:RegisterDevices",
    "sagemaker:AddTags",
    "sagemaker:CreateEndpoint",
    "sagemaker:DeleteExperiment",
    "sagemaker:DeleteModelExplainabilityJobDefinition",
    "sagemaker:DeleteEndpointConfig",
    "sagemaker:StopProcessingJob",
    "sagemaker:DeletePipeline",
    "sagemaker:DescribeDeviceFleet",
    "sagemaker:UpdateTrainingJob",
    "sagemaker:DescribeProject",
    "sagemaker:GetDeviceFleetReport",
    "sagemaker:DescribeProcessingJob",
    "sagemaker:DescribeAppImageConfig",
    "sagemaker:InvokeEndpoint",
    "sagemaker:CreateAlgorithm",
    "sagemaker:DescribeCompilationJob",
    "sagemaker:StopNotebookInstance",
    "sagemaker:UpdateAppImageConfig",
    "sagemaker:ListPipelineExecutionSteps",
    "sagemaker:UpdateAction",
    "sagemaker:StopTransformJob",
    "sagemaker:DescribePipelineDefinitionForExecution",
    "sagemaker:StopLabelingJob",
    "sagemaker:UpdateProject",
    "sagemaker:BatchGetMetrics",
    "sagemaker:DeleteImage",
    "sagemaker:CreateModel",
    "sagemaker:DeleteModel",
    "sagemaker:DeleteWorkteam",
    "sagemaker:DeleteEdgeDeploymentPlan",
    "sagemaker:BatchPutMetrics",
    "sagemaker:UpdateFeatureGroup",
    "sagemaker:ListPipelineExecutions",
    "sagemaker:CreateEdgePackagingJob",
    "sagemaker:CreateModelPackage",
    "sagemaker:DescribeUserProfile",
    "sagemaker:DescribeFeatureGroup",
    "sagemaker:DescribeEdgeDeploymentPlan",
    "sagemaker:DescribeHumanLoop",
    "sagemaker:DeleteEdgeDeploymentStage",
    "sagemaker:UpdateDeviceFleet",
    "sagemaker:CreateDataQualityJobDefinition",
    "sagemaker:CreateDeviceFleet",
    "sagemaker:DeleteUserProfile",
    "sagemaker:UpdateModelPackage",
    "sagemaker:DeleteAppImageConfig",
    "sagemaker:DescribeTrial",
    "sagemaker:DescribeModelExplainabilityJobDefinition",
    "sagemaker:DeleteApp",
    "sagemaker:DeleteFeatureGroup",
    "sagemaker:CreateExperiment",
    "sagemaker:CreateApp",
    "sagemaker:DescribeModelPackage",
    "sagemaker:CreateAction",
    "sagemaker:AssociateTrialComponent",
    "sagemaker:RetryPipelineExecution",
    "sagemaker:DescribeAutoMLJob",
    "sagemaker:StartMonitoringSchedule",
    "sagemaker:GetRecord",
    "sagemaker:UpdateFeatureMetadata",
    "sagemaker:CreateContext",
    "sagemaker:DeleteImageVersion",
    "sagemaker:DescribeTransformJob",
    "sagemaker:DescribeLabelingJob",
    "sagemaker:UpdateUserProfile",
    "sagemaker:DeleteDeviceFleet",
    "sagemaker:DescribeStudioLifecycleConfig",
    "sagemaker:DescribeInferenceRecommendationsJob",
    "sagemaker:DeleteAssociation",
    "sagemaker:CreateModelQualityJobDefinition",
    "sagemaker:DeleteProject",
    "sagemaker:DescribeArtifact",
    "sagemaker:DescribeEndpointConfig",
    "sagemaker:DeleteNotebookInstanceLifecycleConfig",
    "sagemaker:UpdateArtifact",
    "sagemaker:UpdateNotebookInstance",
    "sagemaker:CreateCompilationJob",
    "sagemaker:DescribeExperiment",
    "sagemaker:DeleteCodeRepository",
    "sagemaker:DescribeModelQualityJobDefinition",
    "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
    "sagemaker:DescribeFeatureMetadata",
    "sagemaker:UpdateMonitoringSchedule",
    "sagemaker:CreateFeatureGroup",
    "sagemaker:DeleteModelPackageGroupPolicy",
    "sagemaker:DeleteFlowDefinition",
    "sagemaker:StopEdgePackagingJob",
    "sagemaker:UpdateEndpointWeightsAndCapacities",
    "sagemaker:DescribeModelPackageGroup",
    "sagemaker:CreateModelPackageGroup",
    "sagemaker:DeleteRecord",
    "sagemaker:DescribeTrialComponent",
    "sagemaker:UpdateExperiment",
    "sagemaker:DeleteStudioLifecycleConfig",
    "sagemaker:CreateTransformJob",
    "sagemaker:CreateEdgeDeploymentStage",
    "sagemaker:DescribeApp",
    "sagemaker:DescribeHyperParameterTuningJob",
    "sagemaker:CreateTrainingJob",
    "sagemaker:GetModelPackageGroupPolicy",
    "sagemaker:DescribeFlowDefinition",
    "sagemaker:StopPipelineExecution",
    "sagemaker:UpdateWorkteam",
    "sagemaker:DeleteContext",
    "sagemaker:DeleteTags",
    "sagemaker:StartHumanLoop",
    "sagemaker:DescribeCodeRepository",
    "sagemaker:GetDeviceRegistration",
    "sagemaker:UpdateDomain",
    "sagemaker:SendPipelineExecutionStepSuccess",
    "sagemaker:BatchDescribeModelPackage",
    "sagemaker:DescribePipeline",
    "sagemaker:DeleteModelPackageGroup",
    "sagemaker:CreateProject",
    "sagemaker:DescribeModelBiasJobDefinition",
    "sagemaker:UpdatePipeline",
    "sagemaker:ListLabelingJobsForWorkteam",
    "sagemaker:UpdateContext",
    "sagemaker:StopCompilationJob",
    "sagemaker:StartEdgeDeploymentStage",
    "sagemaker:PutRecord",
    "sagemaker:DescribeAction",
    "sagemaker:DeleteEndpoint",
    "sagemaker:CreateTrial",
    "sagemaker:DescribeWorkteam",
    "sagemaker:DeleteDataQualityJobDefinition",
    "sagemaker:DescribeModel",
    "sagemaker:DeleteAction",
    "sagemaker:DescribeContext",
    "sagemaker:CreateHumanTaskUi",
    "sagemaker:CreateStudioLifecycleConfig",
    "sagemaker:CreateImageVersion",
    "sagemaker:CreateModelBiasJobDefinition",
    "sagemaker:DescribeNotebookInstanceLifecycleConfig",
    "sagemaker:StopHyperParameterTuningJob",
    "sagemaker:StopAutoMLJob",
    "sagemaker:CreateDomain",
    "sagemaker:DeleteTrialComponent",
    "sagemaker:DeleteWorkforce",
    "sagemaker:CreatePipeline",
    "sagemaker:DeleteModelBiasJobDefinition",
    "sagemaker:CreateArtifact",
    "sagemaker:StopMonitoringSchedule",
    "sagemaker:StopInferenceRecommendationsJob",
    "sagemaker:DescribeWorkforce",
    "sagemaker:UpdateCodeRepository",
    "sagemaker:CreateTrialComponent",
    "sagemaker:UpdatePipelineExecution",
    "sagemaker:StopTrainingJob",
    "sagemaker:DescribeAlgorithm",
    "sagemaker:DeleteHumanLoop",
    "sagemaker:CreatePresignedDomainUrl",
    "sagemaker:AddAssociation",
    "sagemaker:DescribeNotebookInstance",
    "sagemaker:PutModelPackageGroupPolicy",
    "sagemaker:DeleteAlgorithm",
    "sagemaker:CreateFlowDefinition",
    "sagemaker:DeleteHumanTaskUi",
    "sagemaker:StartNotebookInstance",
    "sagemaker:DeleteArtifact",
    "sagemaker:CreateEdgeDeploymentPlan",
    "sagemaker:DescribeHumanTaskUi",
    "sagemaker:CreateAutoMLJob",
    "sagemaker:CreateWorkforce",
    "sagemaker:CreatePresignedNotebookInstanceUrl",
    "sagemaker:DeleteMonitoringSchedule",
    "sagemaker:DescribeImage",
    "sagemaker:CreateInferenceRecommendationsJob",
    "sagemaker:DescribeImageVersion",
    "sagemaker:StopEdgeDeploymentStage",
    "sagemaker:DescribeEdgePackagingJob",
    "sagemaker:UpdateTrial",
    "sagemaker:DescribePipelineExecution",
    "sagemaker:StartPipelineExecution",
    "sagemaker:DescribeMonitoringSchedule",
    "sagemaker:ListModelPackages",
    "sagemaker:DescribeSubscribedWorkteam",
    "sagemaker:BatchGetRecord",
    "sagemaker:CreateAppImageConfig",
    "sagemaker:CreateUserProfile",
    "sagemaker:CreateProcessingJob",
    "sagemaker:CreateHyperParameterTuningJob",
    "sagemaker:DeleteNotebookInstance",
    "sagemaker:DeregisterDevices",
    "sagemaker:UpdateNotebookInstanceLifecycleConfig",
    "sagemaker:DescribeDomain",
    "sagemaker:ListPipelineParametersForExecution",
    "sagemaker:UpdateImage",
    "sagemaker:CreateWorkteam",
    "sagemaker:DeleteTrial",
    "sagemaker:DeleteDomain",
    "sagemaker:ListTags",
    "sagemaker:UpdateTrialComponent",
    "sagemaker:DisassociateTrialComponent",
    "sagemaker:UpdateEndpoint",
    "sagemaker:DeleteModelPackage",
    "sagemaker:DescribeTrainingJob",
    "sagemaker:DescribeEndpoint",
    "sagemaker:CreateCodeRepository",
    "lambda:*",
    "lambda:GetFunctionCodeSigningConfig",
    "lambda:UpdateFunctionCodeSigningConfig",
    "lambda:DeleteLayerVersion",
    "lambda:UpdateFunctionEventInvokeConfig",
    "lambda:DeleteFunctionCodeSigningConfig",
    "lambda:PublishVersion",
    "lambda:GetFunctionEventInvokeConfig",
    "lambda:GetAlias",
    "lambda:ListFunctionEventInvokeConfigs",
    "lambda:DeleteFunctionEventInvokeConfig",
    "lambda:DeleteFunctionUrlConfig",
    "lambda:UpdateAlias",
    "lambda:TagResource",
    "lambda:RemovePermission",
    "lambda:GetProvisionedConcurrencyConfig",
    "lambda:PutFunctionEventInvokeConfig",
    "lambda:GetLayerVersion",
    "lambda:CreateFunctionUrlConfig",
    "lambda:DeleteCodeSigningConfig",
    "lambda:DeleteFunctionConcurrency",
    "lambda:DeleteProvisionedConcurrencyConfig",
    "lambda:ListProvisionedConcurrencyConfigs",
    "lambda:PutFunctionCodeSigningConfig",
    "lambda:GetEventSourceMapping",
    "lambda:UntagResource",
    "lambda:PublishLayerVersion",
    "lambda:ListFunctionsByCodeSigningConfig",
    "lambda:UpdateFunctionConfiguration",
    "lambda:UpdateCodeSigningConfig",
    "lambda:AddLayerVersionPermission",
    "lambda:ListAliases",
    "lambda:DeleteEventSourceMapping",
    "lambda:GetCodeSigningConfig",
    "lambda:CreateAlias",
    "lambda:GetPolicy",
    "lambda:CreateFunction",
    "lambda:EnableReplication",
    "lambda:PutProvisionedConcurrencyConfig",
    "lambda:InvokeFunctionUrl",
    "lambda:DeleteFunction",
    "lambda:GetFunction",
    "lambda:AddPermission",
    "lambda:GetLayerVersionPolicy",
    "lambda:PutFunctionConcurrency",
    "lambda:ListFunctionUrlConfigs",
    "lambda:DisableReplication",
    "lambda:RemoveLayerVersionPermission",
    "lambda:UpdateFunctionCode",
    "lambda:ListVersionsByFunction",
    "lambda:GetFunctionUrlConfig",
    "lambda:InvokeFunction",
    "lambda:UpdateFunctionUrlConfig",
    "lambda:InvokeAsync",
    "lambda:GetFunctionConfiguration",
    "lambda:UpdateEventSourceMapping",
    "lambda:GetFunctionConcurrency",
    "lambda:ListTags",
    "lambda:DeleteAlias",
    "iotjobsdata:*",
    "iotjobsdata:DescribeJobExecution",
    "iotjobsdata:GetPendingJobExecutions",
    "iotjobsdata:StartNextPendingJobExecution",
    "iotjobsdata:UpdateJobExecution",
    "managedblockchain:*",
    "managedblockchain:CreateProposal",
    "managedblockchain:GetProposal",
    "managedblockchain:VoteOnProposal",
    "managedblockchain:UntagResource",
    "managedblockchain:DeleteMember",
    "managedblockchain:UpdateMember",
    "managedblockchain:TagResource",
    "managedblockchain:ListProposals",
    "managedblockchain:CreateMember",
    "managedblockchain:GetNetwork",
    "managedblockchain:UpdateNode",
    "managedblockchain:GetNode",
    "managedblockchain:DeleteNode",
    "managedblockchain:ListNodes",
    "managedblockchain:GetMember",
    "managedblockchain:ListProposalVotes",
    "managedblockchain:ListTagsForResource",
    "managedblockchain:ListMembers",
    "managedblockchain:CreateNode",
    "managedblockchain:RejectInvitation",
    "servicecatalog:*",
    "servicecatalog:DeleteAttributeGroup",
    "servicecatalog:DescribeProvisioningParameters",
    "servicecatalog:CreatePortfolio",
    "servicecatalog:CreateApplication",
    "servicecatalog:ListAssociatedResources",
    "servicecatalog:RejectPortfolioShare",
    "servicecatalog:AssociatePrincipalWithPortfolio",
    "servicecatalog:ListPrincipalsForPortfolio",
    "servicecatalog:ListAttributeGroupsForApplication",
    "servicecatalog:GetAttributeGroup",
    "servicecatalog:UpdateProduct",
    "servicecatalog:CreateProvisioningArtifact",
    "servicecatalog:ImportAsProvisionedProduct",
    "servicecatalog:ListPortfolioAccess",
    "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
    "servicecatalog:DeleteProduct",
    "servicecatalog:DisassociateResource",
    "servicecatalog:ListProvisioningArtifacts",
    "servicecatalog:AssociateResource",
    "servicecatalog:DeleteApplication",
    "servicecatalog:ListAssociatedAttributeGroups",
    "servicecatalog:DescribeProductAsAdmin",
    "servicecatalog:UntagResource",
    "servicecatalog:UpdatePortfolioShare",
    "servicecatalog:AssociateTagOptionWithResource",
    "servicecatalog:ListTagsForResource",
    "servicecatalog:TagResource",
    "servicecatalog:CreateAttributeGroup",
    "servicecatalog:ListServiceActionsForProvisioningArtifact",
    "servicecatalog:DisassociateAttributeGroup",
    "servicecatalog:GetApplication",
    "servicecatalog:DescribePortfolio",
    "servicecatalog:DisassociatePrincipalFromPortfolio",
    "servicecatalog:AssociateAttributeGroup",
    "servicecatalog:ProvisionProduct",
    "servicecatalog:DisassociateTagOptionFromResource",
    "servicecatalog:UpdateProvisioningArtifact",
    "servicecatalog:CreateProduct",
    "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
    "servicecatalog:AcceptPortfolioShare",
    "servicecatalog:ListPortfoliosForProduct",
    "servicecatalog:UpdateAttributeGroup",
    "servicecatalog:DescribePortfolioShares",
    "servicecatalog:GetAssociatedResource",
    "servicecatalog:CreateConstraint",
    "servicecatalog:DeletePortfolio",
    "servicecatalog:UpdatePortfolio",
    "servicecatalog:DescribeProvisioningArtifact",
    "servicecatalog:UpdateApplication",
    "servicecatalog:DeleteProvisioningArtifact",
    "servicecatalog:DeletePortfolioShare",
    "servicecatalog:DescribeProduct",
    "servicecatalog:ListLaunchPaths",
    "servicecatalog:CreatePortfolioShare",
    "aps:*",
    "aps:PutAlertManagerDefinition",
    "aps:ListAlertManagerAlerts",
    "aps:ListAlertManagerAlertGroups",
    "aps:DescribeAlertManagerDefinition",
    "aps:DeleteLoggingConfiguration",
    "aps:PutAlertManagerSilences",
    "aps:DescribeLoggingConfiguration",
    "aps:DescribeWorkspace",
    "aps:ListAlertManagerReceivers",
    "aps:ListAlerts",
    "aps:GetAlertManagerSilence",
    "aps:TagResource",
    "aps:DeleteAlertManagerDefinition",
    "aps:DeleteWorkspace",
    "aps:UntagResource",
    "aps:DeleteAlertManagerSilence",
    "aps:GetSeries",
    "aps:ListTagsForResource",
    "aps:DescribeRuleGroupsNamespace",
    "aps:QueryMetrics",
    "aps:GetLabels",
    "aps:GetAlertManagerStatus",
    "aps:DeleteRuleGroupsNamespace",
    "aps:PutRuleGroupsNamespace",
    "aps:RemoteWrite",
    "aps:GetMetricMetadata",
    "aps:CreateLoggingConfiguration",
    "aps:UpdateWorkspaceAlias",
    "aps:CreateAlertManagerDefinition",
    "aps:CreateRuleGroupsNamespace",
    "aps:ListRuleGroupsNamespaces",
    "aps:ListRules",
    "aps:ListAlertManagerSilences",
    "aps:CreateAlertManagerAlerts",
    "aps:UpdateLoggingConfiguration",
    "cognito-idp:*",
    "cognito-idp:AdminSetUserPassword",
    "cognito-idp:UpdateGroup",
    "cognito-idp:SetRiskConfiguration",
    "cognito-idp:AdminRemoveUserFromGroup",
    "cognito-idp:DeleteResourceServer",
    "cognito-idp:DeleteUserPoolClient",
    "cognito-idp:AdminListDevices",
    "cognito-idp:AdminUpdateUserAttributes",
    "cognito-idp:AdminLinkProviderForUser",
    "cognito-idp:StopUserImportJob",
    "cognito-idp:CreateResourceServer",
    "cognito-idp:GetGroup",
    "cognito-idp:ListUserPoolClients",
    "cognito-idp:CreateUserPoolClient",
    "cognito-idp:AdminAddUserToGroup",
    "cognito-idp:ListUserImportJobs",
    "cognito-idp:UpdateUserPoolDomain",
    "cognito-idp:CreateGroup",
    "cognito-idp:AdminResetUserPassword",
    "cognito-idp:DeleteUserPoolDomain",
    "cognito-idp:DeleteIdentityProvider",
    "cognito-idp:DescribeIdentityProvider",
    "cognito-idp:AdminRespondToAuthChallenge",
    "cognito-idp:AdminDisableProviderForUser",
    "cognito-idp:DeleteUserPool",
    "cognito-idp:UpdateResourceServer",
    "cognito-idp:DescribeResourceServer",
    "cognito-idp:AdminDisableUser",
    "cognito-idp:AdminCreateUser",
    "cognito-idp:DisassociateWebACL",
    "cognito-idp:AdminUpdateAuthEventFeedback",
    "cognito-idp:SetUserPoolMfaConfig",
    "cognito-idp:AdminUserGlobalSignOut",
    "cognito-idp:AdminForgetDevice",
    "cognito-idp:GetSigningCertificate",
    "cognito-idp:ListTagsForResource",
    "cognito-idp:GetUserPoolMfaConfig",
    "cognito-idp:AdminUpdateDeviceStatus",
    "cognito-idp:StartUserImportJob",
    "cognito-idp:GetWebACLForResource",
    "cognito-idp:UpdateAuthEventFeedback",
    "cognito-idp:DescribeUserPool",
    "cognito-idp:TagResource",
    "cognito-idp:ListUsersInGroup",
    "cognito-idp:AdminEnableUser",
    "cognito-idp:ListIdentityProviders",
    "cognito-idp:DescribeRiskConfiguration",
    "cognito-idp:AdminSetUserSettings",
    "cognito-idp:GetUICustomization",
    "cognito-idp:CreateUserImportJob",
    "cognito-idp:UpdateIdentityProvider",
    "cognito-idp:ListResourceServers",
    "cognito-idp:UpdateUserPool",
    "cognito-idp:CreateIdentityProvider",
    "cognito-idp:GetIdentityProviderByIdentifier",
    "cognito-idp:AdminGetUser",
    "cognito-idp:AdminSetUserMFAPreference",
    "cognito-idp:AssociateWebACL",
    "cognito-idp:AdminListUserAuthEvents",
    "cognito-idp:CreateUserPoolDomain",
    "cognito-idp:AdminDeleteUser",
    "cognito-idp:ListUsers",
    "cognito-idp:DescribeUserImportJob",
    "cognito-idp:AdminGetDevice",
    "cognito-idp:SetUICustomization",
    "cognito-idp:AdminConfirmSignUp",
    "cognito-idp:DescribeUserPoolClient",
    "cognito-idp:GetCSVHeader",
    "cognito-idp:AdminDeleteUserAttributes",
    "cognito-idp:UpdateUserPoolClient",
    "cognito-idp:DeleteGroup",
    "cognito-idp:ListGroups",
    "cognito-idp:UntagResource",
    "cognito-idp:ListResourcesForWebACL",
    "cognito-idp:AddCustomAttributes",
    "cognito-idp:AdminListGroupsForUser",
    "cognito-idp:AdminInitiateAuth",
    "amplifybackend:*",
    "amplifybackend:GetToken",
    "amplifybackend:GenerateBackendAPIModels",
    "amplifybackend:CloneBackend",
    "amplifybackend:GetBackendJob",
    "amplifybackend:CreateBackendConfig",
    "amplifybackend:RemoveAllBackends",
    "amplifybackend:GetBackendAPI",
    "amplifybackend:UpdateBackendAPI",
    "amplifybackend:CreateBackendAPI",
    "amplifybackend:GetBackendAPIModels",
    "amplifybackend:ListBackendJobs",
    "amplifybackend:DeleteBackendAuth",
    "amplifybackend:ImportBackendStorage",
    "amplifybackend:GetBackend",
    "amplifybackend:GetBackendStorage",
    "amplifybackend:DeleteBackendAPI",
    "amplifybackend:DeleteBackend",
    "amplifybackend:GetBackendAuth",
    "amplifybackend:CreateBackendAuth",
    "amplifybackend:UpdateBackendConfig",
    "amplifybackend:CreateBackend",
    "amplifybackend:CreateBackendStorage",
    "amplifybackend:DeleteToken",
    "amplifybackend:UpdateBackendAuth",
    "amplifybackend:ImportBackendAuth",
    "amplifybackend:CreateToken",
    "amplifybackend:DeleteBackendStorage",
    "amplifybackend:UpdateBackendJob",
    "amplifybackend:RemoveBackendConfig",
    "amplifybackend:UpdateBackendStorage",
    "autoscaling:*",
    "autoscaling:DeleteWarmPool",
    "autoscaling:UpdateAutoScalingGroup",
    "autoscaling:EnterStandby",
    "autoscaling:EnableMetricsCollection",
    "autoscaling:DeleteNotificationConfiguration",
    "autoscaling:CreateOrUpdateTags",
    "autoscaling:SetDesiredCapacity",
    "autoscaling:CancelInstanceRefresh",
    "autoscaling:DisableMetricsCollection",
    "autoscaling:DeleteAutoScalingGroup",
    "autoscaling:DeleteLaunchConfiguration",
    "autoscaling:PutLifecycleHook",
    "autoscaling:TerminateInstanceInAutoScalingGroup",
    "autoscaling:DeleteTags",
    "autoscaling:DeleteScheduledAction",
    "autoscaling:PutNotificationConfiguration",
    "autoscaling:CreateAutoScalingGroup",
    "autoscaling:DetachLoadBalancers",
    "autoscaling:PutScheduledUpdateGroupAction",
    "autoscaling:AttachInstances",
    "autoscaling:ExecutePolicy",
    "autoscaling:CompleteLifecycleAction",
    "autoscaling:SetInstanceHealth",
    "autoscaling:AttachLoadBalancers",
    "autoscaling:DeletePolicy",
    "autoscaling:CreateLaunchConfiguration",
    "autoscaling:SuspendProcesses",
    "autoscaling:BatchPutScheduledUpdateGroupAction",
    "autoscaling:ExitStandby",
    "autoscaling:PutWarmPool",
    "autoscaling:AttachLoadBalancerTargetGroups",
    "autoscaling:DeleteLifecycleHook",
    "autoscaling:DetachLoadBalancerTargetGroups",
    "autoscaling:SetInstanceProtection",
    "autoscaling:DetachInstances",
    "autoscaling:RecordLifecycleActionHeartbeat",
    "autoscaling:ResumeProcesses",
    "autoscaling:BatchDeleteScheduledAction",
    "autoscaling:PutScalingPolicy",
    "autoscaling:StartInstanceRefresh",
    "synthetics:*",
    "synthetics:ListTagsForResource",
    "synthetics:ListGroupResources",
    "synthetics:StopCanary",
    "synthetics:UntagResource",
    "synthetics:ListAssociatedGroups",
    "synthetics:DeleteCanary",
    "synthetics:UpdateCanary",
    "synthetics:GetCanaryRuns",
    "synthetics:TagResource",
    "synthetics:GetCanary",
    "synthetics:GetGroup",
    "synthetics:DeleteGroup",
    "synthetics:AssociateResource",
    "synthetics:StartCanary",
    "synthetics:DisassociateResource",
    "gamelift:*",
    "gamelift:GetInstanceAccess",
    "gamelift:RequestUploadCredentials",
    "gamelift:DescribeFleetLocationAttributes",
    "gamelift:TagResource",
    "gamelift:ResumeGameServerGroup",
    "gamelift:ListTagsForResource",
    "gamelift:UpdateScript",
    "gamelift:DescribeBuild",
    "gamelift:DescribeFleetLocationCapacity",
    "gamelift:ClaimGameServer",
    "gamelift:StartGameSessionPlacement",
    "gamelift:DescribeInstances",
    "gamelift:DeleteFleet",
    "gamelift:DeleteMatchmakingConfiguration",
    "gamelift:DescribeScript",
    "gamelift:UpdateGameSessionQueue",
    "gamelift:UpdateGameServerGroup",
    "gamelift:DeleteScript",
    "gamelift:ListGameServers",
    "gamelift:DescribeGameServerGroup",
    "gamelift:DeleteBuild",
    "gamelift:UpdateGameServer",
    "gamelift:DescribeScalingPolicies",
    "gamelift:DescribeGameServer",
    "gamelift:ResolveAlias",
    "gamelift:UpdateFleetAttributes",
    "gamelift:DeleteMatchmakingRuleSet",
    "gamelift:DescribeRuntimeConfiguration",
    "gamelift:UpdateRuntimeConfiguration",
    "gamelift:DescribeGameServerInstances",
    "gamelift:DeleteScalingPolicy",
    "gamelift:UpdateFleetCapacity",
    "gamelift:DeleteGameSessionQueue",
    "gamelift:StartFleetActions",
    "gamelift:DeleteGameServerGroup",
    "gamelift:DescribeFleetPortSettings",
    "gamelift:DescribeFleetEvents",
    "gamelift:DescribeFleetLocationUtilization",
    "gamelift:DeleteFleetLocations",
    "gamelift:DeleteAlias",
    "gamelift:UpdateBuild",
    "gamelift:DeregisterGameServer",
    "gamelift:UpdateFleetPortSettings",
    "gamelift:PutScalingPolicy",
    "gamelift:SuspendGameServerGroup",
    "gamelift:CreateFleetLocations",
    "gamelift:UpdateAlias",
    "gamelift:RegisterGameServer",
    "gamelift:StopFleetActions",
    "gamelift:UpdateMatchmakingConfiguration",
    "gamelift:DescribeAlias",
    "gamelift:UntagResource",
    "nimble:*",
    "nimble:DeleteStreamingImage",
    "nimble:GetStudioMember",
    "nimble:DeleteLaunchProfileMember",
    "nimble:UpdateStudioComponent",
    "nimble:UpdateLaunchProfileMember",
    "nimble:GetStreamingImage",
    "nimble:CreateLaunchProfile",
    "nimble:ListStudioComponents",
    "nimble:CreateStudio",
    "nimble:CreateStreamingSession",
    "nimble:UpdateLaunchProfile",
    "nimble:CreateStreamingSessionStream",
    "nimble:DeleteStudioComponent",
    "nimble:ListEulas",
    "nimble:GetLaunchProfileMember",
    "nimble:UpdateStudio",
    "nimble:PutLaunchProfileMembers",
    "nimble:ListStudioMembers",
    "nimble:PutStudioLogEvents",
    "nimble:ListStreamingSessions",
    "nimble:StartStudioSSOConfigurationRepair",
    "nimble:ListLaunchProfiles",
    "nimble:GetStudioComponent",
    "nimble:DeleteStudioMember",
    "nimble:UpdateStreamingImage",
    "nimble:DeleteStreamingSession",
    "nimble:GetStreamingSessionStream",
    "nimble:CreateStudioComponent",
    "nimble:DeleteStudio",
    "nimble:StartStreamingSession",
    "nimble:PutStudioMembers",
    "nimble:ListTagsForResource",
    "nimble:CreateStreamingImage",
    "nimble:GetLaunchProfileInitialization",
    "nimble:ListLaunchProfileMembers",
    "nimble:AcceptEulas",
    "nimble:GetStreamingSession",
    "nimble:GetEula",
    "nimble:GetLaunchProfileDetails",
    "nimble:GetLaunchProfile",
    "nimble:ListEulaAcceptances",
    "nimble:UntagResource",
    "nimble:TagResource",
    "nimble:GetStudio",
    "nimble:ListStreamingImages",
    "nimble:StopStreamingSession",
    "nimble:DeleteLaunchProfile",
    "kinesisvideo:*",
    "kinesisvideo:DeleteStream",
    "kinesisvideo:DescribeImageGenerationConfiguration",
    "kinesisvideo:GetDataEndpoint",
    "kinesisvideo:GetSignalingChannelEndpoint",
    "kinesisvideo:CreateStream",
    "kinesisvideo:GetDASHStreamingSessionURL",
    "kinesisvideo:UpdateSignalingChannel",
    "kinesisvideo:ListFragments",
    "kinesisvideo:SendAlexaOfferToMaster",
    "kinesisvideo:DescribeSignalingChannel",
    "kinesisvideo:DescribeStream",
    "kinesisvideo:UpdateDataRetention",
    "kinesisvideo:GetMediaForFragmentList",
    "kinesisvideo:DescribeNotificationConfiguration",
    "kinesisvideo:ConnectAsViewer",
    "kinesisvideo:UpdateStream",
    "kinesisvideo:DeleteSignalingChannel",
    "kinesisvideo:GetHLSStreamingSessionURL",
    "kinesisvideo:GetMedia",
    "kinesisvideo:GetImages",
    "kinesisvideo:ListTagsForStream",
    "kinesisvideo:CreateSignalingChannel",
    "kinesisvideo:GetClip",
    "kinesisvideo:GetIceServerConfig",
    "kinesisvideo:TagResource",
    "kinesisvideo:UpdateImageGenerationConfiguration",
    "kinesisvideo:ListTagsForResource",
    "kinesisvideo:UpdateNotificationConfiguration",
    "kinesisvideo:UntagResource",
    "kinesisvideo:TagStream",
    "kinesisvideo:PutMedia",
    "kinesisvideo:UntagStream",
    "kinesisvideo:ConnectAsMaster",
    "transcribe:*",
    "transcribe:UpdateVocabulary",
    "transcribe:GetVocabularyFilter",
    "transcribe:GetMedicalTranscriptionJob",
    "transcribe:DeleteVocabulary",
    "transcribe:DescribeLanguageModel",
    "transcribe:GetTranscriptionJob",
    "transcribe:DeleteMedicalVocabulary",
    "transcribe:GetVocabulary",
    "transcribe:DeleteLanguageModel",
    "transcribe:GetMedicalVocabulary",
    "transcribe:UpdateVocabularyFilter",
    "transcribe:DeleteVocabularyFilter",
    "transcribe:DeleteMedicalTranscriptionJob",
    "transcribe:DeleteTranscriptionJob",
    "transcribe:UpdateMedicalVocabulary",
    "sqs:*",
    "sqs:DeleteMessage",
    "sqs:ListQueueTags",
    "sqs:CreateQueue",
    "sqs:RemovePermission",
    "sqs:ChangeMessageVisibility",
    "sqs:UntagQueue",
    "sqs:DeleteQueue",
    "sqs:PurgeQueue",
    "sqs:ReceiveMessage",
    "sqs:GetQueueUrl",
    "sqs:GetQueueAttributes",
    "sqs:AddPermission",
    "sqs:SetQueueAttributes",
    "sqs:TagQueue",
    "sqs:ListDeadLetterSourceQueues",
    "sqs:SendMessage",
    "iot1click:*",
    "iot1click:TagResource",
    "iot1click:AssociateDeviceWithPlacement",
    "iot1click:DescribeDevice",
    "iot1click:UntagResource",
    "iot1click:UpdatePlacement",
    "iot1click:DeleteProject",
    "iot1click:DisassociateDeviceFromPlacement",
    "iot1click:DescribePlacement",
    "iot1click:ListTagsForResource",
    "iot1click:InitiateDeviceClaim",
    "iot1click:GetDeviceMethods",
    "iot1click:InvokeDeviceMethod",
    "iot1click:DescribeProject",
    "iot1click:CreatePlacement",
    "iot1click:UnclaimDevice",
    "iot1click:UpdateDeviceState",
    "iot1click:GetDevicesInPlacement",
    "iot1click:ListDeviceEvents",
    "iot1click:DeletePlacement",
    "iot1click:FinalizeDeviceClaim",
    "iot1click:ListPlacements",
    "iot1click:UpdateProject",
    "iot1click:CreateProject",
    "workspaces:*",
    "workspaces:CreateConnectClientAddIn",
    "workspaces:DeleteClientBranding",
    "workspaces:DescribeClientBranding",
    "workspaces:ModifyWorkspaceCreationProperties",
    "workspaces:UpdateWorkspaceBundle",
    "workspaces:TerminateWorkspaces",
    "workspaces:DisassociateIpGroups",
    "workspaces:Stream",
    "workspaces:DescribeClientProperties",
    "workspaces:DescribeWorkspaceSnapshots",
    "workspaces:DeleteConnectClientAddIn",
    "workspaces:UpdateWorkspaceImagePermission",
    "workspaces:CreateWorkspaceImage",
    "workspaces:RestoreWorkspace",
    "workspaces:DeleteWorkspaceBundle",
    "workspaces:AssociateConnectionAlias",
    "workspaces:RebuildWorkspaces",
    "workspaces:AssociateIpGroups",
    "workspaces:DisassociateConnectionAlias",
    "workspaces:DeleteWorkspaceImage",
    "workspaces:AuthorizeIpRules",
    "workspaces:RevokeIpRules",
    "workspaces:CreateUpdatedWorkspaceImage",
    "workspaces:CreateWorkspaces",
    "workspaces:RebootWorkspaces",
    "workspaces:CopyWorkspaceImage",
    "workspaces:DeleteIpGroup",
    "workspaces:ModifySamlProperties",
    "workspaces:ModifyWorkspaceState",
    "workspaces:CreateWorkspaceBundle",
    "workspaces:ModifyWorkspaceProperties",
    "workspaces:DescribeConnectClientAddIns",
    "workspaces:StartWorkspaces",
    "workspaces:DescribeIpGroups",
    "workspaces:UpdateConnectClientAddIn",
    "workspaces:RegisterWorkspaceDirectory",
    "workspaces:MigrateWorkspace",
    "workspaces:UpdateRulesOfIpGroup",
    "workspaces:StopWorkspaces",
    "workspaces:ModifyWorkspaceAccessProperties",
    "workspaces:DescribeWorkspaceImagePermissions",
    "workspaces:UpdateConnectionAliasPermission",
    "workspaces:ModifyClientProperties",
    "workspaces:DeregisterWorkspaceDirectory",
    "workspaces:DescribeConnectionAliasPermissions",
    "workspaces:DeleteConnectionAlias",
    "workspaces:ModifySelfservicePermissions",
    "workspaces:ImportClientBranding",
    "ram:*",
    "ram:DeleteResourceShare",
    "ram:AssociateResourceShare",
    "ram:AcceptResourceShareInvitation",
    "ram:ListResourceSharePermissions",
    "ram:ListPendingInvitationResources",
    "ram:DisassociateResourceSharePermission",
    "ram:TagResource",
    "ram:PromoteResourceShareCreatedFromPolicy",
    "ram:UntagResource",
    "ram:DisassociateResourceShare",
    "ram:GetPermission",
    "ram:UpdateResourceShare",
    "ram:RejectResourceShareInvitation",
    "ram:AssociateResourceSharePermission",
    "cloud9:*",
    "cloud9:UpdateEnvironment",
    "cloud9:CreateEnvironmentToken",
    "cloud9:ListTagsForResource",
    "cloud9:DescribeEnvironmentStatus",
    "cloud9:DescribeEC2Remote",
    "cloud9:DescribeSSHRemote",
    "cloud9:GetEnvironmentSettings",
    "cloud9:DescribeEnvironments",
    "cloud9:GetMembershipSettings",
    "cloud9:UpdateMembershipSettings",
    "cloud9:DeleteEnvironmentMembership",
    "cloud9:UpdateSSHRemote",
    "cloud9:DescribeEnvironmentMemberships",
    "cloud9:UntagResource",
    "cloud9:ModifyTemporaryCredentialsOnEnvironmentEC2",
    "cloud9:UpdateEnvironmentMembership",
    "cloud9:TagResource",
    "cloud9:UpdateEnvironmentSettings",
    "cloud9:CreateEnvironmentMembership",
    "cloud9:GetEnvironmentConfig",
    "cloud9:ActivateEC2Remote",
    "cloud9:DeleteEnvironment",
    "ssm:*",
    "ssm:GetOpsSummary",
    "ssm:StartAutomationExecution",
    "ssm:StartChangeRequestExecution",
    "ssm:UpdateDocumentMetadata",
    "ssm:DeregisterTaskFromMaintenanceWindow",
    "ssm:RegisterDefaultPatchBaseline",
    "ssm:GetMaintenanceWindow",
    "ssm:StartSession",
    "ssm:UpdateDocumentDefaultVersion",
    "ssm:DescribeAssociation",
    "ssm:DeregisterManagedInstance",
    "ssm:GetOpsItem",
    "ssm:GetCalendarState",
    "ssm:RemoveTagsFromResource",
    "ssm:ListInstanceAssociations",
    "ssm:UpdateInstanceInformation",
    "ssm:DeleteResourceDataSync",
    "ssm:GetMaintenanceWindowTask",
    "ssm:CreateAssociation",
    "ssm:CreateResourceDataSync",
    "ssm:GetParameterHistory",
    "ssm:CancelMaintenanceWindowExecution",
    "ssm:StopAutomationExecution",
    "ssm:UnlabelParameterVersion",
    "ssm:DescribeDocument",
    "ssm:ResetServiceSetting",
    "ssm:UpdateInstanceAssociationStatus",
    "ssm:DeleteAssociation",
    "ssm:GetPatchBaseline",
    "ssm:UpdatePatchBaseline",
    "ssm:GetDocument",
    "ssm:AddTagsToResource",
    "ssm:GetAutomationExecution",
    "ssm:DescribeInstanceAssociationsStatus",
    "ssm:DescribeEffectivePatchesForPatchBaseline",
    "ssm:GetParameters",
    "ssm:DisassociateOpsItemRelatedItem",
    "ssm:GetDefaultPatchBaseline",
    "ssm:PutComplianceItems",
    "ssm:LabelParameterVersion",
    "ssm:DescribeMaintenanceWindowExecutions",
    "ssm:GetCalendar",
    "ssm:UpdateMaintenanceWindow",
    "ssm:AssociateOpsItemRelatedItem",
    "ssm:DeleteDocument",
    "ssm:UpdateOpsMetadata",
    "ssm:DeregisterTargetFromMaintenanceWindow",
    "ssm:DescribeDocumentPermission",
    "ssm:ResumeSession",
    "ssm:CreateAssociationBatch",
    "ssm:PutCalendar",
    "ssm:DescribeAssociationExecutionTargets",
    "ssm:UpdateResourceDataSync",
    "ssm:GetParameter",
    "ssm:DeleteParameter",
    "ssm:CreateDocument",
    "ssm:DescribeDocumentParameters",
    "ssm:ListAssociationVersions",
    "ssm:ModifyDocumentPermission",
    "ssm:RegisterTargetWithMaintenanceWindow",
    "ssm:UpdateDocument",
    "ssm:DeleteOpsMetadata",
    "ssm:UpdateManagedInstanceRole",
    "ssm:GetPatchBaselineForPatchGroup",
    "ssm:ListTagsForResource",
    "ssm:DescribeMaintenanceWindowTasks",
    "ssm:UpdateAssociation",
    "ssm:DeregisterPatchBaselineForPatchGroup",
    "ssm:GetServiceSetting",
    "ssm:GetOpsMetadata",
    "ssm:RegisterTaskWithMaintenanceWindow",
    "ssm:UpdateMaintenanceWindowTask",
    "ssm:DescribeMaintenanceWindowExecutionTasks",
    "ssm:PutParameter",
    "ssm:RegisterPatchBaselineForPatchGroup",
    "ssm:UpdateOpsItem",
    "ssm:DeletePatchBaseline",
    "ssm:ListDocumentVersions",
    "ssm:SendCommand",
    "ssm:TerminateSession",
    "ssm:DescribeEffectiveInstanceAssociations",
    "ssm:DescribeAssociationExecutions",
    "ssm:GetParametersByPath",
    "ssm:GetConnectionStatus",
    "ssm:DescribeAutomationStepExecutions",
    "ssm:UpdateMaintenanceWindowTarget",
    "ssm:DeleteParameters",
    "ssm:SendAutomationSignal",
    "ssm:StartAssociationsOnce",
    "ssm:UpdateAssociationStatus",
    "ssm:ListDocumentMetadataHistory",
    "ssm:UpdateServiceSetting",
    "ssm:DeleteMaintenanceWindow",
    "ssm:DescribeMaintenanceWindowTargets",
    "ssm-contacts:*",
    "ssm-contacts:DeleteContact",
    "ssm-contacts:ListPagesByEngagement",
    "ssm-contacts:ActivateContactChannel",
    "ssm-contacts:StopEngagement",
    "ssm-contacts:DescribePage",
    "ssm-contacts:DeactivateContactChannel",
    "ssm-contacts:GetContact",
    "ssm-contacts:ListPageReceipts",
    "ssm-contacts:CreateContactChannel",
    "ssm-contacts:UntagResource",
    "ssm-contacts:TagResource",
    "ssm-contacts:StartEngagement",
    "ssm-contacts:PutContactPolicy",
    "ssm-contacts:ListContactChannels",
    "ssm-contacts:SendActivationCode",
    "ssm-contacts:DescribeEngagement",
    "ssm-contacts:ListPagesByContact",
    "ssm-contacts:DeleteContactChannel",
    "ssm-contacts:UpdateContact",
    "ssm-contacts:GetContactPolicy",
    "ssm-contacts:AssociateContact",
    "ssm-contacts:AcceptPage",
    "ssm-contacts:UpdateContactChannel",
    "ssm-contacts:CreateContact",
    "ssm-contacts:ListTagsForResource",
    "ssm-contacts:GetContactChannel",
    "states:*",
    "states:DescribeExecution",
    "states:ListExecutions",
    "states:TagResource",
    "states:GetExecutionHistory",
    "states:DescribeActivity",
    "states:StartExecution",
    "states:GetActivityTask",
    "states:UpdateStateMachine",
    "states:DeleteStateMachine",
    "states:CreateActivity",
    "states:StartSyncExecution",
    "states:DescribeStateMachine",
    "states:CreateStateMachine",
    "states:DeleteActivity",
    "states:UntagResource",
    "states:StopExecution",
    "states:DescribeStateMachineForExecution",
    "states:ListTagsForResource",
    "amplify:*",
    "amplify:DeleteDomainAssociation",
    "amplify:DeleteApp",
    "amplify:CreateBranch",
    "amplify:CreateWebHook",
    "amplify:GetApp",
    "amplify:DeleteBackendEnvironment",
    "amplify:CreateApp",
    "amplify:GetWebHook",
    "amplify:UntagResource",
    "amplify:UpdateApp",
    "amplify:GetArtifactUrl",
    "amplify:DeleteBranch",
    "amplify:UpdateWebHook",
    "amplify:GetDomainAssociation",
    "amplify:ListDomainAssociations",
    "amplify:GetBranch",
    "amplify:GenerateAccessLogs",
    "amplify:TagResource",
    "amplify:StopJob",
    "amplify:StartJob",
    "amplify:StartDeployment",
    "amplify:ListWebHooks",
    "amplify:GetBackendEnvironment",
    "amplify:ListArtifacts",
    "amplify:UpdateDomainAssociation",
    "amplify:DeleteWebHook",
    "amplify:DeleteJob",
    "amplify:GetJob",
    "amplify:ListBranches",
    "amplify:CreateDeployment",
    "amplify:CreateBackendEnvironment",
    "amplify:ListBackendEnvironments",
    "amplify:ListJobs",
    "amplify:UpdateBranch",
    "amplify:CreateDomainAssociation",
    "amplify:ListTagsForResource",
    "drs:*",
    "drs:TerminateRecoveryInstances",
    "drs:UpdateReplicationConfiguration",
    "drs:RetryDataReplication",
    "drs:GetAgentRuntimeConfigurationForDrs",
    "drs:UpdateFailbackClientLastSeenForDrs",
    "drs:GetAgentConfirmedResumeInfoForDrs",
    "drs:DescribeJobLogItems",
    "drs:GetReplicationConfiguration",
    "drs:UpdateFailbackReplicationConfiguration",
    "drs:UntagResource",
    "drs:SendVolumeStatsForDrs",
    "drs:NotifyAgentReplicationProgressForDrs",
    "drs:DeleteSourceServer",
    "drs:StartFailbackLaunch",
    "drs:BatchCreateVolumeSnapshotGroupForDrs",
    "drs:UpdateAgentSourcePropertiesForDrs",
    "drs:NotifyAgentDisconnectedForDrs",
    "drs:UpdateReplicationCertificateForDrs",
    "drs:CreateConvertedSnapshotForDrs",
    "drs:UpdateAgentReplicationInfoForDrs",
    "drs:DescribeRecoverySnapshots",
    "drs:UpdateAgentReplicationProcessStateForDrs",
    "drs:AssociateFailbackClientToRecoveryInstanceForDrs",
    "drs:StopFailback",
    "drs:DeleteReplicationConfigurationTemplate",
    "drs:GetFailbackLaunchRequestedForDrs",
    "drs:GetFailbackCommandForDrs",
    "drs:TagResource",
    "drs:GetAgentReplicationInfoForDrs",
    "drs:UpdateReplicationConfigurationTemplate",
    "drs:UpdateAgentBacklogForDrs",
    "drs:DisconnectRecoveryInstance",
    "drs:NotifyReplicationServerAuthenticationForDrs",
    "drs:DeleteJob",
    "drs:UpdateAgentConversionInfoForDrs",
    "drs:CreateRecoveryInstanceForDrs",
    "drs:GetFailbackReplicationConfiguration",
    "drs:NotifyVolumeEventForDrs",
    "drs:NotifyAgentConnectedForDrs",
    "drs:UpdateFailbackClientDeviceMappingForDrs",
    "drs:IssueAgentCertificateForDrs",
    "drs:GetAgentSnapshotCreditsForDrs",
    "drs:DisconnectSourceServer",
    "drs:DeleteRecoveryInstance",
    "drs:StartRecovery",
    "drs:GetAgentCommandForDrs",
    "drs:UpdateLaunchConfiguration",
    "drs:SendAgentMetricsForDrs",
    "drs:GetLaunchConfiguration",
    "drs:NotifyAgentAuthenticationForDrs",
    "drs:SendAgentLogsForDrs",
    "drs:GetSuggestedFailbackClientDeviceMappingForDrs",
    "drs:NotifyConsistencyAttainedForDrs",
    "cloudformation:*",
    "cloudformation:UpdateStackInstances",
    "cloudformation:RollbackStack",
    "cloudformation:CancelUpdateStack",
    "cloudformation:DetectStackSetDrift",
    "cloudformation:ContinueUpdateRollback",
    "cloudformation:RecordHandlerProgress",
    "cloudformation:ListStackInstances",
    "cloudformation:ListStackSetOperationResults",
    "cloudformation:DeleteChangeSet",
    "cloudformation:ImportStacksToStackSet",
    "cloudformation:DescribeStackSetOperation",
    "cloudformation:GetTemplate",
    "cloudformation:ListChangeSets",
    "cloudformation:StopStackSetOperation",
    "cloudformation:DescribeStackSet",
    "cloudformation:DeleteStack",
    "cloudformation:CreateStackInstances",
    "cloudformation:GetTemplateSummary",
    "cloudformation:DetectStackResourceDrift",
    "cloudformation:UntagResource",
    "cloudformation:SetStackPolicy",
    "cloudformation:DescribeStackEvents",
    "cloudformation:DescribeStackResourceDrifts",
    "cloudformation:DescribeStackInstance",
    "cloudformation:UpdateTerminationProtection",
    "cloudformation:DeleteStackInstances",
    "cloudformation:ExecuteChangeSet",
    "cloudformation:GetStackPolicy",
    "cloudformation:ListStackResources",
    "cloudformation:DeleteStackSet",
    "cloudformation:DescribeStackResources",
    "cloudformation:DescribeStackResource",
    "cloudformation:CreateChangeSet",
    "cloudformation:DetectStackDrift",
    "cloudformation:UpdateStack",
    "cloudformation:TagResource",
    "cloudformation:SignalResource",
    "cloudformation:DescribeChangeSetHooks",
    "cloudformation:ListStackSetOperations",
    "cloudformation:DescribeStacks",
    "cloudformation:ListStackSets",
    "cloudformation:UpdateStackSet",
    "cloudformation:DescribeChangeSet",
    "cloudformation:CreateStack",
    "personalize:*",
    "personalize:CreateBatchSegmentJob",
    "personalize:DeleteSolution",
    "personalize:DeleteDataset",
    "personalize:DescribeBatchSegmentJob",
    "personalize:DescribeDatasetGroup",
    "personalize:CreateDatasetExportJob",
    "personalize:CreateSolution",
    "personalize:CreateSchema",
    "personalize:PutItems",
    "personalize:DescribeRecipe",
    "personalize:DescribeDatasetExportJob",
    "personalize:CreateBatchInferenceJob",
    "personalize:CreateDatasetGroup",
    "personalize:StartRecommender",
    "personalize:DeleteEventTracker",
    "personalize:DeleteRecommender",
    "personalize:DescribeBatchInferenceJob",
    "personalize:DeleteDatasetGroup",
    "personalize:StopSolutionVersionCreation",
    "personalize:CreateEventTracker",
    "personalize:DeleteCampaign",
    "personalize:DescribeSolution",
    "personalize:GetPersonalizedRanking",
    "personalize:DescribeRecommender",
    "personalize:DeleteSchema",
    "personalize:DescribeAlgorithm",
    "personalize:DescribeSolutionVersion",
    "personalize:CreateRecommender",
    "personalize:CreateSolutionVersion",
    "personalize:CreateCampaign",
    "personalize:DescribeCampaign",
    "personalize:DescribeFeatureTransformation",
    "personalize:UpdateCampaign",
    "personalize:StopRecommender",
    "personalize:PutUsers",
    "personalize:DescribeDataset",
    "personalize:CreateFilter",
    "personalize:DescribeDatasetImportJob",
    "personalize:GetRecommendations",
    "personalize:PutEvents",
    "personalize:DeleteFilter",
    "personalize:DescribeSchema",
    "personalize:UpdateRecommender",
    "personalize:GetSolutionMetrics",
    "personalize:DescribeFilter",
    "personalize:DescribeEventTracker",
    "personalize:CreateDatasetImportJob",
    "personalize:CreateDataset",
    "dynamodb:*",
    "dynamodb:ExportTableToPointInTime",
    "dynamodb:RestoreTableFromBackup",
    "dynamodb:UpdateTimeToLive",
    "dynamodb:CreateTableReplica",
    "dynamodb:CreateGlobalTable",
    "dynamodb:DescribeImport",
    "dynamodb:EnableKinesisStreamingDestination",
    "dynamodb:ImportTable",
    "dynamodb:DescribeTable",
    "dynamodb:ListTagsOfResource",
    "dynamodb:UpdateContributorInsights",
    "dynamodb:PartiQLInsert",
    "dynamodb:CreateTable",
    "dynamodb:DeleteBackup",
    "dynamodb:UpdateGlobalTableSettings",
    "dynamodb:GetRecords",
    "dynamodb:UpdateTableReplicaAutoScaling",
    "dynamodb:UpdateGlobalTable",
    "dynamodb:DisableKinesisStreamingDestination",
    "dynamodb:DeleteItem",
    "dynamodb:PartiQLUpdate",
    "dynamodb:GetShardIterator",
    "dynamodb:DescribeGlobalTableSettings",
    "dynamodb:BatchGetItem",
    "dynamodb:RestoreTableToPointInTime",
    "dynamodb:PartiQLSelect",
    "dynamodb:DescribeTableReplicaAutoScaling",
    "dynamodb:Query",
    "dynamodb:DescribeTimeToLive",
    "dynamodb:DescribeBackup",
    "dynamodb:DescribeContributorInsights",
    "dynamodb:DescribeExport",
    "dynamodb:DeleteTableReplica",
    "dynamodb:DeleteTable",
    "dynamodb:UpdateItem",
    "dynamodb:ConditionCheckItem",
    "dynamodb:DescribeKinesisStreamingDestination",
    "dynamodb:RestoreTableFromAwsBackup",
    "dynamodb:UpdateContinuousBackups",
    "dynamodb:GetItem",
    "dynamodb:BatchWriteItem",
    "dynamodb:DescribeStream",
    "dynamodb:StartAwsBackupJob",
    "dynamodb:UpdateTable",
    "dynamodb:UntagResource",
    "dynamodb:DescribeContinuousBackups",
    "dynamodb:CreateBackup",
    "dynamodb:TagResource",
    "dynamodb:DescribeGlobalTable",
    "dynamodb:PartiQLDelete",
    "dynamodb:Scan",
    "dynamodb:PutItem",
    "cognito-identity:*",
    "cognito-identity:DeleteIdentityPool",
    "cognito-identity:ListIdentities",
    "cognito-identity:LookupDeveloperIdentity",
    "cognito-identity:UpdateIdentityPool",
    "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
    "cognito-identity:TagResource",
    "cognito-identity:DescribeIdentityPool",
    "cognito-identity:GetIdentityPoolRoles",
    "cognito-identity:MergeDeveloperIdentities",
    "cognito-identity:UnlinkDeveloperIdentity",
    "cognito-identity:GetPrincipalTagAttributeMap",
    "cognito-identity:UntagResource",
    "cognito-identity:ListTagsForResource",
    "identitystore:*",
    "identitystore:DeleteGroupMembership",
    "identitystore:DescribeGroupMembership",
    "identitystore:CreateGroupMembership",
    "identitystore:ListUsers",
    "identitystore:DeleteGroup",
    "identitystore:UpdateUser",
    "identitystore:GetGroupMembershipId",
    "identitystore:CreateGroup",
    "identitystore:DescribeUser",
    "identitystore:GetGroupId",
    "identitystore:ListGroupMemberships",
    "identitystore:IsMemberInGroups",
    "identitystore:DescribeGroup",
    "identitystore:ListGroupMembershipsForMember",
    "identitystore:CreateUser",
    "identitystore:DeleteUser",
    "identitystore:UpdateGroup",
    "identitystore:ListGroups",
    "identitystore:GetUserId",
    "iotevents:*",
    "iotevents:DescribeAlarmModel",
    "iotevents:BatchDisableAlarm",
    "iotevents:BatchDeleteDetector",
    "iotevents:DescribeAlarm",
    "iotevents:DescribeDetectorModel",
    "iotevents:BatchAcknowledgeAlarm",
    "iotevents:CreateInput",
    "iotevents:DescribeDetector",
    "iotevents:UpdateDetectorModel",
    "iotevents:DeleteInput",
    "iotevents:TagResource",
    "iotevents:BatchEnableAlarm",
    "iotevents:CreateDetectorModel",
    "iotevents:BatchSnoozeAlarm",
    "iotevents:BatchPutMessage",
    "iotevents:BatchUpdateDetector",
    "iotevents:UntagResource",
    "iotevents:ListAlarmModelVersions",
    "iotevents:BatchResetAlarm",
    "iotevents:UpdateInput",
    "iotevents:ListAlarms",
    "iotevents:ListTagsForResource",
    "iotevents:DescribeInput",
    "iotevents:UpdateInputRouting",
    "iotevents:DeleteAlarmModel",
    "iotevents:ListDetectors",
    "iotevents:CreateAlarmModel",
    "iotevents:UpdateAlarmModel",
    "iotevents:DeleteDetectorModel",
    "iotevents:ListDetectorModelVersions",
    "logs:*",
    "logs:DeleteLogGroup",
    "logs:DeleteLogStream",
    "logs:CreateLogStream",
    "logs:DescribeSubscriptionFilters",
    "logs:CreateExportTask",
    "logs:StartQuery",
    "logs:PutMetricFilter",
    "logs:PutLogEvents",
    "logs:CreateLogGroup",
    "logs:ListTagsLogGroup",
    "logs:FilterLogEvents",
    "logs:TagLogGroup",
    "logs:PutRetentionPolicy",
    "logs:DescribeMetricFilters",
    "logs:DisassociateKmsKey",
    "logs:PutSubscriptionFilter",
    "logs:AssociateKmsKey",
    "logs:DescribeLogStreams",
    "logs:DescribeLogGroups",
    "logs:DeleteMetricFilter",
    "logs:DeleteSubscriptionFilter",
    "logs:GetLogGroupFields",
    "logs:UntagLogGroup",
    "logs:GetLogEvents",
    "logs:DeleteRetentionPolicy",
    "lookoutmetrics:*",
    "lookoutmetrics:DeactivateAnomalyDetector",
    "lookoutmetrics:GetDataQualityMetrics",
    "lookoutmetrics:PutFeedback",
    "lookoutmetrics:ListMetricSets",
    "lookoutmetrics:CreateAlert",
    "lookoutmetrics:GetAnomalyGroup",
    "lookoutmetrics:DeleteAnomalyDetector",
    "lookoutmetrics:ListAnomalyGroupSummaries",
    "lookoutmetrics:ListAlerts",
    "lookoutmetrics:ListAnomalyGroupTimeSeries",
    "lookoutmetrics:CreateAnomalyDetector",
    "lookoutmetrics:DescribeAnomalyDetector",
    "lookoutmetrics:DescribeMetricSet",
    "lookoutmetrics:BackTestAnomalyDetector",
    "lookoutmetrics:DeleteAlert",
    "lookoutmetrics:GetFeedback",
    "lookoutmetrics:UpdateAnomalyDetector",
    "lookoutmetrics:TagResource",
    "lookoutmetrics:ActivateAnomalyDetector",
    "lookoutmetrics:UntagResource",
    "lookoutmetrics:ListTagsForResource",
    "lookoutmetrics:DescribeAlert",
    "lookoutmetrics:DetectMetricSetConfig",
    "lookoutmetrics:ListAnomalyGroupRelatedMetrics",
    "lookoutmetrics:UpdateMetricSet",
    "lookoutmetrics:CreateMetricSet",
    "lookoutmetrics:UpdateAlert",
    "lookoutmetrics:DescribeAnomalyDetectionExecutions",
    "schemas:*",
    "schemas:DeleteSchema",
    "schemas:PutResourcePolicy",
    "schemas:UpdateDiscoverer",
    "schemas:TagResource",
    "schemas:StopDiscoverer",
    "schemas:CreateSchema",
    "schemas:DeleteRegistry",
    "schemas:StartDiscoverer",
    "schemas:PutCodeBinding",
    "schemas:GetCodeBindingSource",
    "schemas:ListDiscoverers",
    "schemas:UntagResource",
    "schemas:ListRegistries",
    "schemas:DescribeCodeBinding",
    "schemas:DeleteDiscoverer",
    "schemas:DescribeSchema",
    "schemas:CreateRegistry",
    "schemas:UpdateSchema",
    "schemas:DescribeDiscoverer",
    "schemas:DescribeRegistry",
    "schemas:GetResourcePolicy",
    "schemas:CreateDiscoverer",
    "schemas:ListTagsForResource",
    "schemas:DeleteSchemaVersion",
    "schemas:UpdateRegistry",
    "schemas:ListSchemas",
    "schemas:ListSchemaVersions",
    "schemas:SearchSchemas",
    "schemas:DeleteResourcePolicy",
    "schemas:ExportSchema",
    "kinesisanalytics:*",
    "kinesisanalytics:ListTagsForResource",
    "kinesisanalytics:DeleteApplicationOutput",
    "kinesisanalytics:UpdateApplication",
    "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "kinesisanalytics:AddApplicationReferenceDataSource",
    "kinesisanalytics:UntagResource",
    "kinesisanalytics:AddApplicationInput",
    "kinesisanalytics:StopApplication",
    "kinesisanalytics:TagResource",
    "kinesisanalytics:DeleteApplication",
    "kinesisanalytics:DescribeApplication",
    "kinesisanalytics:AddApplicationOutput",
    "kinesisanalytics:GetApplicationState",
    "kinesisanalytics:StartApplication",
    "rolesanywhere:*",
    "rolesanywhere:UntagResource",
    "rolesanywhere:TagResource",
    "appmesh:*",
    "appmesh:CreateMesh",
    "appmesh:ListVirtualNodes",
    "appmesh:DescribeVirtualService",
    "appmesh:DescribeRoute",
    "appmesh:DeleteRoute",
    "appmesh:DescribeGatewayRoute",
    "appmesh:DeleteVirtualService",
    "appmesh:DeleteGatewayRoute",
    "appmesh:DeleteVirtualRouter",
    "appmesh:UntagResource",
    "appmesh:ListRoutes",
    "appmesh:CreateVirtualNode",
    "appmesh:UpdateVirtualNode",
    "appmesh:StreamAggregatedResources",
    "appmesh:UpdateRoute",
    "appmesh:CreateRoute",
    "appmesh:DeleteVirtualGateway",
    "appmesh:DescribeVirtualGateway",
    "appmesh:DeleteMesh",
    "appmesh:ListVirtualServices",
    "appmesh:TagResource",
    "appmesh:UpdateVirtualGateway",
    "appmesh:CreateGatewayRoute",
    "appmesh:CreateVirtualGateway",
    "appmesh:DeleteVirtualNode",
    "appmesh:ListTagsForResource",
    "appmesh:UpdateGatewayRoute",
    "appmesh:UpdateVirtualRouter",
    "appmesh:ListVirtualGateways",
    "appmesh:DescribeVirtualRouter",
    "appmesh:DescribeVirtualNode",
    "appmesh:UpdateVirtualService",
    "appmesh:UpdateMesh",
    "appmesh:CreateVirtualService",
    "appmesh:CreateVirtualRouter",
    "appmesh:ListVirtualRouters",
    "appmesh:DescribeMesh",
    "appmesh:ListGatewayRoutes",
    "worklink:*",
    "worklink:UpdateFleetMetadata",
    "worklink:AssociateWebsiteAuthorizationProvider",
    "worklink:DescribeIdentityProviderConfiguration",
    "worklink:DeleteFleet",
    "worklink:DescribeAuditStreamConfiguration",
    "worklink:ListWebsiteCertificateAuthorities",
    "worklink:ListTagsForResource",
    "worklink:DescribeCompanyNetworkConfiguration",
    "worklink:UpdateAuditStreamConfiguration",
    "worklink:DescribeFleetMetadata",
    "worklink:SignOutUser",
    "worklink:RestoreDomainAccess",
    "worklink:ListDevices",
    "worklink:DescribeWebsiteCertificateAuthority",
    "worklink:UpdateDevicePolicyConfiguration",
    "worklink:TagResource",
    "worklink:AssociateDomain",
    "worklink:DisassociateWebsiteAuthorizationProvider",
    "worklink:DisassociateDomain",
    "worklink:DescribeDevicePolicyConfiguration",
    "worklink:UpdateCompanyNetworkConfiguration",
    "worklink:AssociateWebsiteCertificateAuthority",
    "worklink:DescribeDevice",
    "worklink:UntagResource",
    "worklink:DisassociateWebsiteCertificateAuthority",
    "worklink:DescribeDomain",
    "worklink:ListDomains",
    "worklink:RevokeDomainAccess",
    "worklink:ListWebsiteAuthorizationProviders",
    "worklink:UpdateIdentityProviderConfiguration",
    "worklink:SearchEntity",
    "worklink:UpdateDomainMetadata",
    "grafana:*",
    "grafana:UpdatePermissions",
    "grafana:DeleteWorkspace",
    "grafana:AssociateLicense",
    "grafana:UpdateWorkspace",
    "grafana:DisassociateLicense",
    "grafana:DeleteWorkspaceApiKey",
    "grafana:CreateWorkspaceApiKey",
    "grafana:ListTagsForResource",
    "grafana:DescribeWorkspace",
    "grafana:UntagResource",
    "grafana:UpdateWorkspaceAuthentication",
    "grafana:DescribeWorkspaceAuthentication",
    "grafana:TagResource",
    "grafana:ListPermissions",
    "execute-api:*",
    "execute-api:InvalidateCache",
    "execute-api:Invoke",
    "execute-api:ManageConnections",
    "private-networks:*",
    "private-networks:ListDeviceIdentifiers",
    "private-networks:DeleteNetwork",
    "private-networks:UpdateNetworkSitePlan",
    "private-networks:ListOrders",
    "private-networks:CreateNetwork",
    "private-networks:ListNetworkResources",
    "private-networks:DeactivateDeviceIdentifier",
    "private-networks:GetNetworkResource",
    "private-networks:ConfigureAccessPoint",
    "private-networks:ActivateDeviceIdentifier",
    "private-networks:UpdateNetworkSite",
    "private-networks:CreateNetworkSite",
    "private-networks:ListNetworkSites",
    "private-networks:GetDeviceIdentifier",
    "private-networks:GetNetworkSite",
    "private-networks:GetOrder",
    "private-networks:AcknowledgeOrderReceipt",
    "private-networks:GetNetwork",
    "private-networks:DeleteNetworkSite",
    "private-networks:ActivateNetworkSite",
    "kafka:*",
    "kafka:ListTagsForResource",
    "kafka:DescribeConfiguration",
    "kafka:UntagResource",
    "kafka:TagResource",
    "kafka:DescribeConfigurationRevision",
    "access-analyzer:*",
    "access-analyzer:GetAccessPreview",
    "access-analyzer:TagResource",
    "access-analyzer:UntagResource",
    "access-analyzer:UpdateArchiveRule",
    "access-analyzer:CreateAnalyzer",
    "access-analyzer:ApplyArchiveRule",
    "access-analyzer:GetAnalyzer",
    "access-analyzer:DeleteArchiveRule",
    "access-analyzer:ListAccessPreviews",
    "access-analyzer:ListTagsForResource",
    "access-analyzer:DeleteAnalyzer",
    "access-analyzer:GetFinding",
    "access-analyzer:GetArchiveRule",
    "access-analyzer:StartResourceScan",
    "access-analyzer:GetAnalyzedResource",
    "access-analyzer:ListArchiveRules",
    "access-analyzer:CreateAccessPreview",
    "access-analyzer:CreateArchiveRule",
    "access-analyzer:ListAccessPreviewFindings",
    "access-analyzer:ListFindings",
    "access-analyzer:ListAnalyzedResources",
    "access-analyzer:UpdateFindings",
    "aws-marketplace:*",
    "aws-marketplace:CancelChangeSet",
    "aws-marketplace:DescribeEntity",
    "aws-marketplace:StartChangeSet",
    "aws-marketplace:DescribeChangeSet",
    "appconfig:*",
    "appconfig:ListDeployments",
    "appconfig:CreateEnvironment",
    "appconfig:GetHostedConfigurationVersion",
    "appconfig:CreateHostedConfigurationVersion",
    "appconfig:GetConfigurationProfile",
    "appconfig:DeleteDeploymentStrategy",
    "appconfig:GetDeploymentStrategy",
    "appconfig:UpdateExtensionAssociation",
    "appconfig:ListEnvironments",
    "appconfig:GetConfiguration",
    "appconfig:UpdateConfigurationProfile",
    "appconfig:ValidateConfiguration",
    "appconfig:UpdateExtension",
    "appconfig:ListConfigurationProfiles",
    "appconfig:DeleteApplication",
    "appconfig:DeleteEnvironment",
    "appconfig:UpdateEnvironment",
    "appconfig:GetDeployment",
    "appconfig:GetEnvironment",
    "appconfig:StartDeployment",
    "appconfig:ListHostedConfigurationVersions",
    "appconfig:DeleteConfigurationProfile",
    "appconfig:StopDeployment",
    "appconfig:GetExtension",
    "appconfig:UpdateDeploymentStrategy",
    "appconfig:CreateConfigurationProfile",
    "appconfig:GetApplication",
    "appconfig:DeleteHostedConfigurationVersion",
    "appconfig:UntagResource",
    "appconfig:DeleteExtension",
    "appconfig:StartConfigurationSession",
    "appconfig:ListTagsForResource",
    "appconfig:GetLatestConfiguration",
    "appconfig:GetExtensionAssociation",
    "appconfig:UpdateApplication",
    "appconfig:DeleteExtensionAssociation",
    "appconfig:TagResource",
    "sqlworkbench:*",
    "sqlworkbench:CreateChart",
    "sqlworkbench:ListSavedQueryVersions",
    "sqlworkbench:DeleteNotebookCell",
    "sqlworkbench:GetChart",
    "sqlworkbench:ListTagsForResource",
    "sqlworkbench:AssociateConnectionWithTab",
    "sqlworkbench:TagResource",
    "sqlworkbench:DeleteConnection",
    "sqlworkbench:UpdateSavedQuery",
    "sqlworkbench:UpdateChart",
    "sqlworkbench:UpdateNotebookCellLayout",
    "sqlworkbench:GetNotebook",
    "sqlworkbench:CreateNotebook",
    "sqlworkbench:GetSavedQuery",
    "sqlworkbench:ListNotebookVersions",
    "sqlworkbench:UpdateNotebookCellContent",
    "sqlworkbench:CreateNotebookVersion",
    "sqlworkbench:UpdateNotebook",
    "sqlworkbench:GetConnection",
    "sqlworkbench:UntagResource",
    "sqlworkbench:AssociateConnectionWithChart",
    "sqlworkbench:DuplicateNotebook",
    "sqlworkbench:DriverExecute",
    "sqlworkbench:ExportNotebook",
    "sqlworkbench:CreateNotebookCell",
    "sqlworkbench:GetNotebookVersion",
    "sqlworkbench:ImportNotebook",
    "sqlworkbench:BatchGetNotebookCell",
    "sqlworkbench:CreateSavedQuery",
    "sqlworkbench:DeleteChart",
    "sqlworkbench:RestoreNotebookVersion",
    "sqlworkbench:CreateConnection",
    "sqlworkbench:UpdateFileFolder",
    "sqlworkbench:UpdateConnection",
    "sqlworkbench:CreateNotebookFromVersion",
    "sqlworkbench:DeleteSavedQuery",
    "sqlworkbench:DeleteNotebook",
    "sqlworkbench:AssociateQueryWithTab",
    "sqlworkbench:DeleteNotebookVersion",
    "redshift:*",
    "redshift:AuthorizeClusterSecurityGroupIngress",
    "redshift:DisassociateDataShareConsumer",
    "redshift:ModifyClusterSnapshotSchedule",
    "redshift:DeleteSnapshotSchedule",
    "redshift:ResizeCluster",
    "redshift:ModifyCluster",
    "redshift:ResetClusterParameterGroup",
    "redshift:ModifyAquaConfiguration",
    "redshift:CreateClusterSnapshot",
    "redshift:ModifyClusterDbRevision",
    "redshift:CreateClusterUser",
    "redshift:CreateUsageLimit",
    "redshift:DeleteCluster",
    "redshift:CreateHsmConfiguration",
    "redshift:DeleteHsmConfiguration",
    "redshift:DescribeResize",
    "redshift:ModifyClusterParameterGroup",
    "redshift:CreateClusterSubnetGroup",
    "redshift:DeleteClusterSnapshot",
    "redshift:CreateHsmClientCertificate",
    "redshift:ModifyClusterIamRoles",
    "redshift:DeleteSnapshotCopyGrant",
    "redshift:BatchModifyClusterSnapshots",
    "redshift:CancelResize",
    "redshift:CreateClusterSecurityGroup",
    "redshift:DescribeLoggingStatus",
    "redshift:CreateCluster",
    "redshift:ModifySnapshotSchedule",
    "redshift:DescribeClusterParameters",
    "redshift:RebootCluster",
    "redshift:RestoreFromClusterSnapshot",
    "redshift:ModifySnapshotCopyRetentionPeriod",
    "redshift:DisableLogging",
    "redshift:ModifyClusterSnapshot",
    "redshift:CreateClusterParameterGroup",
    "redshift:DeleteUsageLimit",
    "redshift:CopyClusterSnapshot",
    "redshift:RevokeClusterSecurityGroupIngress",
    "redshift:EnableSnapshotCopy",
    "redshift:PauseCluster",
    "redshift:DeleteClusterParameterGroup",
    "redshift:AssociateDataShareConsumer",
    "redshift:JoinGroup",
    "redshift:EnableLogging",
    "redshift:DeleteTags",
    "redshift:ModifyEventSubscription",
    "redshift:CreateEventSubscription",
    "redshift:CreateSnapshotSchedule",
    "redshift:DeauthorizeDataShare",
    "redshift:DisableSnapshotCopy",
    "redshift:DeleteHsmClientCertificate",
    "redshift:CreateTags",
    "redshift:ResumeCluster",
    "redshift:DescribeSnapshotSchedules",
    "redshift:RejectDataShare",
    "redshift:ModifyClusterSubnetGroup",
    "redshift:DeleteClusterSubnetGroup",
    "redshift:GetClusterCredentials",
    "redshift:AuthorizeDataShare",
    "redshift:BatchDeleteClusterSnapshots",
    "redshift:DescribeTags",
    "redshift:DeleteClusterSecurityGroup",
    "redshift:RevokeSnapshotAccess",
    "redshift:RotateEncryptionKey",
    "redshift:DeleteEventSubscription",
    "redshift:CreateSnapshotCopyGrant",
    "redshift:ModifyUsageLimit",
    "redshift:DescribeUsageLimits",
    "redshift:RestoreTableFromClusterSnapshot",
    "redshift:AuthorizeSnapshotAccess",
    "directconnect:*",
    "directconnect:DeleteConnection",
    "directconnect:UpdateConnection",
    "directconnect:AllocatePublicVirtualInterface",
    "directconnect:AllocateTransitVirtualInterface",
    "directconnect:AllocateConnectionOnInterconnect",
    "directconnect:DescribeDirectConnectGatewayAttachments",
    "directconnect:StartBgpFailoverTest",
    "directconnect:CreateLag",
    "directconnect:AllocateHostedConnection",
    "directconnect:DescribeRouterConfiguration",
    "directconnect:ConfirmTransitVirtualInterface",
    "directconnect:DeleteDirectConnectGatewayAssociation",
    "directconnect:DescribeLoa",
    "directconnect:AssociateHostedConnection",
    "directconnect:DescribeConnectionsOnInterconnect",
    "directconnect:CreatePublicVirtualInterface",
    "directconnect:DescribeVirtualInterfaces",
    "directconnect:CreateDirectConnectGatewayAssociation",
    "directconnect:DisassociateConnectionFromLag",
    "directconnect:CreateDirectConnectGatewayAssociationProposal",
    "directconnect:DescribeInterconnects",
    "directconnect:UpdateVirtualInterfaceAttributes",
    "directconnect:CreateInterconnect",
    "directconnect:DescribeTags",
    "directconnect:CreateConnection",
    "directconnect:DescribeLags",
    "directconnect:CreatePrivateVirtualInterface",
    "directconnect:AssociateConnectionWithLag",
    "directconnect:DeleteLag",
    "directconnect:DescribeConnections",
    "directconnect:DeleteInterconnect",
    "directconnect:DescribeConnectionLoa",
    "directconnect:CreateTransitVirtualInterface",
    "directconnect:AllocatePrivateVirtualInterface",
    "directconnect:DescribeDirectConnectGatewayAssociations",
    "directconnect:DisassociateMacSecKey",
    "directconnect:UpdateDirectConnectGateway",
    "directconnect:AssociateVirtualInterface",
    "directconnect:ConfirmConnection",
    "directconnect:ConfirmPublicVirtualInterface",
    "directconnect:DeleteBGPPeer",
    "directconnect:AcceptDirectConnectGatewayAssociationProposal",
    "directconnect:DeleteDirectConnectGateway",
    "directconnect:DescribeDirectConnectGateways",
    "directconnect:DescribeInterconnectLoa",
    "directconnect:StopBgpFailoverTest",
    "directconnect:TagResource",
    "directconnect:UntagResource",
    "directconnect:UpdateLag",
    "directconnect:DescribeHostedConnections",
    "directconnect:AssociateMacSecKey",
    "directconnect:DeleteVirtualInterface",
    "directconnect:DescribeDirectConnectGatewayAssociationProposals",
    "directconnect:ConfirmPrivateVirtualInterface",
    "directconnect:ListVirtualInterfaceTestHistory",
    "directconnect:CreateBGPPeer"
]