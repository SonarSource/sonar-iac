# The commit-sha that will be provided to SonarSource/gh-action_releasability will be the latest commit sha of the branch that triggered the workflow.
# When triggering the workflow, you can modify this with the "Run workflow from branch" property.
# The LATEST_VERSION will be the latest version of the artifact that is available in the Artifactory repository from sonarsource-public-builds.

name: Releasability Check

on:
  workflow_dispatch:

jobs:
  releasability-job:
    name: Releasability check
    runs-on: ubuntu-latest
    permissions:
      id-token: write      # required by SonarSource/vault-action-wrapper
      contents: read       # required by checkout
    steps:
      - name: Retrieve Vault Secrets
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader access_token | ARTIFACTORY_PASSWORD;
            development/artifactory/token/{REPO_OWNER_NAME_DASH}-private-reader role | ARTIFACTORY_ROLE;
            development/kv/data/repox url | ARTIFACTORY_URL;

      - name: Get the latest available version number
        id: latest-version
        env:
          ARTIFACTORY_PRIVATE_USERNAME: vault-${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_ROLE }}
          ARTIFACTORY_PRIVATE_PASSWORD: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_PASSWORD }}
          ARTIFACTORY_URL: ${{ fromJSON(steps.secrets.outputs.vault).ARTIFACTORY_URL }}
          REPO: sonarsource-public-builds
        run: |
          echo LATEST_VERSION=$(curl -s -u ${ARTIFACTORY_PRIVATE_USERNAME}:${ARTIFACTORY_PRIVATE_PASSWORD} \
          "${ARTIFACTORY_URL}/api/search/latestVersion?g=org.sonarsource.iac&a=sonar-iac-plugin&repos=${REPO}") >> "$GITHUB_OUTPUT"

      - uses: SonarSource/gh-action_releasability@v1.0.4
        id: releasability
        with:
          branch: ${{ github.ref_name }}
          commit-sha: ${{ github.sha }}
          organization: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          version: ${{ steps.latest-version.outputs.LATEST_VERSION }}

